 The main benefit of the layouts is that you can combine them one into another and you can do that with a panel. A panel is a component that has other components inside. A panel can then be added to the top component (frame or applet) or to another panel and be placed itself as defined by layout and constraints of this parent component. It has its own layout and is normally used to place a group of related components like buttons, for instance: 


Figure 9.16: Java applet example.


 
Test your knowledge

Question 9.5: We want to create a basic FTP (File Transfer Protocol) software which looks like this:


Application name





Tool




Tool




Tool




Tool




Tool




Tool




Tool




Tool




Tool








Local folder










Remote folder









Status bar


On the top, it should display the name of the software. Under the name, it should display tool buttons that are displayed from the left to the right and the sequence of buttons is wrapped if it reaches the right border. Under the buttons, it should display two lists of files. The widths of these two lists should be the same and they should use all the width of the application. Under these two lists, it should display a status bar.
Create this display on an applet.

Answer

First, we have to analyze the display. We have four separate areas of components:

The name area
The tool area
The folder area
The status area

So we have to first separate these areas and then we will split these areas into components.



Answer 9.5: Answer5.java


 1 import java.applet.Applet;
 2 import java.awt.BorderLayout;
 3 import java.awt.Button;
 4 import java.awt.FlowLayout;
 5 import java.awt.GridLayout;
 6 import java.awt.Label;
 7 import java.awt.Panel;
 8 
 9 public class Answer5 extends Applet {
10 
11     Label applicationNameLabel = new Label("Wikibooks FTP");
12     Button tool1Button = new Button("Tool");
13     Button tool2Button = new Button("Tool");
14     Button tool3Button = new Button("Tool");
15     Button tool4Button = new Button("Tool");
16     Button tool5Button = new Button("Tool");
17     Button tool6Button = new Button("Tool");
18     Button tool7Button = new Button("Tool");
19     Button tool8Button = new Button("Tool");
20     Button tool9Button = new Button("Tool");
21     Label localFolderLabel = new Label("5 files");
22     Label remoteFolderLabel = new Label("3 files");
23     Label statusBarLabel = new Label("Available");
24 
25     /**
26      * Init.
27      */
28     public void init() {
29         setLayout(new BorderLayout());
30 
31         // The application name
32         add(applicationNameLabel, BorderLayout.NORTH);
33 
34         // The center
35         Panel centerPanel = new Panel();
36         centerPanel.setLayout(new BorderLayout());
37 
38         // The buttons
39         Panel buttonPanel = new Panel();
40         buttonPanel.setLayout(new FlowLayout(FlowLayout.LEFT));
41         buttonPanel.add(tool1Button);
42         buttonPanel.add(tool2Button);
43         buttonPanel.add(tool3Button);
44         buttonPanel.add(tool4Button);
45         buttonPanel.add(tool5Button);
46         buttonPanel.add(tool6Button);
47         buttonPanel.add(tool7Button);
48         buttonPanel.add(tool8Button);
49         buttonPanel.add(tool9Button);
50         centerPanel.add(buttonPanel, BorderLayout.CENTER);
51 
52         // The local and remote folders
53         Panel folderPanel = new Panel();
54         folderPanel.setLayout(new GridLayout(0, 2, 2, 2));
55         folderPanel.add(localFolderLabel);
56         folderPanel.add(remoteFolderLabel);
57         centerPanel.add(folderPanel, BorderLayout.SOUTH);
58 
59         add(centerPanel, BorderLayout.CENTER);
60 
61         // The status bar
62         add(statusBarLabel, BorderLayout.SOUTH);
63     }
64 }





The totality of the components is put in a border layout so that we have three vertical areas of elements.
The area in the north is the area of the title.
The area in the center contains the buttons and the folders and will be split later.
The area in the south is the area of the status bar.
The area in the center is now split with a border layout into a button area in the center and a folder area in the south.
The button area is then split with a flow layout.
The folder area is now split with a grid layout.


We use a grid layout to display the folders to have the same width between the two components. We can't use a grid layout to separate the name, the buttons, the folders and the status bar as these areas have not the same height. The buttons must be at the center of the border layout as the number of row of buttons would be badly calculated and the last rows of buttons would not appear.



   <img src="//en.wikibooks.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /> (window.RLQ = window.RLQ || []).push(function () {
mw.log.warn("Gadget \"commons-file\" was not loaded. Please migrate it to use ResourceLoader.  See \u003Chttps://en.wikibooks.org/wiki/Special:Gadgets\u003E.");mw.log.warn("Gadget \"toolboxcompat\" was not loaded. Please migrate it to use ResourceLoader.  See \u003Chttps://en.wikibooks.org/wiki/Special:Gadgets\u003E.");
} ); 