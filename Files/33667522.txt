produce random digits start repeating sooner people imagine method 
produce random strings consist digits repeat dont exact number hundreds nextint repeat string theoretically possibilities repeat avoid repeat advice hashmap save record avoid repeat works generator generate repeat generate method lower repetition rate 

blockquote repeat string theoretically possibilities repeat avoid repeat blockquote variation href https en wikipedia org wiki birthday paradox rel nofollow birthday paradox repeats occur people imagine realize unique number em em previous number list previous numbers grows quickly case numbers match numbers chance repeat randomly generated numbers problem compounded small error code bound href https docs oracle javase docs api util random html nextint int rel nofollow exclusive generate digits means youre generating numbers chance repeat randomly generated numbers close observed minor things ul li generating random digits individually simpler generate number pad digits wide href https docs oracle javase docs api lang string html format lang string lang object rel nofollow padding li li creating random number generator method call inefficient suggest create static instance bit sloppy fine call hammer result integer li ul strong prevent repeats strong current youre map store previous numbers extremely inefficient em em generated number calls slow search em previous number em search fast entries em key em youre moment effectively heavyweight ul li hash based structure detect duplicates fine make href https docs oracle javase docs api util hashset html rel nofollow set map call method generate digit ids guaranteed repeat added check exhaustion ids situation code fall infinite loop hundred ids em moment em potential infinite loop ticking time bomb hard find problem declared method protect method multiple threads thread wasnt needed li li taking advantage small range numbers href https docs oracle javase docs api util bitset html rel nofollow work compact memory li li degrade performance number generated ids grows close maximum generated ids expect times discovering free id nicer solution taking advantage small range numbers stuff ids array generate id select random remaining bit thought works efficient doesnt search previous values check duplicates li li clever beast called href https en wikipedia org wiki linear feedback shift register rel nofollow linear feedback shift register generate shuffled sequence elements memory store shuffled form put generate random numbers range producing number em em catch random order random order time high quality randomness shuffle deck cards special cases extremely efficient li li final possibility ids em random em order silly question lets overlook easy providing unique ids li ul 