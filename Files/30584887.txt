consumer function lambda ambiguity 
overloaded method takes consumer function object returns generic type matches consumer function thought fine call method lambda expression error indicating reference method ambiguous based reading href http docs oracle javase specs jls se8 html jls html jls jls identify potentially applicable methods compiler lambda void block matches consumer method lambda return type matches function method put sample code fails compile found href http stackoverflow questions lambda expression method overloading doubts similar stackoverflow post turned compiler bug case similar bit complicated bug wanted make misunderstanding language spec lambdas 8u45 latest fixes change method calls wrapped block compile adds additional verbosity auto formatters reformat multiple lines 

line ambiguous reread linked jls chapter blockquote lambda expression potentially compatible functional interface type true ul li arity target types function type arity lambda expression li li target types function type void return lambda body statement expression void compatible block li li target types function type void return type lambda body expression compatible block li ul blockquote case href http docs oracle javase specs jls se8 html jls html jls statement expression method invocation statement expression method void simply write makes sense compiles perfectly method side effect compiler doesnt returns cares return lambda qualifies expression ambigue expression em statement expression em call mapped problem change create href http docs oracle javase specs jls se8 html jls html jls compatible block matches qualify em void compatible block em problems blocks block qualifies compatible void compatible ambiguity ambigue block endless loop case bit tricky surely qualifies em statement expression em matched matches expression spec href http docs oracle javase specs jls se8 html jls html jls method invocation expression expression limited href http docs oracle javase specs jls se8 html jls html jls blockquote compile time declaration void method invocation top level expression expression expression statement forinit forupdate part statement compile time error occurs method invocation produces situation needed blockquote compiler perfectly specification determines lambda body qualified expression return type void makes exception case statement expression considered ambiguity statements compile specification ecj compiler produces error messages code general id suggest avoid overloading methods overloads number parameters difference accepted functional interface functional interfaces arity problems lambda problems method references select names methods case 