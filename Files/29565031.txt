reentrantreadwritelock multiple reading threads 
good day question relating reentrantreadwritelocks solve problem multiple reader threads operate parallel data structure writer thread operate reader thread active implementing reentrantreadwritelocks time measurement reader threads locking aswell dont supposed happen wondering implemented wrong implemented reading method called threads measuring time reading method executed sequentially writing method invoked idea wrong advance cheers edit sscce hope clear parts inside read lock reads writes multiple threads performing writes thread performs reads reading made array works understanding code inside read locks works fine multiple threads long write method read locks added 

code horribly broken worry performance implication code thread em synchronize mutable variable em code ul li read contents array position synchronization possibly reading hopelessly outdated written thread inside block li li lock object read mind identity objects href http docs oracle javase docs api lang integer html valueof int rel nofollow created auto boxing unspecified range li li read contents array position li li subtract auto box result yielding em em object cases li li store object array position li ul implies threads write array position concurrently lock instances found unsynchronized read opening possibility data races implies threads block array positions positions happen happened represented instance pre initializing array values range good recipe close single thread performance small values values guaranteed represented instance didn experience pre initialized array hr summarize works object instances variables won compile variables synchronizing objects synchronization synchronize mutable variables thread concurrent access accounts href http docs oracle javase docs api util concurrent atomic atomicinteger html rel nofollow solution instance account change balance updated thread methods completeness guess question arise withdraw process forbidding taking money included replacing line hr writing remembered class href http docs oracle javase docs api util concurrent atomic atomicintegerarray html rel nofollow fits kind task 