double checked locking volatile 
read href http stackoverflow questions solve double checked locking broken declaration question double checked locking aim lazy loading field singleton work volatile attribute field object changed initialization testing final approach benefit possibly faster access time due needing volatile keeping simplicity reusable publisher class hr tested jcstress safedclfinal worked expected unsafedclfinal inconsistent expected point works prove wrong compiled run testing code modified singleton testing classes tested work href http docs oracle javase specs jls se6 html memory html docs hr work belive work based href http docs oracle javase specs jls se7 html jls html jls oracle doc blockquote usage model final fields simple set final fields object objects constructor write reference object constructed place thread objects constructor finished strong object thread thread correctly constructed version objects final fields strong versions object array referenced final fields date final fields blockquote 

things dangerous bit nervous people cheat finals language tool deal inter thread consistency relevant approach href http shipilev net blog public construction publication initialization laymans terms works yields proper synchronization observe null words code correct drop check altogether extend entire method body guarantees iff null fully constructed fields visible recovers racy read carries field published bets layman terms premature publication disfunctional putting final field reading back publishing unsafely similar putting naked write careful make fallback read lock discover null em em read return statement ruin correctness setting legitimate race edit entire thing object publishing covered internally cut middleman publish edit href https www securecoding cert org confluence display lck10 correct form double checked locking idiom lck10 correct form double checked locking idiom discussion comments 