correctly configure remember option spring security project ldap authentication 
pretty spring mvc problem understand implement remember function login page working spring project strong release strong version spring web application spring security strong ldap strong handle users login project login page named strong login jsp strong previous code snippet checkbox represent strong remember strong choice previous strong login jsp strong page problem access access application credential check remember checkbox work infact access application insert credential read official documentation find implement configure behavior sending cookie browser cookie detected future sessions causing automated login place explained href http docs spring io spring security site docs snapshot reference html remember html rel nofollow http docs spring io spring security site docs snapshot reference html remember html understand ways ol li strong hashing preserve security cookie based tokens strong li li strong database persistent storage mechanism store generated tokens strong li ol doubts means assertions difference approaches documentation read blockquote implemementations require strong userdetailsservice strong authentication provider doesn strong userdetailsservice strong strong ldap strong provider won work strong userdetailsservice strong bean strong application context strong blockquote project user authentication made strong ldap strong reading documentation strong userdetailsservice strong interface implemented custom concrete class loads user specific data doubts exatly strong userdetailsservice strong declare strong application context strong spring security configuration file strong spring security xml strong spring configuration file strong root context xml strong 

strong means assertions strong basically remember functionality things ol li successful login creates rememeber browser cookie token based username password token computed persisted db needed fly computed hash user password li li user access secured page session session expired timeout rememberme service autologin user reversing process cookie check userdetails hash check persisted token db li ol strong difference approaches strong em tokenbasedremembermeservices em ol li hashing user details preserve security cookie based tokens li li hash password solution potentially vulnerable cookie captured li ol persistenttokenbasedremembermeservices ol li database persistent storage mechanism store generated tokens li li unique series identifier user identifies initial login user remains constant time user logged automatically persistent session random token regenerated time user logs persisted remember functions combination randomly generated series token persisted making brute force attack li ol strong usecase strong spring security configuration file spring security xml 