calculate worst case time complexity recursive function 
dont efficient create faster implementation preferably binary search sets relevant created count variable times method called times subset sum algorithm display subsets add target sum case wasnt specifically stated problem algorithm realized concept question efficient program method calls indicator output 

blockquote question efficient program method calls indicator blockquote derive asymptotic run time algorithm hands dirty em manually em track method calls algorithm runs isnt em reliable em em reasonable em derive runtime algorithm start figure fast slow algorithm runs start deriving recurrence analyzing run time line weve analyzed line derive recurrence em master theorem em attempting em recursion tree em messy confusing fast recurrence solve recurrence em substitution method em set initial guess itll exponential br h2 upper bound h2 hr imply proposition holds true means write recurrence attempt prove guess holds true br h2 lower bound h2 hr imply proposition holds true means write recurrence attempt prove guess holds true br h2 conclusion h2 hr weve prove algorithm em em definition basically algorithms time complexity em slow em 