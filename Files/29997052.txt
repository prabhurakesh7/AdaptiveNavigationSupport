reason adding default static methods interfaces 
introduced default static methods interfaces concrete implementations interface default static methods reason claimed add kind methods ensure binary compatibility code written older versions interfaces question ul li distort interface original concept suppose fully abstract order support existing architectural problems li li difference abstract class version interface ability class extend multiple interfaces li ul 

blockquote reason claimed add kind methods ensure binary compatibility code written older versions interfaces blockquote applies default methods static methods omits context href http cr openjdk net briangoetz lambda lambda state final html goetz state lambda blockquote purpose default methods enable interfaces evolved compatible manner initial publication blockquote main goal em interface evolution em addition methods method added interface existing classes implement interface missing implementation incompatible compatible implementation provided default methods blockquote distort interface original concept suppose fully abstract order support existing architectural problems blockquote main intent interface href https docs oracle javase tutorial iandi createinterface html contract class implement alter position class hierarchy true prior interfaces purely abstract essential property interfaces default methods included interface heart specifies contract implementing class implementing class override default methods class complete control implementation href http stackoverflow questions final allowed interface methods default methods final blockquote difference abstract class version interface ability class extend multiple interfaces blockquote ability class extend multiple interfaces closely related difference interfaces abstract classes interfaces state primary difficulty allowing multiple inheritance superclass multiple times ancestry class superclass state times called diamond problem difference abstract classes define methods fields shared subclasses callers protected package private access levels interfaces public methods support private methods added implementation sharing default static methods interface finally static methods interfaces dont affect class inheritance part interfaces contract organizing utility methods convenient fashion common static methods interface static factory methods static methods werent allowed interfaces static factory methods put companion class allowing static methods interfaces lets methods grouped interface 