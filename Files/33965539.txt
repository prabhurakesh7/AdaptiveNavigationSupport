understanding collections reverseorder method 
overloaded definitions method class common sort array reverse order pass returned argument method lets implementation method openjdk class question made generic simply returned type explicitly calling whats benefit simple case found discussion href http stackoverflow questions collections reverseorder type parameter returnin collections reverseorder type parameter doesnt answer question interesting method method class takes arguments type sort array objects implementing invoke isnt casted 

blockquote collections reverseorder made generic blockquote function generic spare cast result specific type dont care dont cast case tells warnings enabled blockquote simply return reversecomparator reverse order blockquote reason package private access package turn begs question package private satisfies purists cringe member variables directly accessed final blame case accessors offer forward compatibility binary level completely unnecessary application code kind necessity language runtime part runtime important reason cast dont dont problem warnings enabled means reconsider practices short error invalid assignment change warning unchecked cast end ugly saves allowing blockquote compare takes arguments comparable type sort array objects implementing comparable integer invoke compare comparable comparable isnt casted comparable blockquote real question wonderful world generics type erasure explain term type erasure order fully understand concept generics introduced language afterthought reason implemented generics aware code backwards compatible code generics aware solution trick called type erasure basically means generic information completely stripped compilation means bytecode level thing difference whatsoever enables runtime implement single class acts reverse comparator object em em reverse direction comparison care nature objects compared free cast instance generic class instance class generic parameter case creators runtime casting fact assigned fine cast tricky compiler trust default compiler issues unchecked assignment warning casts turn swear annotation spares concerned 