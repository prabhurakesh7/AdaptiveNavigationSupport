performance benefits static empty array instance 
common practice extract constant empty array return static constant performance reasons returning directly create array object time method called wondering measurable performance benefit outdated folk wisdom empty array immutable vm roll empty arrays vm make basically free cost contrast practice returning empty string perfectly happy write 

interested actual performance difference idioms practical real world situations experience micro benchmarking tool question gave benchmark models typical realistic setting returned array looked discarded references hanging requirement reference equality interface implementations jmh benchmark result machine hotspot vm significant difference approaches case fact indistinguishable op case apparently jit compiler recognises returned array empty optimises loop piping black hole looping static array instance approach advantage theyre magnitude end answer usual depends hunch practical scenarios strong em performance em benefit factoring array creation significant strong fair ul li method contract freedom return empty array instance time li li guard problematic pathological usage patterns aim theoretical max performance li ul returning directly fine personally expressiveness concision introduce extra static field hr strange coincidence month wrote real performance engineer investigated problem href http shipilev net blog arrays wisdom ancients caching array rel nofollow section alexey shipil blog post arrays wisdom ancients blockquote expected strong effect whatsoever observed small collection sizes marginal improvement strong improvement justify caching array grand scheme things teeny tiny micro optimization make sense tight code wouldn care blockquote settles ill tick mark dedicate alexey 