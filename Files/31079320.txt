jar memory usage class file memory usage 
recently changed large application delivered jars individual class files jars hold class files problem run program jars classpath wildcard jars continually memory memory 2gb stop world garbage collections memory lower run exact program exploded jars class files javas memory usage stays lower lt 256mb stays happening oracles windows x64 windows server x64 packaging application jars change memory profile run program long time jars memory maximum limited 128mb problems dont memory leak jar files classpath img src http stack imgur paqkv jpg alt jar files classpath class files classpath img src http stack imgur tecgr jpg alt class files classpath edit accepted answer erlandsson explanation ugly quirk erlandsson 

thing memory totally heap interesting times memory garbage cleared gc heap em live em objects concerned write comment blockquote dont matters jvisualvm exe force gc mark sweep heap memory usage drop clearing heap memory blockquote matters strong lot strong means higher heap usage jars em garbage em memory consumed live objects garbage cleared gc loading classes jar files consume memory temporarily loading class files jar files opened seeked read requires operations temporary data simply opening specific file reading heap usage cleared gc additional memory consumption concerned write blockquote continually memory memory 2gb stop world garbage collections memory lower blockquote typical behavior gc runs jvm thinks jvm tune depending memory behavior strong edit strong jconsole images difference em committed em heap memory mb mb committed heap actual size heap vary set depending jvm thinks yield performance application increase decrease jar case jvm assigned bigger heap application due memory required initial class loading jvm thought bigger heap faster bigger heap committed memory memory running gc difference memory usage case strong bottom line strong extra usage garbage live objets concerned behavior actual problem memory reclaimed gc 