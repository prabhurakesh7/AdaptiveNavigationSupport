questions lots calculations 
series questions lots computations couldnt find answers online clarification ol li faster pass method parameters array terms li li faster method return setting contents passed method argument li li faster replace method calls actual calculations slower assuming li ol edit answers guys close thread quick question ol start li class repeatedly calculate statistics throwing create instance variables act containers avoid continuous de allocation li ol 

blockquote faster pass method parameters array terms blockquote depends array floats handy shouldnt make difference whatsoever constructing array time time assignments array possibly time construction array matter tight loop executed million times succession times life application blockquote faster method return float setting contents float passed method argument blockquote construct array float time return faster setting values pre existing array simply options involve setting values extra task creating array creating array fast millions times app quick succession benchmark save time blockquote faster replace method calls actual calculations slower assuming blockquote impossible builtin hotspot code optimizer pretty good discovering things optimizing benchmark making method make easier hotspot decide inlined discover dont overridden implementations method hr thing benchmarking application current version vm current codebase decide upgrade version vm discover performance characteristics change optimize matters application wasted effort focus algorithm space time complexities gains gains forever 