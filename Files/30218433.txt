travelling salesman find permutations equivalent 
optimize brute force method tsp runs reduce ignoring paths equivalent figure stop branches lead equivalent path recursive function develops path start finish start end node graph nodes intermediate path current solution 

isnt brilliant algorithm begin dont mind ill introduce small change general tip rid string strings terrible isnt string youre store array integers array integers stop removing items arrays put permute bit remember youve removed regions array items logically items logically removed importantly youre exploring search space dont annoying cases calculate distance youve created partial circuit prune entire trees lead worse solution improved starting reasonable upper bound obtained greedy nearest neighbour path local search opt simplest isnt bad youre improve pruning incomplete circuit completed add underestimation required distance complete pretty basic loop partial circuit back beginning shortest path make underestimation linear programming introduce variable road constrained range add constraint city sum variables roads adjacent city constrain roads youve chosen implicitly creating partial permutation set weight variables length roads minimize linear programming library hard code underestimation distance entire tour part finish dont add distance directly tend create small subtours cities bunch triangles map sort shitty estimation make banning subtrours subtour create constraint sum roads adjacent subtour youre allowed multiple times sum roads minimize subtours eliminate youll solution roads partially assigned doesnt give actual tour underestimation distance choices made half decent underestimation good small problems handle cities hope handle beginning improve estimation books written 