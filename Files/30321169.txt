performing fastest search collection 
ul li fast access elements index arraylist answer li li fast access elements key hashmap li li fast add removal elements linkedlist poor seeking performance li ul order perform fastest search basis data stored collection object collection code 

thing skipped comparing cache memory management optimisations effectively array means stored continuous space memory operating system optimisations byte memory accessed byte accessed faster case inserting deleting element beginning list elements array shifted adding deleting end middle iterating accessing element faster case search student strong strong id sounds map composite key recommend implementation search collection retrieve elements sorted key case idea remember access time access time achieve search collection find 