handling post request socket 
handle simple post request socket receive request header answer request problem body request read id open inputstream achive doesnt makes sense tips request body basically header message parameters post request em edit em turned strong input buffer length strong high shame worked changed em serversocket em em sslserversocket em send request em httpsurlconnection em problem checked buffer turned sending requests client sending requests chrome working fine assume wrong code send request tips wrong code 

code shown correct read http requests href http docs oracle javase docs jre api net httpserver spec sun net httpserver httpserver html rel nofollow href http docs oracle javase docs jre api net httpserver spec sun net httpserver httpsserver html rel nofollow classes implement http protocol manually read input line line reach empty line indicating end request headers headers read headers read remaining bytes request href http tools ietf org html rfc2616 section rel nofollow rfc section blockquote message length transfer length message length message body appears message transfer codings applied message body included message transfer length body determined order precedence ol li response message include message body 1xx responses response head request terminated empty line header fields entity header fields present message li li transfer encoding header field section present identity transfer length defined chunked transfer coding section message terminated closing connection li li content length header field section present decimal octets represents entity length transfer length content length header field lengths transfer encoding header field present message received transfer encoding header field content length header field li li message media type multipart byteranges ransfer length elimiting media type defines transfer length media type ust sender recipient arse presence request range header ultiple byte range specifiers client implies lient parse multipart byteranges responses range header forwarded proxy understand multipart byteranges case server delimit message methods defined items section li li server closing connection closing connection end request body leave possibility server send back response compatibility http applications http requests message body include valid content length header field server http compliant request message body content length server respond bad request determine length message length required wishes insist receiving valid content length http applications receive entities accept chunked transfer coding section allowing mechanism messages message length determined advance messages include content length header field identity transfer coding message include identity transfer coding content length content length message message body allowed field match number octets message body http user agents notify user invalid length received detected li ol blockquote semi pseudo code 