javafx canvas draw canvas visible 
porting internal automotive measuring application swing javafx multitouch support find render custom components visible motivation imagine screen tabs inside tab plot displaying live data measured time plot amount data large computer power render plot time simultaneously strong swing version strong swing version implementation behavior plot custom em jcomponent em overriden em paintcomponent em method plot drawing em paintcomponent em called important cases ul li component visible user selects tab plot li li live data change code calls em repaint em component turn results em paintcomponent em called strong strong component visible strong strong visible li ul complicated href http www oracle technetwork painting html rel nofollow http www oracle technetwork painting html details works roughly important thing plots visible processed redrawn strong porting javafx strong port behaviour javafx natural choice em canvas em em paintcomponent em callback mechanism draw directly em canvas getgraphicscontext2d em understand correctly calling draw operations context doesnt perform drawing pushes operations stack processed prism subsystem prism thread runs correct guessing pretty javafx actual painting prism discovers canvas visible tab selected obscured node lies visible portion screen correct nice case doesnt dont em start em rendering canvas visible preprocessing live data plotting lot cpu power rendering imagine interpolating thousands data points plot lines live data id strong test strong actual visibility plot em canvas em starting redraw notified strong strong visible javafx taking bad route altogether canvas dont confuse visibility em node visibleproperty em basically switches node rendering 

tab pane approach observe tab panes selected item selected tab code plot area independent displayed tab pane include plot indicating active assemble tab pane bind property correct canvas wont painted physically visible chance turn things data stream monitoring refine bindings 