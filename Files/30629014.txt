object id heap dump 
id heap dumps created jmap jmx identify live object running application versus older memory snapshot heap dump app tested obvioulsy hashcode jdi unique id debuggers checking code sun jvm hotspot utilities assume objects address memory tests sun misc unsafe didnt lead id heap dumps unsafe explanation href http zeroturnaround rebellabs dangerous code unsafe classes objects memory rel nofollow http zeroturnaround rebellabs dangerous code unsafe classes objects memory ideas 

ways create heap dump ol li inside jvm process href http openjdk net groups hotspot docs serviceability html battach rel nofollow dynamic attach mechanism li li external process href http openjdk net groups hotspot docs serviceability html bsa rel nofollow serviceability agent li ol cases object id heap dump memory address object moment creating dump relevant hotspot source code href http hg openjdk net jdk8u jdk8u hotspot file 8b16790cd73a src share vm services heapdumper cpp l565 rel nofollow href http hg openjdk net jdk8u jdk8u hotspot file 8b16790cd73a agent src share classes sun jvm hotspot utilities heaphprofbinwriter l993 rel nofollow object id meaningless dump file objects move memory garbage collection problem difficult impossible reliable address object application objects move heap representation object references vary architectures environments jvm options depending heap size href https github apangin helfy blob master test helfy objectaddress rel nofollow object address application guaranteed work jvm versions 