passing runtime meta data producer method cdi 
maintaining multi tenant application special metadata requests headers params identify specific tenants tenant custom configurations system override defaults configurations cache augmented database fronted ejb successfully custom configuration key tenant identifier needed tenant identifier present key retrieve default keys entry remote interfaces receive requests servlets web services retrieve identifiers setup contexts put properties producer methods leverage setup beans service tenants clients ideally favor cdi ejbs case reasonable thinking lines strategy stuck ol li create qualifier cdi container resolves configuration producer li li create configuration annotation lookup key desired configuration entry obtained li li create producer method takes parameter obtain annotation declared type field targeted class injected field declared enclosing class sweet scenario obtain instance enclosing class thinking doesnt make sense instance wouldnt ready dependencies created located injected li ol case cdi meant implemented 

solution extract significant tenant values request processing interceptor store holder work components filter cdi producer executed thread therfore run issues ejbs br retrieve tenant identifier method return config entry based annotation tenant id pseudo solution em threadlocal holder em em request filter tenant extraction em em config entry producer em option works thread pools requires transaction presence strong update strong br strong alternative approach request scoped bean data holder strong em requestscoped holder em em webfilter em extracts values request stores holder em cdi producer em data holder produces expected forinjection point bean injected cdi ejb jaxrs servlet component allowing pass variable web context contexts solution requires proper integration cdi container ejb web containers cdi spec 