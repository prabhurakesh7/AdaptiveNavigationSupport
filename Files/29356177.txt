jvm thread management os scheduling 
common jvm concurrency api futures implemented scala rely user code relinquish thread potentially waiting idle scala commonly referred avoiding blocking developer implement makes sense efficient inherent jvm prevents jvm switching context thread tasks thread idle implemented operating system process schedulers 

blockquote inherent jvm prevents jvm switching context thread tasks thread idle implemented operating system process schedulers blockquote switch cooperatively single blocking method wrapped implemented task resumed native thread waiting completion blocking action anymore principle jvm internal blocking methods arbitrary native code executed jni jvm wouldnt stack switch native threads theyre stuck native code href http www paralleluniverse quasar rel nofollow quasar understand implemented wrappers equivalents jdk internal methods channel based io bunch fibers futures running fibers perform kind user mode context switching wait completion edit jni em sufficient em limit user mode task switching opportunistic optimization fall back spinning additional native threads native code blocks thread issue linux asynchronous file io operations filesystem kernel support href http stackoverflow questions difference posix aio libaio linux question aio provide provided emulated additional blocking io threads introducing overhead wanted avoid place block thread pool spin additional threads avoid inter thread communication memory mapped files block thread force os scheduler suspend thread due page faults aware means cooperate virtual memory system avoid mention em em blocking calls vm implemented asynchronous equivalents provided os miss youll blocked thread blocked thread thread pools auto grow feature back square cases blocking thread filedescriptor io desirable pervasive required guarantee user mode switching break user mode switching em em jvm make hard guarantees implement native thread handling programmer code cooperatively assumptions thread pools executing futures mind cases eliminated 