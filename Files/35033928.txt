java8 filter compare lists lambda 
strong task strong lists entrys id datetime ids multiple differen datetimes list ids whith conditions ul li id list1 list2 li li id list1 list2 higher date li li id list1 higher count list2 li ul strong question strong streams strong examplecode strong strong output strong 

create intermediate entrys id mapped maximum date compare id maximum date update ids higher count create stores count id creating map grouping entrys id href https docs oracle javase docs api util stream collectors html groupingby util function function util stream collector rel nofollow classifier method reference returning id entry downstream collector collect id single result case href https docs oracle javase docs api util stream collectors html maxby util comparator rel nofollow collector comparing entrys date href https docs oracle javase docs api util comparator html comparing util function function rel nofollow comparator returns handle case noting collect maximum wrapped href https docs oracle javase docs api util stream collectors html collectingandthen util stream collector util function function rel nofollow applies finisher operation case optional retrieve date idea count map difference time downstream collector href https docs oracle javase docs api util stream collectors html counting rel nofollow counts number values key intermediate map easily filter elements map current id current entrys date stored map interested duplicates collected hr static imports make code cleaner 