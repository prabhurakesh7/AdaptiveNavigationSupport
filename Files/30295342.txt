xor operation 
problem program barring piece logic filled problems missing lines h1 problem statement h1 jack daniel friends encrypt conversation save interception detective agency invent cipher message encoded binary representation em em length em em written em em times shifted em em bits em em em em calculate xor column write number called em em xor ing numbers results encoded message em em em em daniel jack encoding algorithm asks daniel implement decoding algorithm daniel implement h2 input format h2 ul li line integers em em em em li li line string em em length em em consisting zeros li ul h2 output format h2 decoded message length em em consisting zeros h2 constraints h2 ul li li li li li li li guaranteed em em correct li ul h2 sample input h2 h2 sample output h2 h2 sample input h2 h2 sample output h2 h2 explanation input h2 h2 explainatin input h2 hr 

strong strong em read explenation simply solving challenges copy pasting answer em constraint exploit blockquote em bit untouched encryption algorithm em blockquote masks shifted assume bit encrypted part bit decrypted content bit easily reconstruct bit em xor em ed calculate bit xor ed basically maintain xor obtained values xor intially strong strong sample input derive bit mask bit form mask bit xor iteratively eventually result iterations longer additional submask writes times data result times submask dont xor data anymore xor bits result em unxoring em simply em xoring em bit result positions left mask em xor em state bit mask bit result bit result means state remains xor result bit result bit xor swap state process eventually end longer interested remaining bits terminate strong modified strong part em xor em bit 