choosing stream collections api 
prints maximum element objective achieved method code shorter cleaner read opinion similar examples mind conjunction understand infinite pipeline opposed limited memory jvm criteria deciding api reasons choosing api performance generally reason chose older api job cleaner shorter 

stream api swiss army knife complex operations combining tools effectively hand screwdriver standalone screwdriver convenient stream api includes things primitive operations require write lines introduce intermediate variables data structures boring loops drawing programmer attention actual algorithm stream api improve performance sequential code api return users group api designer decided return ways sorted converted array pass method happened accept array place find user matched criteria cases copying intermediate unnecessary move replace method modify caller code shorter work faster skip intermediate copying conceptual point stream api stream code written guidelines parallelized simply adding step boost performance helps expected operation executed sequentially href http gee cs oswego dl html streamparallelguidance html rel nofollow 1ms longer benefit parallelization havent simple parallel programming 