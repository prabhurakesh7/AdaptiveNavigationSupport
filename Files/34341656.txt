files list parallel stream performing slower collection parallelstream 
code fragment part method directory listing calls extract method file serializes resulting drug object xml exact code exact thing plain call directory listing calling resulting list machine quad core macbook pro build b27 processing files averages runs version seconds seconds version seconds seconds seconds parallel mode enormous difference method reads stream heavy work call final writes unchanged 

problem current implementation stream api current implementation unknown size source badly splits sources parallel tasks lucky files parallelization benefit current stream api implementation takes account returned unknown size returns split suffix returns splitting strategy ol li define current batch size current formula start elements increase arithmetically size reached elements li li consume input elements case paths array batch size reached input exhausted li li return iterating created array prefix leaving suffix li ol suppose files stream api asks estimated size returns stream api asks split collects elements underlying array splits estimated size estimated size stream api decides continue splitting bigger part split smaller part splitting tree parallel tasks executed elements chunk elements reports estimatedly elements stream api send bad thing stream api thinks splitting tasks useless estimated size uneven splitting input utilizes cpu cores max element processing takes roughly time element process wait biggest part elements complete maximum speedup 28x sequential processing takes seconds parallel stream seconds close actual numbers work solution completely fine input elements stored memory objects waste memory manually dump array backed list implementations created split evenly problems results additional speed case optimized impossible problem implementation tricky high priority problem jdk developers discussions topic mailing lists read paul sandoz message href http mail openjdk net pipermail core libs dev july html comments optimization effort 