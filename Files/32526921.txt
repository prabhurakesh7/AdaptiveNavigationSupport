stream processing fluent 
problem streams data processed sudden bulks requested complex stream flow parallelised merge streams issue stems fact data parsed large bulks minutes hours expect processing happen reads incoming data spread workload bulk processing counterintuitive question bulk collection occurs avoid input spliterator unknown size foreach terminal operation 

fundamental principle parallel streams em encounter em order doesn match em processing em order enables concurrent processing items sublists subtrees assembling correctly ordered result explicitly bulk processing makes mandatory parallel processing em ordered em streams behavior determined implementation implementation href http docs oracle javase docs api util spliterator html trysplit rel nofollow specification blockquote spliterator href http docs oracle javase docs api util spliterator html ordered rel nofollow returned spliterator cover strict prefix elements strong api strong ideal method efficiently traversal divides elements half allowing balanced parallel computation blockquote hr strategy fixed specification odd split simple case list filtered collected list encounter order retained prefix rule easy implement split prefix filter chunks concurrently add result prefix filtering list adding filtered suffix odd strategy impossible filter parts concurrently don join results correctly track items position entire operation joining geared items complicated performing chunk hr noticed applies encounter order retained spliterator doesn report characteristic required return prefix default implementation inherited href http docs oracle javase docs api util spliterators abstractspliterator html rel nofollow designed compatible ordered spliterators strategy implement split operation implementing unordered stream closer expected 