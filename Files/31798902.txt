scala interop sam m2 flag 
accepted technique writing scala code api functionalinterface sam lambda expressions lambda expressions inter op flag m2 href http www scala lang org news m2 rel nofollow http www scala lang org news m2 hoping type class anyval solution work scala functionx traits scala functionx extends anyref mix traits implicit anyval class implementation added achieve aim scala functionx global traits extending case project mine chosen provide api functionalinterfaces stream interfaces amp classes cater widest audience jvm based client languages closure scala kotlin client language api write bindings language specific idioms event accessing api feels clunky language btw interested comments question kotlin interop context 

scala program demonstrates side coin question scala functions masquerade lambdas syntactically idiomatically work fine creating implicit scala functions convert scala functions functionalinterface counterpart types caveat method advantage 8s ability optimize lambda creation invokedynamic approach results jvm object created scala function instance impact memory usage performance compared native lambdas flip side coin lambdas masquerade scala functions guess write code interop scala aim scala api callable justin johansson microblogging project clockwork implementation xpath xquery jvm martianodyssey twitter href https twitter martianodyssey rel nofollow https twitter martianodyssey 