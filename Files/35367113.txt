jersey webservice scalable approach download file reply client 
build webservice jersey downloads big file service returns client jersey read bytes buffer write bytes client socket blockquote blocking dont thread busy achieved blockquote code jersey download complete file write client thoughts 

client side async request isnt case fire forget cases client mix server side stream results server start sending data coming remote resource endpoint dummy remote resource serves file endpoint consumes make request run command line run make request server logging client keeping track results href http stack imgur 7k4qc gif rel nofollow img src http stack imgur 7k4qc gif alt enter image description point remote server logging happening time client resource logging shows client doesnt wait receive entire file starts sending bytes starts receiving h3 things h3 ul li small buffer size testing small 1mb file didnt wait large file testing imagine large files work increase buffer size larger li li order smaller buffer size set jersey property href https jersey net apidocs jersey org glassfish jersey server serverproperties html outbound content length buffer rel nofollow reason jersey internal buffer size byte chunks data flush bytes buffered disabled li li thread executors explicitly creating threads dont thread holding thread containers thread pool li ul hr h2 update h2 managing threads executor annotate client resource jersey manage threads 