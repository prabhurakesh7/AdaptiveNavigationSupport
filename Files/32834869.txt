system arraycopy constant length 
playing jmh href http openjdk net projects code tools jmh http openjdk net projects code tools jmh stumbled strange result benchmarking ways make shallow copy array observe expected results looping array bad idea significant difference performance wise quarter slower arrays length hard coded wait slower idea results throughput pre class lang prettyprint override benchmark class pre class lang prettyprint override 

usual kind questions quickly answered studying generated code jmh linux windows run benchmark jdk 8u40 make scores comprehensible benchmarks perform differently lets dissect dropped lines matter l1 dcache stores llc load hm stores constant case conveniently highlights hot parts assembly pesky consuming significant time zeroes newly allocated array test jvm correlate overwriting entire target array pre diving actual array copy generated code jdk 9b82 latest folds patterns zeroed copy confirm nanobenchmarks arraycopy susceptible weird alignment induced performance differences vectorized copying stubs horror story dont courage 