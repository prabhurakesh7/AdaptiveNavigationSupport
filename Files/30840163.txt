spring framework performance critical proxy application 
created servlet tomcat application functions ul li performs http basic authentication connects user role database li li works security facade geodata servers li li forwards requests authorization tests li li case response xml data performs manipulation changing urls deleteting xml elements changing content stax task li li logs information response database li ul connecting user database extend capabilities authorization components size response data reaches form kb mb spring introduce spring framework application strong edit strong question framework spring minimal performance loss strong edit strong community programmers place question 

writing code thing analyze require spring framework problem facing current architecture size response data stokes shouldnt reason write code design existing code scale application flipside primary upside writing code spring cut boiler plate code instance dont explicitly write code creating jdbc connection database amp spring jdbc template spring facilitates features href https en wikipedia org wiki convention configuration rel nofollow convention configuration require write code framework written keeping mind performance optimization issues spring reducing latency app 