create custom compiler warnings 
similar implementing lang autocloseable interface compiler warning indicating generated case wrapper synchronized collection wrapper internal semaphore prevent concurrent modification collection atomic operations collection case semaphore acquired released internally lock acquired externally providing unique key operations executed collection key released end transaction goal create compiler warning lock acquired released method prevent deadlock alternative design solution prevent acceptable kind fun problem insight 

christian hujer provide solid solution chose route working wrapper class resource synchronizedcollection ul li semaphore locking collection li li randomly generated id representing key held lock li li methods performing atomic operations collection acquire lock perform operation immediately release li li methods performing atomic operations collection accept id key perform requested operation provided key matches key holding lock li ul class provide sufficient protection collection wanted compiler warnings lock wasnt released accomplish resourcemanager implements lang autocloseable class ul li passed reference resource constructor li li acquires lock reference constructor li li api calling atomic methods resource key acquired construction li li close method overriding lang autocloseable releases lock acquired construction li ul resource manager created multiple operations performed resource compiler warning generated close called code path additionally manager created resource block lock automatically released block 