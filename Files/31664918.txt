scala intermediate terminal ops java8 
h1 java8 h1 write code java8 streams divided sections intermediate terminal operations afaik actual action hood iterations terminal ops intermediate ops appends strong apply strong classes iteration list sample code jdk8 h1 scala h1 write code reading hear terms explicitly sdk implementation loops recursion regular loops operation h1 questions h1 implementation thing faster strong strong strong multiples strong 

streams feature complete cousins scala iterators em save em ability compute parallel dont parallel computation times overhead worth big expensive jobs sort processing scala end streams manually specialized scala cases faster constant factor due recreating collections throw scala collections evaluate eagerly default collections option scala equivalent code wrote strong difference number collections created scala strong good idea adopt clear terminal operation language scalas iterator documentation stream docs great make exquisitely clear youre building description work youre finally scala em em class memoizes work dont compute time youre reusing dont recreate processing chain time squaring streams exhausted terminal operation scala save parallelism streams bit long time scala parallelizing collections implementation sufficiently superior performance point id recommend manual specialization thing streams int double long big performance win manually specialized queue operations overhead building intermediate collections scala 