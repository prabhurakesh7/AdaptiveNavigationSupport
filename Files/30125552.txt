jvm internally instantiate object abstract class 
abstract class concrete subclass create object subclass automatically calls super constructor jvm internally creating object abstract class constructor exists object jvm case abstract class constructor executed object created creating object abstract class default constructor executed mentioned href https docs oracle javase specs jls se8 html jls html jls rel nofollow doc 

blockquote true instantiate abstract class blockquote blockquote jvm internally create object abstract class blockquote common misunderstanding wouldnt unreasonable prototypical languages javascript jvm creates strong strong object class created case aspects object superclass subclass object object aggregate parts including parts method superclass overridden subclass fact methods fully qualified names dont conflict call superclasss version overridden method object call constructor answer mention couple things compiler dont source code ol li creating default constructor li li constructor calling constructor li li constructor adding call superclasss constructor call written constructor li ol heres code bits compiler adds filled lets touch point href http stackoverflow users thelostmind thelostmind usefully mentioned comment em constructors dont strong create strong objects strong initialize strong em jvm creates object runs constructors called em initializers em object give superclass chance initialize em part em object code step debugger fully understand ol li jvm creates object li li constructor called ol li strong thing strong constructor call superclasss constructor case constructor absolute requirement compiler logic constructor prior superclass constructor call ol li strong thing strong constructor call superclasss constructor li li constructor returns remainder constructor runs li ol li li constructor returns remainder constructor runs li ol li li object returned result expression li ol complicated instance fields initializers jls jvm specs full details 