array object explicitly indexes 
day learning told websites teachers arrays consecutive memory locations store number data type array object object references stored stack actual objects live heap object references point actual objects examples arrays created memory show reference array object stored stack reference points actual object heap explicit indexes pointing specific memory locations href http stack imgur ddmui jpg img src http stack imgur ddmui jpg alt internal working objects taught websites teachers recently href http chortle ccsu java5 notes chap49c ch49c html array row column numbers online notes stated arrays explicit indexes memory compiler provided array index number runtime href http stack imgur k71dk jpg img src http stack imgur k71dk jpg alt enter image description reading notes searched google matter contents issue ambiguous existent clarification matter array object indexes explicitly shown memory manage commands location array runtime 

blockquote array object explicitly indexes blockquote strong short answer strong strong longer answer strong typically theoretically strong full answer strong language specification virtual machine specification makes em em guarantees arrays implemented internally requires array elements accessed index number implementation fetches stores values indexed elements detail private implementation perfectly conformant jvm href https en wikipedia org wiki hash table rel nofollow hash table implement arrays case elements consecutive scattered memory em em record indexes elements send messages man moon writes array values labeled pieces paper stores lots filing cabinets jvm things happen practice typical jvm allocate storage array elements flat contiguous chunk memory locating element trivial multiply fixed memory size element index wanted element add memory address start array means array storage consists raw element values consecutively ordered index purpose storing index element elements address memory implies index vice versa dont diagram show explicitly stored indexes diagram simply labeling elements diagram technique contiguous storage calculating address element formula simple extremely quick memory overhead assuming programs allocate arrays big programs depend expect performance characteristics arrays jvm weird array storage perform poorly unpopular em practical em jvms constrained implement contiguous storage performs similarly couple variations scheme ol li stack allocated register allocated arrays optimization jvm determine href https en wikipedia org wiki escape analysis rel nofollow escape analysis array method array smallish fixed size ideal candidate object allocated directly stack calculating address elements relative stack pointer array extremely small fixed size elements jvm store elements directly cpu registers element accesses unrolled amp hardcoded li li packed boolean arrays smallest directly addressable unit memory computer typically bit byte means jvm byte boolean element boolean arrays waste bits bit element booleans packed memory packing isnt typically extracting individual bits bytes slower special consideration multithreading packed boolean arrays make perfect sense memory constrained embedded devices li ol variations requires element store index address details mentioned blockquote arrays store number data type blockquote correct fact arrays elements strong type strong important means elements strong size strong memory elements located simply multiplying common size technically true array element type reference type case element object varying size address refers object case actual runtime type objects referred element array subclass element type blockquote arrays consecutive memory locations blockquote discussed doesnt true surely true practice jvm allocate contiguous chunk memory operating system doesnt ends contiguous em physical ram em os give programs href https en wikipedia org wiki virtual memory rel nofollow virtual address space behaves contiguous individual pages memory scattered places including physical ram swap files disk regenerated needed contents blank extent pages virtual memory space resident physical ram arranged physical ram arbitrary order complex em page tables em define mapping virtual physical addresses os thinks dealing physical ram running emulator layers layers layers point bottom href https en wikipedia org wiki simulism rel nofollow find whats takes part purpose programming language specifications separate em apparent behavior em em implementation details em programming program specification free worrying internally implementation details relevant deal real world constraints limited speed memory blockquote array object object references stored stack actual objects live heap object references point actual objects blockquote correct stack object references em em stored stack local variables em em stored static fields instance fields array elements mentioned earlier clever implementations allocate objects directly stack cpu registers optimization effect programs apparent behavior performance blockquote compiler provided array index number runtime blockquote compiler virtual machine arrays href https docs oracle javase specs jvms se8 html jvms html jvms rel nofollow feature jvm compiler translate source code arrays simply bytecode arrays jvms job decide implement arrays compiler cares work 