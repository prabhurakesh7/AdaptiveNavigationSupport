property file tomcat 
neatbeans create class library project class testdb database jobs wrote config properties file config properties config properties located project folder class testdb test case property build project create jar file web application jar file db jobs include jar webapp bulid webproj war place webproj war tomcat run webapp property dont folder tomcat webapp place config properties solve question 

long answer cover background question bit confused answer clarify understanding web apps reusability generally important understand applications typically run multiple environments dev sit uat production include environment specifics binary jar war means binary single environment original j2ee assumption environment specifics managed container tomcat case href http stackoverflow questions configure tomcat properties file load db connection information answer referenced comment question basically container resources registered jndi application fair j2ee folks wide mark features jndi resource mechanism instance isnt commonly days applications answer question important thing recognise reason putting code seperate jar make reusable spring burst scene fundimental ways achieve reusability href https en wikipedia org wiki dependency injection rel nofollow dependency injection spring href https en wikipedia org wiki dependency injection rel nofollow dependency injection complicated passing resources object time create object class instantiated doesnt solve problem instantiating place responsiblity code simple instantiate include properties file wars classpath instantiation database specific point youre loading properties file war stated makes war environment specific solve exploded war symlink environment configuration context file place context file directory structure symlink properties loaded releaseable components application configuration simply unpacked install 