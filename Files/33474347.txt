embedded neo4j crash stacktrace 
running embedded api crashing warning figure previously code fine upgrading required adding transactions altering cypher syntax boot time spring config small finite number vast majority code remains functionally correct confirmed unit integration tests engine booted adding nodes fairly constant basis output shows mysterious crash minutes happen hours happened jvm run operative line lines stacktrace error output lines fine moment crash crash complete surprise plenty data dont hr hr 

effects linux memory killer kill processes system running critically low physical memory explain found logs quote href http www oracle technetwork articles servers storage dev oom killer html rel nofollow excellent article blockquote applications allocate memory front dont utilize memory allocated kernel designed ability commit memory make memory usage efficient applications start utilizing memory allocated commit model problematic kernel start killing processes blockquote quoted article great resource learning oom killer includes lot information troubleshoot configure linux avoid problem quote answer href http unix stackexchange questions oom killer decides process kill question blockquote oom killer select process kill refers process free maximum memory killing important system blockquote neo4j process memory intensive process system makes sense killed physical resources start running avoid oom killer memory intensive processes system make commitment memory read article understand oom killer lot 