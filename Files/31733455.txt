rxjava observable cache invalidate 
learn rxjava inside android environment lets observable emits result network call understood correctly widely common approach deal config ul li store observable retained fragment singleton application object li li apply strong cache strong operator observable li li subscribe unsubscribe proper lifecycle handlers li ul loose result observable observerd configuration place question force observable emit invalidate cached create observable time fresh data network sound bad practice android world make gc extra work lot federico 

make custom implementation bit code demonstrates usage shows cache essentially reset output notice doesnt emit till completion bug fixed rxjava terms gc pressure concerns operator applied observable creates observable base member state creating observable reference function holds state subscriptions holds potential gc pressure holds lot state thrown frequently mutable data structure hold state resets gc deal contents data structure cleared gain rxjava operator built multiple concurrent subscriptions imagine reset functionality prove problematic implement means raise issue rxjava github explore 