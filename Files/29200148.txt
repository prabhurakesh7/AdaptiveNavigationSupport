removing final keyword change program behaves 
question primarily strings academic curiosity modifier variable change behaviour program shows lines print lines print interning things behaviour program change modifier removed variable declaration assuming program compiles modifier dont vote close duplicate href http stackoverflow questions comparing strings declared final comparing strings declared final understand em em reasons removing modifier make difference link answer answer question 

modifier ensures variable href http docs oracle javase specs jls se7 html jls html rel nofollow assigned prohibits reassignment variable special cases observed href http docs oracle javase specs jls se7 html jls html jls rel nofollow expressly stated jls blockquote variable primitive type type string final initialized compile time constant expression called constant variable variable constant variable implications respect class initialization binary compatibility definite assignment blockquote decent amount jls reading cover main point strong href http docs oracle javase specs jls se7 html jls html jls rel nofollow jls strong strong strong encounter ill effects em removing em modifier strong href https docs oracle javase specs jls se7 html jls html rel nofollow jls strong rely guarantee thread assigned variables object observe removing variable variables longer visible thread hr href http docs oracle javase specs jls se7 html jls html jls rel nofollow class initialization rules surrounding class initialization field static em em constant variable blockquote class interface type initialized immediately occurrence ul li class instance created li li class static method declared invoked li li static field declared assigned li li static field declared field constant variable li ul blockquote href http docs oracle javase specs jls se7 html jls html jls rel nofollow jls spelled changing field break href http docs oracle javase specs jls se7 html jls html jls rel nofollow binary compatibility blockquote references fields constant variables resolved compile time constant denoted reference field present code binary file class interface field code initialize field initialized default initial type field observed discussion blockquote blockquote field declared final changed declared final break compatibility pre existing binaries attempt assign values field deleting keyword final changing field initialized break compatibility existing binaries field constant variable deleting keyword final changing break compatibility pre existing binaries causing run usage field recompiled true usage compile time constant expression result side effect decision support conditional compilation discussed end blockquote careful suddenly changing fields em removing em field strong strong applies single threaded world href https docs oracle javase specs jls se7 html jls html jls rel nofollow jls blockquote fields declared final initialized changed normal circumstances detailed semantics final fields normal fields compilers great deal freedom move reads final fields synchronization barriers calls arbitrary unknown methods correspondingly compilers allowed final field cached register reload memory situations final field reloaded final fields programmers implement thread immutable objects synchronization thread immutable object immutable threads data race pass references immutable object threads provide safety guarantees misuse immutable class incorrect malicious code final fields correctly provide guarantee immutability object considered completely initialized constructor finishes thread reference object object completely initialized guaranteed correctly initialized values objects final fields blockquote program relies guarantee function removing keyword consequences threading 