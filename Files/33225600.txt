biginteger designed immutable 
biginteger immutable understand lot times lot calculations produce lot objects feels kind intuitive make immutable situation mind string operations option stringbuilder immutable counterpart biginteger beneficial lot situations edit benefits immutability beneficial cases wanted understand benefits biginteger biginteger calculate factorial large numbers preferred mutable biginteger similarly biginteger calculations result larger int cases bigdecimal 

href http rads stackoverflow amzn click effective josh bloch explains benefits immutable classes item minimize mutability blockquote immutable classes easier design implement mutable classes prone error secure blockquote immutable object em simple em object exist state state created simple code fewer bugs object modified em thread em external synchronization bloch addresses performance problem immutable classes blockquote real disadvantage immutable classes require separate object distinct creating objects costly large internally immutable class arbitrarily clever biginteger package private mutable companion class speed multistep operations modular exponentiation harder mutable companion class biginteger reasons outlined earlier luckily don implementors biginteger hard work blockquote internally optimization mutable href http docs oracle javase docs api util bitset html makes code complex error prone simplest solution confident mutable version give noticeable performance gain item optimize judiciously book 