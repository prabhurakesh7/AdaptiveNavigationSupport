validating string grammar 
working side project learn regex parsing general write function validate string valid grammar grammar written regular expressions token written write token regex realized depends recursive write regex correct anymore check deep potentially validate string represented grammar regex string matches call string matches regex checking smaller things correct 

understanding href http en wikipedia org wiki chomsky hierarchy rel nofollow chomsky hierarchy simple form hierarchy types ol start li recursively enumerable matched turing machine li context sensitive matched linear bounded deterministic turing machine li context free matched deterministic pushdown automaton li regular matched finite state automaton ol regular expression depiction finite state automaton match regular languages language isnt regular risk href http stackoverflow summoning tony pony match regular language regular expression isnt good thing tool matching match language level higher deterministic pushdown automaton match context free language regular language finite state automata match regular language typically compiler design lexer working regular languages paired parser generator works context free languages paring href http en wikipedia org wiki lex software rel nofollow lex href http en wikipedia org wiki yacc rel nofollow yacc flex bison lex syntax matches tokens passes yacc modern world href http www antlr org rel nofollow antlr tool language recognition writing parser href https net projects javacc rel nofollow javacc recommended tool intend path lex amp yacc antlr javacc part domain tools href http en wikipedia org wiki comparison parser generators rel nofollow parser generators comparison id suggest giving href http epaperpress lexandyacc download lexandyacctutorial pdf rel nofollow lex amp yacc tutorial read lex yacc arent section theory lexing parsing understanding theory understand current approach isnt working 