immutablelist list cast 
commonly accepted cast implementations variable method return method parameter guava sense arguably exception rule building house complicated business applications public api cast list deprecated mutator methods longer flagged deprecated longer identified immutable object important part functionality identity makes sense pass argue good policy internal api accept mutability multithreading client side wont wreck inside libary risk deprecated day oracle decides create require lot refactoring arguable pros maintaining cast outweigh cons 

agree rationale guava collection library lists immutable passing good idea blockquote risk immutablelist deprecated day oracle decides create immutablelist require lot refactoring blockquote scenario risk em em 3rd party library flipside chose upgrade applications guava version google gratuitously deprecated class method relied strong update strong louis wasserman works google comment blockquote guava pretty strong compatibility guarantees beta apis blockquote discount possibility gratuitous api hr scenario imo oracle add immutable list class interface em require em refactor oracle hard avoid breaking existing code enhance standard apis weigh pros cons deal cons eventuate 