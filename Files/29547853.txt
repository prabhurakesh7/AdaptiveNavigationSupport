create map string string unmodifiable keys 
strong create unmodifiable keys keeping values modifiable strong id hand interface add change map values change map keys background higher level problem list set variable names tree structure represented string id code side interface populate aliases strings variable names id multiple implementations interface naming tree hierarchy aliases ways fit situations interface implementation populate bunch keys set stone defaults values allowing modify values keys approach creating mapping names alias makes sense back lower level problem id code resemble makes values unmodifiable values mutable objects modify id stick avoiding creating class set single string member creating structure class public string member aka id avoid creating mutable class values make keys unmodifiable extend implement map override methods change keys throw large number methods added lambda functions nice interface implementers access long change keys aka id avoid lengthy error prone technique existing interface changing data values options creating resembling strong unmodifiable keys strong strong modifiable values strong interested good coding practices 

youre href http en wikipedia org wiki proxy pattern rel nofollow proxy pattern hr detailed answer idea whats called em proxy em interact map proxy intercept calls map interact map proxy acts interface client map proxy skeleton wrapping creating proxy map proxy implement interface methods simply telescope modify methods prevent removing keys adding keys map final class immutablemap implementsmap private map map keynotes ol li returning sets map ensures person attempts modify set returned map itll throw li li creating values map passed constructor prevents client modifying map passed li ol 