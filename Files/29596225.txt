monte carlo simulation 
student programming class problem deals interpretation monte carlo simulation supposed find probability quarters pennies picked purse quarters pennies coin picked replaced probability 1xxxxxxx answer 

reason em draw em em pick em coins purse em test em draw times loops indices iterating time logic messed put loop em drawing em coins loop running trials code work put minimal refactor code closely comments h3 picking coins code h3 comments routing drawing coins ol li works correctly li li cumbersome li li easier spot problem broken bit code separate method li ol address strong em break drawing code method em strong simply call loop strong em sampling algorithm em strong href http stackoverflow pjss answer recommends taking coins collection href https docs oracle javase docs api util arraylist html rel nofollow arraylist good suggestion guessing havent introduced allowed assume ways randomly draw items length array replacement accepted href http en wikipedia org wiki fisher e2 93yates shuffle rel nofollow fisher yates shuffle derivatives effect involves picking randomly strong em unpicked em strong subset array working works moving em picked em coins end purse picking unpicked coins h3 expected results h3 expected result youre learning monte carlo simulation expected result depends trials simple analytic sense strong em exact em strong result procedure ol li draw coin doesnt matter li li whichever coin left bag probability picking li li picked matching coins step matching coin left bag probability picking li li probability matching coins denomination li ol monte carlo programme em estimate em probability expect em converge em sufficient estimates high wont give equal starting sufficient number trials give starting give draw draw match results lessons monte carlo simulation estimate probabilities sufficiently high sample count good estimate turn depends accuracy code investigate working 