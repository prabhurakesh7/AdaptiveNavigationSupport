double encrypting rsa 
problem write secure chat server rsa encryption double encrypt client messages client read messages thing double encrypt character long message resulting encrypted byte array bytes long encrypt time key long question double encrypt code theory generate separate key pairs encrypt string public key private key vice versa decrypting string trust 

requirements reasonable proposed solution fundamentally flawed abandoned back requirements seek achieve requirements standard techniques apis invent cryptography methodology difficult create secure system follow standard practices thoughts approach requirements ol li establish managed distribute certificates establish trust entities communicating certificates basically signed public keys signed trust distributed freely li li verification identity sender message modified digital signature encryption digest hash computed contents message resulting small number bytes length message digest signed senders private key senders public key validate signature li li message read intended recipients encryption random single passphrase generated encrypt message passphrase encrypted intended recipients public key recipients private key required order recover passphrase message decrypted encrypt copy message multiple recipients simply encrypting passphrase multiple times li li pick message format parsing signed encrypted message pick parts cms cryptographic message format li ol found rsa good encrypting small amounts data encrypting rsa slower encrypting symmetric algorithm aes encryption community worked decades secure performant solutions leverage performance symmetric encryption aes trust pattern shared secret asymmetric encryption rsa 