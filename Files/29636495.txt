multithreaded string processing blows threads 
working multithreaded project parse text file magic object processing object aggregate output version code parsed text thread object processing thread pool javas werent performance boost wanted turned parsing takes longer thought relative processing time object moving parsing worker threads worked strong time object blows function number threads pool strong worse linear bad exponential whittled small machine shows behavior doesnt create magic object string manipulation inter thread dependencies isnt terribly efficient imagine sh bed multithreaded context missed running core machine lines long 1mb dozens items 100k items sample input sample command line running worker threads code hr strong updates strong ul li reading file memory effect specific read file adding line iterated list create jobs pool makes substrings eating heap hypothesis li li compiling copy delimiter pattern worker threads effect li ul hr strong resolution strong converted parsing code custom splitting routine based oddly em em blow number threads increases idea functional workaround ill live 

internally optimization reasons create real empty shells point sections original small pieces original huge memory end eating heap parse big files risk changed format recommend parsing line hand regex bad performance creating real parts 