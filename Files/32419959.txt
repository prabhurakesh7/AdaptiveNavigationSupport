hibernate persistence apache spark process block 
developing long running process find rss feeds users system registered follow parse rss feeds extract entries store back database hibernate entities user retrieve apache spark enable parallel processing process hours depending number users approach thought work strong useridsrdd foreachpartition strong separate hibernate session partition created database session manager initialized partition hibernate session live process rss feeds source parsed feed entities created sending list database manager method saves list batch works spark partition partitions process blocked save entity order make things simpler simplify feed entity doesnt refer referred entity doesnt collection strong update strong strong update strong redesign source code simplified version similar approach session created dao class session passed externally dao method works spark partition partitions doesnt work thread inside code session created session closed strong update strong suggested href http meta stackoverflow vlad mihelcea investigated thread dumps found threads blocked save entities excluded apache spark problem created threads open session save entity wrong hibernate configuration strong update solution strong finally discovered problem hibernate data source configuration changing tomcat datasource solved issue addition previous configuration added 

taking advantage href https docs jboss org hibernate orm manual en html ch02 html architecture current session rel nofollow contextual session session meant bound request extended context case dao instance creates session separate dao instance separate session separate transaction separate database connection tricky chances transaction visible transactions commit blocking caused dead lock concurrent connection transactions refactor code business method shares session transaction connection dao calls 