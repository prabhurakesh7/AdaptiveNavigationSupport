abstractroutingdatasource change map runtime 
tables database ol li user li li user database li ol user store login password role br user database store database driver url password user diagram database img src http stack imgur txdum png alt enter image description user login page connection user database planing map popular commerce create android application user login store data add view product orders br time practice knowledge spring technology small explain wrong examples web declaration datasource persistence file create datasource bean start project dont user connection database repository href http stackoverflow http stackoverflow null controller connection repository null set connection repository set route defect method add user restart server refresh connection br class implement user login user connection add map run method constuctor determinecurrentlookupkey working refresh times request user database setting connection map manualy refreshing method run dont problem method clossing connection clean method route connection strong edit strong sergeballesta change code examples class map add beacuse datasource refresh refresh error working test databases future 

user database uncommon design databases end structure real world application add user id tables queries found full dynamic abstractroutingdatasource href http stackoverflow answer mine big difference code beware tested question sessionlistener close databases avoid number open database grows indefinitively learn spring pattern bottom description ul li session scoped bean hold actual database connection user connection created request user id present session cached subsequent destroy method automaticaly called spring session closed close connection li li injected proxy holder actual datasource holder li ul answer user simultaneous sessions singleton injected session holders actual database connections number active sessions single connection user matter concurrent sessions 