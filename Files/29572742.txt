compiler tree api sun source util reconstruct source code 
analysing source code ast analysis compiler tree api parser source code problem add ast node insert expression statement compilation unit compiled compiler find method class trick 

dont compiler designed regenerate source code ast modify programs source source href http en wikipedia org wiki program transformation rel nofollow program transformation system pts tools parse source code building asts source source transformation rules written syntax parsed source code make asts em em regenerate source text asts pts rules essentially em em replace em em pts dms software reengineering toolkit rule finds expression raised power applies classic compiler strength reduction make cheaper evaluate extra semantic check constraint pts implement analyses rule works ul li matching ast parsed source program ast implied pattern left hand side rule li li matched pattern variable bound subtree li li checking condition verify true li li matched subtree removed replaced tree shape implied hand side rule replace li ul beauty manipulation ast writing grotty procedural code climb tree checking node types splicing nodes source source rewrites easier write inspect maintain pts building prettyprinter href http stackoverflow answer doubt compiler captures information regenerate pretty source code regenerate compilable source code pretty compiler ast retain comments theyll hard regenerate standard pts captures reproduces stuff 