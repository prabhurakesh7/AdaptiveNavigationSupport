understanding equals method 
bloch effective rules implementation equals method blockquote reflexive null reference equals return true symmetric null reference values equals return true equals returns true transitive null reference values equals returns true equals returns true equals return true consistent null reference values multiple invocations equals consistently return true consistently return false provided information equals comparisons objects modified null reference equals null return false blockquote book mentioned called liskov substitution principle blockquote liskov substitution principle important property type hold subtypes method written type work equally subtypes blockquote dont ties contracts adhere writing equals implementation question implementing method subclasses book implementation violates dont understand 

typically ways check type equals method strong option instanceof strong option strong respects strong em liskov substitution principle em strong strong add additional properties classes relevant equals method breaking characteristics equivalence relation reflexive symmetric transitive strong option getclass strong option strong violates strong em liskov substitution principle em strong strong add additional properties classes relevant equals method breaking characteristics equivalence relation reflexive symmetric transitive joshua bloch warns book effective angelika langer mentions mixed tpye comparisons define default values additional properties href http www angelikalanger articles javasolutions secretsofequals equals html rel nofollow http www angelikalanger articles javasolutions secretsofequals equals html downside equals methods complicated blockquote violates dont understand blockquote class mypoint add additional methods additional properties fields objects represent point option instanceof equals method return true 