pojo field validation throw exceptions setter methods 
lets tens pojos represent domain data system flows objects layers system system web application simple desktop application domain consists doesnt matter designing system confused put validation logic pojos domain objects represent data fields inside objects adhere criteria put lot validation logic inside setter methods calling client throw exception dont system crash exception checked exception caught handled consequence time create object setter methods constructors throw exception catch block doesnt feel forced catch setter methods question put validation logic dont clutter code lot boilerplate catch blocks rethrows finest byte eaters join discussion researched googled found specific discussion topic waiting great enthusiasm deeper insight things 

answered question blockquote fields inside objects adhere criteria blockquote helps em invariants em system things maintain cost rules br pojos line defence invariants data objects place put validation logic validation object longer represent makes sense domain system invariants form contract objects methods clients contrary documented contract throwing exception thing clients responsibility individual parts system correctly time started favoring unchecked exceptions checked instances contract violations partly reason mention avoid blocks em em br javas standard unchecked exceptions include ul li nullpointerexception li li illegalargumentexception li li illegalstateexception li li unsupportedoperationexception li ul practice guideline em checked exceptions em error considered strong recoverable strong em unchecked exceptions em chapter joshua blochs href http rads stackoverflow amzn click effective 2nd ed wisdom topic ul li item exceptions exceptional conditions li li item checked exceptions recoverable conditions runtime exceptions programming errors li li item avoid unnecessary checked exceptions li li item favor standard exceptions li ul deter validation logic higher levels enforce context specific business rules constraints 