filtering truth tables 
imagine person class boolean flag indicating person employable set false default imagine strong em external em strong boolean methods act person objects static boolean methods utility class boolean static methods essence analogous boolean valued functions em predicates em construct predicates predicates truth table predicates predicates em ofworkingage em em ofgoodcharacter em em isqualified em construct truth table employ people desirable qualities strong strong employable set employability flag em true em strong strong opposite imagine collection person objects person adjust employability flag predicates em update count em forces entire truth table positives people end thought filtering truth tables setting employability flags updating counts contrived easily set update complicated things strong question strong elegantly solutions strong clunky solution strong giant hand coded chain bad strong slightly smarter solution strong pass predicates array collection sentences method method generate truth table loop people set employability return array counts things functional interfaces href http stackoverflow questions pass method parameter answer potentially relevant change em printcommand em em isqualified em pass em callcommand em person string kindah clunky wed interface file predicate ish 

lets start list predicates track predicate true false lets attach names creating class attach efficiency names fine generate truth table list predicates names apply combination source predicates negated generated easily bit functional programming magic reuse times objects generated fly demand dont store lets supplier output classify collection truth table easily counts update field desired truth table collection truth strings case previously generated map 