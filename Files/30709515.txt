change thread implementation executorservice 
making game threads program carry tasks explain scenario bit battlemanager class implements runnable looping battle queue battles check battle execute battle turn battles running time complex calculations inside battle inside wildbattle class spawn child thread execute task battles run parallel method invoked inside wild battle class spawns thread main question learn executor service read places executor service spawning child threads change executor service expert learning language spare wrong change make efficient clear 

ill show basic youll manage integrate code create application choose based application threads created immediately submit task service threads busy task wait queue threads handle reuse threads save time thread instantiation generally good concept work threads manage access executor service battles perform asynchronous work submit task service application lifecycle shutdown youd shutdown options waits current tasks executed performs shutdown immediately returns list tasks completed mentioned comments figure preserve model state organize thread synchronization based real situation 