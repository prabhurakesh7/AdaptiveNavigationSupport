validate infix expressions parenthesis 
struggle problem asks parse infix expression postfix firstly check infix expression correct input valid ul li operands letters uppercase lowercase numbers li li parenthesis li li operators operators priority table shown accepted li ul href http stack imgur zjhyh png rel nofollow img src http stack imgur zjhyh png alt table operators solution parse infix postfix firstly check postfix expression valid algorithm parse infix postfix blockquote read character expression left create empty stack br current character operand put output br current character operator stack empty push stack br current character operator stack empty operator top stack higher priority current operator put top stack output pop end push stack current character br current character push stack br current character pop stack put output find end input stack empty pop elements put output blockquote algorithm work cases ab em em construct valid postfix expression expression valid infix expression code 

build parse tree nodes operators leaves terminal symbols numbers letters situation youre put children terminal symbol operands dont children youre ab parsing infix thing read lhs operation left parenthesis recurse thing lhs operation expect operator error left child terminal symbols errors suppose werent alls expect rhs good parenthesis cues end recursion tree lhs good tree good weve expect parenthesis cues understand building tree failed suppose present left parenthesis recurse lhs operator rhs parenthesis ending recursion tree valid tree postfix expression preorder traversal tree ab ea basic algorithm preorder traversal dont address order operations answer avoid problem altogether fully parenthesizing infix expression simplifies rest basically start finding operators order ensure parentheses lhs op rhs triple remove parentheses outermost operation youre good 