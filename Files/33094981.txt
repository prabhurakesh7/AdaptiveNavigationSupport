javafx open link browser reference application 
hyperlink clicked link opened external browser usual method cited web dont reference link opened dialog opened controller opened fxml file reference application object painful easy cheers 

strong solution strong pass reference application similar painful approach anticipating basically hr strong solution strong controller factory push host services controllers cleaner version controllers calling method initialize configure creation href http docs oracle javase javafx api javafx fxml fxmlloader html setcontrollerfactory javafx util callback rel nofollow create controllers passing object controllers constructor suitable constructor controller factory load fxml define controllers constructor parameter hr strong solution strong em miserably ugly solution strongly recommend em wanted include express offending posted store host services static field problems introduce dependency application type controllers access host services hr strong solution strong define singleton solution good solution imo hr strong solution strong dependency injection framework doesnt apply current case give idea powerful simple frameworks href http afterburner adam bien rel nofollow afterburner fx application method spring href https github james springfxexample rel nofollow 