64bit hashmap 
reading blog post href http preshing hash collision probabilities rel nofollow calculating hash collision probabilities formula number entries max entries hash collision probability default hashmap thousand entries counter intuitive max entry range large 4294967296 understood birthday paradox probability reaches people questions ol li understanding hashmap usable thousand entries li li plans implement 64bit hashes future versions li li map implementation provided library based hashes li ol 

collisions issue simply increasing table size viable solution hash table defined intro algorithms direct address table store hash buckets direct address table size start storing objects relative total number hashes universe universe universe hash table concerned address space hash table put lot openjdk sets limit number objects hash map hashmap implementation starts default hash universe size remember reading openjdk jvm implementation put object integer result finds remainder dividing hash default hash map load factor doesnt attempt increase size hash universe full point hash table created recalculating hashes process universe size double previous table expensive operation hashmap aims map full expects collisions correctly setting hash map improve performance instantiate hash map initial load factor choosing openjdk implementation choose load factor greater hashmap implementations methods storing objects collide places object hash collides object bucket bucket single object comparison primitive data types key bit faster hashmap hashmap implementation linked list bucket store objects hash linked list objects linked list refactored href http www nurkiewicz hashmap performance improvements html tree objects dont implemented wont effect pays objects implement means quantify cost collision worst case linked list tree worst case worst case objects end bucket blog talks chance collision doesnt matter objects collide doesnt matter thousand collisions matter objects strong distribution hashes strong notation perspective loop linked list size hash map size 70k thousand collisions happen hash bucket real problem strong problem hash implementation strong lack bit addressing ways hashing perfectly href https en wikipedia org wiki dynamic perfect hashing dynamic perfect hashing href https en wikipedia org wiki cuckoo hashing cuckoo hashing multiple hashing algorithms prevent hash collisions dynamic hashing tables large attempt avoid collisions incurs memory cost forgotten answer question ol li hashmaps usable lot thousand entries collisions destructive problem unevenly distributed hashes implement objects fix uneven hashing li li wouldnt load factor hashmap youd entries hashmap hash space li li implementation cuckoo hashing map github implementations floating anger reckon youre working fixing hashes tuning initial size load factor map li ol 