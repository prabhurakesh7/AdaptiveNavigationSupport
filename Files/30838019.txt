pass struct kernel jcuda 
looked href http www javacodegeeks gpgpu jcuda good bad ugly html rel nofollow http www javacodegeeks gpgpu jcuda good bad ugly html modify kernel single dimensional arrays refuse impossible create struct copy device memory jcuda imagine usual implementation create case class scala terminology extends native api turned struct safely passed kernel havent found google question 

author jcuda jcuda mentioned forum post linked comment impossible structs cuda kernels fill jcuda side complicated rarely beneficial reason rarely beneficial structs gpu programming refer results youll find search differences blockquote array structures versus structure arrays blockquote preferred gpu computations due improved memory coalescing profoundly summarize answer summarize structs gpu computing bit difficult general difficult jcuda hr plain structs theoretically simple memory layout imagine structure create array structs structs em guaranteed em laid contiguous memory block cuda kernel code compiled compiler room musinderstandings host side memory interpret objects kernel receive memory work plain practice potential unexpected problems compilers introduce strong paddings strong structs achieve strong alignments strong structure fact layout order make structures aligned 32bit 4byte word boundaries pragmas compiler directives influence alignment cuda additionally prefers memory alignments directives heavily cuda headers short define print actual em layout em struct console hard time predict print expect surprises hr jcuda world simply create class create array objects arbirarily scattered memory dont large object find create array structures jcuda pass cuda kernel simply make sense hr mentioned form strong strong memory layout structures cuda kernel create memory block compatible structure layout fill side mentioned em roughly em involving pseudocode basically boils keeping memory em manually em access memory regions correspond desired fields desired structs strong warning strong possibility perfectly portable cuda compiler versions platforms compile kernel definition 32bit linux machine bit windows machine structure layout strong strong code aware define interface simplify accesses href http www jocl org utilities utilities html rel nofollow jocl create utility classes feel bit structs automate copying process extent case inconvenient achieve good performance compared plain 