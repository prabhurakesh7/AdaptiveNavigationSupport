polymorphism strategy pattern 
difference pattern confused achieved strategy pattern basically polymorphism correct wrong regard provide eradicate confusion 

link strong href http stackoverflow users cking cking strong post wikipedia clear ill give strategy pattern strong change behaviour algorithm runtime strong achieve ways holding switch case wouldnt nice strategy pattern lets youre developing turn based strategy game kind strong units strong strong infantry strong strong tank strong subclasses unit terrain strong plains strong strong railroad strong strong forests strong unit subclass implement em fire em method strong completely strong tank shots heavy long distance round infantry shot short distance light bullets normal polymorphism inheritance em fire em method unit strong wont change game strong units move field em basemovement em holds number hexagons walk developing strategy game real world simulation dont care move add coordinates coordinate order simpler code terrain wouldnt strategy object strong change behaviour move method runtime strong implement strong movementstrategy strong class kinds terrain program game trigger em setmovementstrategy em unit move hexagon dont write unit subclasses strong unit strong move inside strong forest strong call strong plain strong change units move depending terrain dont rewrite subclasses hope helps understanding difference 