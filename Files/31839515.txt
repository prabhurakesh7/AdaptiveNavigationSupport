garbage collection behavior short lived objects 
process allocates lot short lived objects measured yourkit average age ms long lasting objects function accept tcp message transform produce kafka majority objects created kafka producer written scala lot immutable objects yourkit measured size immutable objects kafka total number objects kafka total vast majority objects make past ms attempt optimize application case tune garbage collector recognizes short lived objects common case discards majority reaches gen knobs important flags noticing strange behavior gc patterns heres illustration heap usage full gc href http stack imgur 9p6ef png rel nofollow img src http stack imgur 9p6ef png alt heap usage transient state heres illustration steady state heap usage href http stack imgur kqqmk png rel nofollow img src http stack imgur kqqmk png alt heap usage steady state tenuring happening slowly confirmed heap information printed gc full gc full gc tenuring starts happening quickly dont understand reason find full gcs completely unnecessary full gc entire heap reclaimed vast vast majority objects lost strong reference include heap information gc sufficient information idea happening full gc hour frequent application edit requested additional information ul li version li li allocated gb memory process heap fixed size li li heap output minor gcs full gc li ul blockquote blockquote ul li heap output full gc li ul blockquote blockquote ul li heap output minor collection full gc occurred li ul blockquote blockquote ul li heap output full gc li ul blockquote blockquote 

full gc log hard post log somwhere butchering takes 160ms minor gcs 30ms setting pause time goals em hours em pass full gcs impression full gcs evil avoided costs wrong troublesome cms cms full gcs em failure mode em single threaded fallback strategy long large heaps youre parallel gen collector aka em throughput collector em small heap full gc fast gen contents garbage visited mark sweep algorithm havent pause time goal cms suggests dont defined goal problem 