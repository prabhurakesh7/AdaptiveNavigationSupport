single array implement stacks 
debugging solutions problem code snippet logic wrong method pop executing indexused spaces removed continuously deleting elements necessarily continuous feel free correct wrong 

approach ridiculously inefficient overcomplicated strong incorrect strong simple test prove produces stack data structure implemented array single linked list linked list efficient elements scattered heap elements memory overhead node object pointers array hand faster fixed size tasks approaches pros cons absolutely point creating mixed approach strong disadvantages strong approaches fixed capacity memory overhead hr synthetic task restriction array store elements stacks approach logically split elements array pairs pair represent node single linked list element pair hold element pointer node clear array hold number independent single linked lists long sufficient capacity indices heads idea similar approach description hold pointers heads lists addition hold pointer list represent free memory includes occupied elements array initially heap list elements array element stacks element create element desired stack element stack element back heap 