spring hibernate read database transactions run slower read write 
research performance read versus read write database transactions mysql server remote easy differences transaction types connection pooling working based comparing 1st versus 2nd jdbc calls configure spring aop read transaction dao call calls em slower em compared read write versus tcpdump read transaction back talking mysql heres href http pastebin 1u2vh0au rel nofollow read dump versus href http pastebin trc0jrqm rel nofollow read write ol li explain read calls taking longer expected li li wrong improve speed improving network found awesome post href http blog cyclopsgroup org 1300ms 160ms tune springhibernate html rel nofollow good performance recommendations comments li ol 

interesting ride lot learn share ignorance learned helpful short answer question hibernate starts session synchronous jdbc call ends call calls read write calls read calls slower longer answer question involves details steps reduce remote database performance ol li thing switch vpn tcp udp reading href https community openvpn net openvpn wiki gigabit networks linux rel nofollow openvpn optimization page sigh added settings openvpn client server configs havent tested full understand contributed speed increase read transaction overhead dropped 480ms 141ms read writes 100ms big win li li closely tcpdump output win noticed lot unnecessary auto commit read read write jdbc calls made upgrading newer version awesome href https brettwooldridge github io hikaricp rel nofollow hikaricp connection pool library helped version added intelligence reduced calls read transaction overhead 120ms read write 100ms nice li li brett wooldridge author hikaricp pointed mysql driver settings dude adding settings mysql jdbc url tells driver software state connection server status settings caused synchronous jdbc commands removed read transaction overhead dropped 60ms read write woo hoo li li tcpdump output read read write transaction settings fix write custom read detecting pool connections special pool sees call connection custom pool dropped transaction overhead read read write connections 20ms basically removed jdbc transaction overhead calls heres source href http gray docs misc performance optimizing spring hibernate transactions custompool rel nofollow classes wrote home page write code brittle relies hibernate thing working documented xml code carefully li ol basic overhead 480ms 20ms couple days work real life hibernate calls method started seconds ended seconds pretty kick ass easy 10x speed improvement hope experience helps 