generate unique hash id objects 
id objects makes easy distinguish takes seconds complete call multiple times objects huge mb calculation kb run calculation object program time earlier exact values recursively result basically objects keys hashmap include elements dont store full size store values strong thought id generate id hash values inside object strong hash result strong aware hash code md5 guarantee uniqueness strong multiple objects hash store maximum elements md5 chance hash neglectible hash codes ill happy hear anybodys comments approaches hash generated dont object anymore respective seperate objects exact values return hash code original hashcode maintain uniqueness probability objects hash code absolutely neglectible dont describe problem words anymore clarification needed strong generate strong problem isnt store hashes dont generate unique hash entire object values hr strong clarification strong talking size serialized size hard drive dont putting objects hashmap decrease size whay store hash string blockquote put object hashmap key dont create copy storing large objects hashmap consumes memory objects blockquote store large objects results values small respective hashcodes myclass objects small point hashing objects work hash object values 

create hash data youll make values byte format control classes built add method object large good idea collect big byte array recursively calculate digest create object add method declare interface method collect classs data participates big calculation update object data updating data recursively call method classes method defined class fields method reason added strings length byte representations length digest avoid situations fields put bytes directly digest effect digest identical digest generated sets data adding length disambiguate convenient add things classes dont control add method youll creative values class calculation call methods digest results digest serialized form serializable head class youll create object digest key 