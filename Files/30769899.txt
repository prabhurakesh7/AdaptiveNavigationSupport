visualization treemap linkedhashmap 
understand data structures visualized puts entries em natural order em keys puts entries em order em inserted question em iteration em data structures traversing strong strong elements spread buckets array understanding instance case elements identical em hashcode em em tree em structure sort elements strong strong indexes bucket array strong strong similarly case called em doublylinkedhashmap em reality bucket doubly linked list em iteration em place happen strong strong elements buckets elements single bucket wrong assumption em em implementation depending number elements bucket elements 

source code normal implementations src zip file oracle jdk installs documentation red black tree critical code simple forwards iteration keys method recursively scans tree order left parent depends ordering nodes inserted tree key order doubly linked list arrival order imposed top hash structure buckets nested class extends add references normal forwards iteration chain 