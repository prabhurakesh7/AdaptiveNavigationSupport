class object trait sealed trait scala 
background clear idea writing understand create code utility functions inside access directly keyword static classes create coding verb means object behavior encapsulated code classes instantiate keyword create code abstract classes create achieve functionality enum create expect class pattern matching future similar instanceof understanding correct 

youre facts youve stated oop eye h2 object h2 objects scala functional programming perspective em modules em serve purpose aggregating similar kinded functions called utility functions additional meanings singleton object inherits concept em companion object em object module functions related class refer members object class h2 class h2 classes relate close concept h2 trait h2 view scala scala behaviour whats difference pointed comment mixed regarded completely abstract methods abstract fact youre targeting interop declare compiler wont classes traits inherit file serves purpose pattern matching pointed case classes compiler pattern match exhaustive warning scala h2 case class h2 case classes purpose pattern matching class makes compiler generate bunch boilerplate code dont automatic companion object instantiate object auto generated function automatic implementations automatic constructors parameters 