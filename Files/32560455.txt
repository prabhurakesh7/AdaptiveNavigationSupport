singleton connection pool high perfs 
h1 context h1 restful api versus fighting game jax rs tomcat8 neo4j embedded today figured lot queries limited time embedded faster queries fast h1 problem h1 fact problem bit singleton method returning current instance begin transaction transaction closed dont solution optimal perfs singleton pattern pool creating xx instances database connection reuse database operation finished test dont connections fastest create pool instances access datas blocked lock 

crate strong strong instance create instance pool completely thread worry concurrency transaction thread bound run multiple transactions thread operations neo4j executed transaction commit transaction written transaction log persisted database general rules ul li close transaction early resource li li close resources early returned findnodes execute li ul href http neo4j docs transactions locking html rel nofollow find information locking strategy hr performance ul li check database settings memory mapping li li check os settings file system li li check jvm settings gc heap size li li data model li ul href http neo4j docs configuration html rel nofollow find articles neo4j configuration amp optimizations information 