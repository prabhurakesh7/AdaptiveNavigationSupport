default methods break source compatibility 
generally case source code forward compatible compiled classes em em source forward compatible jdk jvm releases update correct comments enum addition default methods appears longer case library implementation includes method returns copy contents list sorted library deployed jar file dependency worked fine project built jdk occasion recompile library jdk found library longer compiles implementing class method conflicts default method default method sorts list place returns librarys method returns sorted list incompatible signature basic question ul li doesnt jdk introduce forward incompatibility source code due default methods li ul ul li forward incompatible change li li considered discussed default methods designed implemented documented li li admittedly small inconvenience discounted versus benefits li ul code compiles runs runs compile shows code compiled failing run 

strong em doesnt jdk introduce forward incompatibility source code due default methods em strong method superclass interface break compatibility default methods make em em change interface break compatibility sense default methods open door adding methods interfaces default methods contribute broken compatibility strong em forward incompatible change em strong weve subclassing classes standard library strong em considered discussed default methods designed implemented documented em strong considered brian goetzs august paper href http cr openjdk net briangoetz lambda defender 20methods 20v3 pdf interface evolution public defender methods blockquote ol start li source compatibility li ol scheme introduce source incompatibilities extent library interfaces modified insert methods incompatible methods existing classes class float valued xyz method implements collection add int valued xyz method collection existing class longer compile blockquote strong em admittedly small inconvenience discounted versus benefits em strong changing interface em em break compatibility em em positively negatively hand makes feasible add methods interfaces hand opens door kind incompatibility classes interfaces benefits larger inconveniences cited top goetzs paper blockquote ol li problem statement li ol published impossible add methods interface breaking existing implementations longer time library published restriction grief maintainers addition closures language jdk place additional stress aging collection interfaces significant benefits closures enables development powerful libraries disappointing add language feature enables libraries time extending core libraries advantage feature blockquote 