enforcing multiple generic bounds return type 
isnt javafx question write interface javafx declares class viewable viewable classes meant view method returns node object representing viewable simple heres complicated returned node guaranteed getviewable method returns viewable object represents accomplish instinct appears sound classes reason class compiles pane node implement view class compile violating contract view method stranger class fails compile pane replaced object whats flaw understanding generics work intended 

dont generic method case goal fix type view return generic method lets strong caller strong determine concrete types youre exact opposite enforcing youd build type parameter nodes type interface definitions enforce view returns correct type hr byte code declaration viewable view youll compiler selects type bound actual return type method relevant lines output intellij byte code viewer overriding type covariant type compiler accept switch order type bounds youll byte code viewer notice byte code return view wont compile pane subclass view order parameters compile object subclass node view hr overriding method generic return type multiple bounds easily produce runtime errors compiler enforces return types covariant type bound return type conform type bound compiles fine crashes runtime 