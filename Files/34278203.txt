thread pool size number cores 
recommended size custom thread pools number cores href http stackoverflow questions setting ideal size thread pool href http stackoverflow questions optimum thread pool size simple program running cpu based tasks lets spring app system cores configuration case executorservice shared requests requests hit server simultaneously executed inside executorservice create bottleneck results worse larger number requests remember default tomcat handle simultaneous requests threads app perform pooling core cope thread time created service calls times href https httpbin org delay rel nofollow https httpbin org delay call takes seconds execute thread pool service responds average seconds tested simultaneous requests thread pool reponses vary depending pool size hardware run test core machine pool sizes test results min max average response times milliseconds href http stack imgur 6yg9p png rel nofollow img src http stack imgur 6yg9p png alt min max average response times milliseconds results concluded average time max pool size average time cores threads pool worse result pooling opinion request cpu time make sense limit thread pool number cores web application find wrong setting pool size core machine web services cpu demanding 

pages link explicitly applies unblocked cpu bound tasks tasks blocked waiting remote machine advice apply wrong ignoring advice doesnt apply increase thread pool size hr blockquote good advice rationale bad advice don understanding ve fallen trap cargo cult programming ll longer deleterious blockquote href https blogs msdn microsoft oldnewthing rel nofollow raymond chen blog thing 