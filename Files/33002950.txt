jenkins job dependent git repositories multiple branches 
git repositories platform geo specific split necessarily relevant depends platform git flow meaning features branches branch stable represents qa ready builds branch stable releases feature platform parts branch decided jenkins jobs features run dont publish snapshot repository shouldnt run dont feature branch grab jenkinss local repo make compiles unit tests pass strong problem strong separate git repositories compiled jar ul li safely expose compiled jars platform job exposing developers jobs concern li li jenkins job build platform specific branch li ul single actively developed branch subversion issue strong ideas strong concerns ul li feature branches version ul li lot work em em feature branch li li itd clog local repo stale jars worry purging li ul li li checkout platforms uss simple pom file top level projects modules ul li make jenkins add submodules li li submodules git repo redundant li li doesnt work li li supply pom file li ul li li ul li platform publishes jenkins local repository platform built fail pass false sense supposing compiled platform possibly result li ul li ul 

ended solving maven versions plugin make modules managed dependencies top level project issue strong strong project explicitly declare version parent poll git platform job triggers built successfully versions plugin works require steps add invoke top level maven targets job platform platform branch exists repository dont make platform command platform strong final issue ran strong originally version issue repository job deploying accepted snapshots version didnt end gave error code 