lock based class 
href http docs oracle javase docs api lang doc files valuebased html rel nofollow docs shouldnt lock instance based class code blockquote produce unpredictable results attempts distinguish references equal values based class indirectly appeal synchronization blockquote href http stackoverflow questions javas based classes serialized based classes serialized asserts blockquote future jvm implementations object headers reference pointers based classes limitations clear locking identity jvm uphold reference locked removed replaced makes releasing lock pointless deadlocks blockquote prohibition future proofing reference assertion future proofing em em basis id reference id understand basis based objects strong edit strong btw understand reasons lock integers primitive wrapper classes cached find documentation true based classes integer amp based values href http blog codefx org based classes rel nofollow em based em classes href https docs oracle javase docs api util optional html rel nofollow javadocs optional amp explicitly blockquote based class blockquote true href https docs oracle javase docs api lang integer html rel nofollow integer amp 

heres blog post href http blog codefx org based classes rel nofollow nicolai parlog based classes blockquote types preceded based classes precise relation future unclear similar boxed unboxed primitives integer int additionally compiler free silently switch improve performance switching back removing recreating reference forbids identity based mechanisms applied based classes blockquote nicolai ul li em future em compilers em em things transparently translate values based classes ways preserve object identity li li things identity based mechanisms depend object identity examples include semantics references identity hashcode primitive locking object serialization li li things potential transparent translation wont transparent li ul case primitive locking concern sequence occur ol li instance based class created li li instance converted scenes li li converted back giving em em object li ol threads instance primitive lock unaware fact fact objects attempted locking objects mutual exclusion state locking intended protect dont lock based class wont worry potential hazard em future em nicolais blog posting persons speculation happen hr blockquote btw understand reasons lock integers primitive wrapper classes cached blockquote caching problem em se em mechanism rise problem real problem difficult reason object identity lock object locking regime em sound em primitive wrappers semantics boxing unboxing rise uncertainty object identity forward mooted type lt object conversion source uncertainty hr blog based href http cr openjdk net jrose values values html rel nofollow state values april john rose brian goetz guy steele talks adding types future version position statement fully specd adopted proposal give hint blockquote restrictions correspond restrictions called based classes em fact boxed form type based class em blockquote read implying relationship types existing based classes read lines description href http docs oracle javase docs api lang doc files valuebased html rel nofollow based classes 