properly multithreading thread pools javafx tasks 
option users submit multiple files filechooser processed code result io reading file actual heavy computation stored data user allowed select multiple files file processing depend files selected makes life lot easier handle threads addition user list buttons task cancel cancel button ability selectively collectively kill tasks requirement dont user choke system opening ton files figure thread pool limited number threads lets pretend ill cap arbitrary number unsure properly setting logic classes stuck checked href http docs oracle javafx threads jfxpub threads htm rel nofollow resource answer misread article ul li javafx classes situation li li mix task kind thread pool make thread pool provided li li make singleton max number threads user li ul prefer library multithreading expert worried potentially wrong thread bugs evil thing planet debug strong strong hard make correctly ways roll implementation edit generally threads reading books major id properly 

javafx api href http docs oracle javase javafx api javafx concurrent task html rel nofollow class fits case nicely api designed work conjunction api implementation href http docs oracle javase docs api util concurrent futuretask html rel nofollow submitted href http docs oracle javase docs api util concurrent executor html rel nofollow thread pool create implements thread pool submit tasks threads running background ui application dont prevent application exit achieve making threads created executor daemon threads resulting executor pool threads tasks submitted threads wait queue thread implement actual things bear mind em em update ui background thread submitted executor method invoked background thread change ui execution method wrap code ui structure things avoid situation set methods change values properties fx application thread ui elements bind properties needed advisable method access shared data methods mentioned instantiate subclass setting variables method compute return canceling class defines built method long running method periodically check stop work returns heres basic 