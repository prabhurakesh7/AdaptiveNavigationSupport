forkjoinpool invoke forkjointask invoke compute 
reading forkjoin framework extra benefits directly call implementation instantiate call call methods called source called invoke eventually managed thread pool manner confusing idiom wrote simple code test performance difference didnt test code wrong 

method class abstract method task code doesnt thread pool call run pool managed thread method fork join pool submits task pool starts running separate thread calls method thread waits result wording doc recursivetask forkjoinpool method performs task method encapsulates computation blockquote main computation performed task blockquote forkjoinpool blockquote performs task returning result completion blockquote compute method youre running call fork join pool test adding log line inside compute method check running thread logging thread id call subtasks included call run pool necessarily run pool created calling comment code run interestingly doc method throw exception called pool managed thread doc doesnt havent tested mind possibly code throw exception calling directly reason results returning time milliseconds arent accurate record difference starting thread pool managed thread running call existing thread oca ocp study guide sierra bates recommend fork join framework call pool makes clear pool means submit multiple tasks pool saves overhead recreating pools time logically cleaner task computation pool managed thread 