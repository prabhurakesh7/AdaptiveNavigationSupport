elegant make method class start block code 
class method starts nice require write time part public method class 

dont elegant working implementation javas built strong em enforces em strong method invocations begin checking state method interface class pointed overkill handful methods worry benefits ul li separation concerns achieved method implementations dont worry check cross cutting concern methods code worry methods primary purpose li li innocent developer add method class mistakenly forget add check check behavior automatically inherited newly added method li li add cross cutting concern enhance check easy safely place li li kind nice aop behavior built functionality forced integrate framework good options li ul fair downsides ul li implementation code handles proxy invocations ugly classes prevent instantiation class ugly li li add method make change spots implementation class interface big deal bit work li li proxy invocations free performance overhead general wont noticeable href http stackoverflow questions performance cost dynamic proxy information li ul strong edit strong fabian streitels comment thinking annoyances solution ill admit happy ol li invocation handler magic strings skip enabled check getenabled setenabled methods easily break method names refactored li li case methods added inherit enabled check behavior pretty easy developer wrong adding magic strings li ol resolve point ease problem point create annotation similar mark methods interface dont perform enabled check dont magic strings lot easier developer correctly add method special case annotation solution code method annotation interface class 