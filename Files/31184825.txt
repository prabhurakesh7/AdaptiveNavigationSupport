dedicated android activity initialize data libraries application 
app makes heavy libraries data files loaded synchronized local storage start operation takes time thinking creating dedicated activity purpose activity entry point application ul li display background image progress bar li li process data updating progress bar li li completion launch activity li ul couple questions ul li initialization activity pass reference data child activity ordinarily 3rd party serializable classes li ul thinking simply making data static good solution chance static reference break switching activities application life cycle ul li initialization activity called prevent shown user clicks back button li ul generally approach suggest considered single activity adding removing progress bar background dynamically 

long running code href http developer android guide components services html rel nofollow android services recommend complicated logic service activity classes correspond views application simply consume services outlive ui application started initialized response events system boot user interacting application activity tightly intertwined presentation terms loading syncing data strongly recommend putting logic activity code href https developer android training sync adapters index html rel nofollow syncadapter scheduling mechanisms syncing ensure syncing activity batched networking chip minimizes battery usage synced user actively application arent keeping user waiting open app 