rxjava reduce unsafe parallelized 
operation observable map guava prefer standard simple suppose scheduled observable parallel multiple threads derail operation possibly race condition vulnerable 

problem lies shared state realizations chain pitfall href http akarnokd blogspot hu pitfalls operator implementations html rel nofollow blog h2 shared state observable chain h2 lets assume dissatisfied performance type list tolist operator returns roll aggregator change existing operators find operator reduce run test calls prints youd expect prints vector range appears subscribe prints elements problem reduce operator expectation surrounding chain established vector passed global instance shared evaluation chain naturally fixing implementing operator purpose simple potential previous counterop start null create vector inside accumulator function isnt shared subscribers alternatively operator factory callback initial rule thumb aggregator operator taking plain cautious initial shared subscribers plan consume resulting stream multiple subscribers clash give unexpected results crash 