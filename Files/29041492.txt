call function result filter operation stream 
wondering read file stream api filter input stream pattern match pass result function consumes groups match expect stream operations stateless groups pattern matcher passed step stream processor lets blockquote stream filter pattern matcher matches blockquote add callout function takes preferably groups matches blockquote stream filter pattern matcher matches iftrue myfunc blockquote basically avoid collecting matches memory data structure dont big stream lets huge file construct serialize object encapsulates pattern matchers groups dont hold matches single data structure process imperatively operate file process single line limit memory consumption allowing file processed parallel iterate lines process time equivalent terminal operation foreach stream case dont care side effects parallelize terminal operation curious general case foreach problematic parallel processing 

request bit weird call implies entire matches element em em match makes sense method stream makes chain action applied matches purpose tool job implies collection data multi threading issues function threading issues run parallel problems hr worth noting href http docs oracle javase docs api util regex pattern html aspredicate rel nofollow method fixed adding anchor pattern print pre class lang prettyprint override work order change hr state options ol li create apply li li express combined result mapping filtering result li ol print execution parallel stream change order href http docs oracle javase docs api util stream stream html foreachordered util function consumer rel nofollow interested source order 