iterate list objects assign children 
location pojo stores location objects parsed json file map graph nodes location graph corresponds id field id start node id goal node solve adapted node class include methods create graph list locations create graph hard coding locations calling addchildren create list location objects thoughts problem loop loop locations list add location child previous basically wondering list location objects iterated addchild called sequential location location class map locations object representations 

build graph kind recognize graph composed basic elements ol li edge li li vertex node li ol key properties ul li vertices number edges li li edges single nodes implementation modified book keeping sake li ul practically speaking access depend trade functionality performance addition graph nodes worthless dont information add store data named edges things put basic structure implement generic graph pointed graph dbs neo sophisticated code youd model locations moving question href http codereview stackexchange codereview stackexchange blockquote edited blockquote imagine code ul li location vertex li li location connected locations vertices location edge li ul code difficult work dont declared edges properties edge weight locations property implementing visited call state graph wide state making part location state management problem imagine find reset visited property node throw create graph inefficient error prone implement href http en wikipedia org wiki dfs rel nofollow dfs easy recursively tail loop pass visited state dfs method call method em private em rough outline reach href http chat stackoverflow rooms chat give input eventually slick reusable make claim dfs works close 