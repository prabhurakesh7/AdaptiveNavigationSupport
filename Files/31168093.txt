hashmaps treemaps linkedhashmaps work 
questions maps ol li iterating hashmap guarantee iteration order li li hashmaps faster treemaps li li linkedhashmaps work maintain order doubly linked list information entry stored entry li ol reading api doc beginner programming trouble understanding 

blockquote iterating hashmap guarantee iteration order blockquote theyre inserted order occurred hash suppose hash function em em returns string zebra enter keys hash map order read zebra attached attached apparent source code mind simplified variation hashing represents case collision hash collision addressed fashion meant primer key inserted order hash hash function flaws dont good objects hash run aberrant behavior blockquote hashmaps faster treemaps blockquote hash operation dependent size collection recall em em operates based single insert inserting elements natural ordering theyre involves traversing structure find spot insert involve rebalancing reorganizing structure ensure balance preserved strong lot strong source method blockquote linkedhashmaps work maintain order doubly linked list information entry stored entry blockquote href http grepcode file repository grepcode root jdk openjdk 8u40 b25 util linkedhashmap av rel nofollow read source main takeaway ul li keys grouped hash structure ensure uniqueness li li order inserted preserved fifo structure linked list li ul hash function ensure key unique immediately insert list ordering uniqueness preserved 