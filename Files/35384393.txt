immutable objects decrease overhead due garbage collection 
newb read garbage collection answers href http stackoverflow questions garbage collector justifying immutable objects programmer create objects compared existing objects multi threaded applications href https docs oracle javase tutorial essential concurrency immutable html tutorial cost object creation made em decrease memory overhead due garbage collection em elimination code protect mutable objects threads interference memory consistency errors blockquote impact object creation overestimated offset efficiencies immutable objects include strong decreased overhead due garbage collection strong elimination code needed protect mutable objects corruption blockquote strong question garbage collection mutability immutability objects strong 

allocate objects immutable simple copy time share mutable caller mutate called lot allocation rate dramatically increase put pressure hand dates immutable notice dont copy date allocate object immutability happy share object mutate apply complicated data structures causing massive allocation due defensive copies absolutely art called illusion copy fact copies share lot original shouldnt surprised functional languages aware garbage collected 