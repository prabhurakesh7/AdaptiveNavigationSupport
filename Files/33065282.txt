lock free performance jmh 
jmh multi thread test ol li current variant performance ops li li uncomment special line replace unsafe putorderedobject direction em current em em current em performance ops li ol understand cpu caches cleaning store buffer replace lock based method cas performance ops br linuxperfasmprofiler printassembly case explain happen slow store load barrier putordered working fix 

rule advanced answers stupid mistakes gc threads work benchmark gc running special line uncommented yields seconds run youve spent seconds gc plain shows 8s full gcs sucks 5s spent gc iteration bounded 5s run time sucks building linked list granted head queue unreachable head collected collection instantaneous longer queue memory consumes work gc traverse positive feedback loop cripples execution queue elements collectable feedback loop reaches oome storing intial field make test eventually oome question memory barriers queue performance frank reconsider test designing test transient memory footprint stays call art 