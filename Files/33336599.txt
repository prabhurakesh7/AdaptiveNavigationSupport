unit testing overloaded methods 
class public methods similar job differ argument types methods extract needed data call private method job question test class test public method methods return correct data end creating test methods literary assertion concept dont moving assertions private method duplicate assertions code idea tests important part documentations developers fully understand code reading tests junit mockito dont tdd tdd helped avoid problem 

tdd magical bullet kill problems make code start produce bad code tdd question methods question answer code methods part public api tested error parameter mapping embarassing private method works great fail give correct parameters test private method directly honestly dont good possibility solve problem composition words dont make private method add interface set work private method test multiple things idependently ul li public methods give correct parameters interface verify li li implementing class work correctly test li ul answer question refactoring good idea case 