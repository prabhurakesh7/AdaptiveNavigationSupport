session management microservices 
setup ol li stm stingrey traffic manager load balancing session stickiness li li weblogic cluster li li auth handled party tool li ol worry session horizontal scaling running multiple instances application stm weblogic cluster makes subsequent request managed server monolithic application move microservices move current infrastructure stm weblogic cluster auth tool planned ol li gateway war routes requests microservices li li microservices war functional domain li li api gateway receives user requests microservices accessible li ol question ol li api gateway state full microsevices stateless li li user session data shared api gateway microservices li ol suggest alternatives resources links 

share opinion application stateless means solution terms performance scalability impossible maintain distributed session management layer gateway responsible authentication generate unique session identifier key key propagated microservices part api order access session microservice key work terms implementation nosql solutions suit ol li href https redislabs rel nofollow redis hset li li href https hazelcast rel nofollow hazelcast memory grid solution implement required functionality li li href http memcached org rel nofollow memcache give good map distributed li ol solutions performance crucial solution slow understanding rdbms good potentially harder scale hope helps 