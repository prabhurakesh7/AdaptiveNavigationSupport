efficient algorithm mapping data sets 
dynamic sets elements side br generate combinations sets picture point match elements seta set setb element category mapping combination seta multiple match setb vice versa matching criteria element setb parts contained combinations seta match match time space algorithm improvements calculation repeats sets reducer task hadoop map reduce generate combinations dimensions aggregate measures qualifies combination framework level optimization breaking job multiple jobs 

pick elements turning back set element set make map element starts element map subset elements series maps run entry maps add set leave empty build map elements sets elements reverse process making map sets iterating map adding pair opposite orientation space create lookup map youll spend time scanning set lookup linear building final lookup sets space time proportional number separate sets case avoid links element source set viewed bit require bit time case youre pretty stuck step inherent problem dont comprehensive scheme outlined find em em match expensively 