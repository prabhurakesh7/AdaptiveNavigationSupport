search multiple hashmaps time 
strong tldr strong search entry multiple read hashmaps time hr long version dictionaries sizes stored read changed strictly read check dictionary stored entry key code originally key complicated search string typos variant stored entry stored key banana id bannana banana entry banana returned levenshtein distance loop dictionaries entry works entry strings dictionaries sizes 70k entries takes processing output strong impression lookup dominates runtime idea improve runtime search dictionaries parallely dictionaries changed thread accessing dictionary time dont safety concerns question multithreading search concurrent hashmaps understanding dont runnable class id put processing method rewrite current class fit runnable wondering simpler method simply runnable limited understanding thinks restructure lot hr asked share levenshtein logic fancy 

order multi threading case monitor class basically stores results coordinates threads thread set search specific dictionary main method demonstration 