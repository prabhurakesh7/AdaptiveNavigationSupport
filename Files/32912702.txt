impact setting xx disableexplicitgc nio direct buffers 
building web application aggressive performance slas periodically violated due jvm lunch due system gc calls weve debugging determined cases internal app server code invoking system gc occurs times app server booting application deployed arent concerned system gc periodically triggered app running internal app server calls nio classes heres stack trace capture event aware impact shut calls system gc enabling xx disableexplicitgc case setting xdisableexplicitgc running websphere ibm jre thing dont create memory leak havent find direct reference system gc calls nio isnt code comment specifically addressing occurs jdk code href http hg openjdk net jdk8u jdk8u dev jdk file 4a1e42601d61 src share classes nio bits rel nofollow http hg openjdk net jdk8u jdk8u dev jdk file 4a1e42601d61 src share classes nio bits bad idea completely disable system gc due nio reduce frequency called appears set xx maxdirectmemorysize appears set upper bound amount allocated memory adverse affect 

disabling explicit gcs prevent buffers native memory hold collected delay collections long time means memory allocated direct buffers accumulate long time collected long run leak increase peak memory usage blockquote href http hg openjdk net jdk8u jdk8u dev jdk file 4a1e42601d61 src share classes nio bits rel nofollow http hg openjdk net jdk8u jdk8u dev jdk file 4a1e42601d61 src share classes nio bits blockquote understand call free buffers limit hit reserving requested amount call gc call affected attempt mmap fails blockquote reduce frequency called blockquote called limitation hit tune gc application code meets options ul li fixed set buffers limitation exceeded li li buffers collected early shortlived buffers die young gc li li generation collected regularly direct buffer space runs li li heap buffers direct buffers li ul calls wont hotspot exists option ibms vm similar 