atomically maintaining service layer transactions database logging spring framework 
web application implemented spring hibernate typical controller method application typical service class create object insert database time object saved requirements ul li object authorised object li li object properties object li li save operation log creation operation atomic foo object saved object log database indicating user properties operation li ul transaction management handled service layer creating log saving controller violates atomicity requirement pass object violation separation concerns principle logging cross cutting concern move transactional annotation controller suggested places read read accomplishing job spring aop interceptors experience information present service class figure pass information authorised interceptors direction sample code fulfill requirements scenario 

multiple steps implemented solve problem ol li passing log object obtrusively service classes li li create aop based interceptors start inserting log instances db li li maintaining order aop interceptors transaction interceptor log interceptor transaction interceptor invoked ensure user insert log insert single transaction li ol strong passing log object strong threadlocal set log instance strong log interceptor strong spring aop works href http docs spring io spring docs current spring framework reference html aop api html rel nofollow http docs spring io spring docs current spring framework reference html aop api html create annotation acts pointcut log method level annotation put service methods logging create implementation loginteceptor acts advice org aopalliance intercept methodinterceptor wire pointcut amp advisor strong ordering interceptors transaction log strong make implement org springframework core ordered interface loginterceptor return integer max getorder method spring configuration make transaction interceptor lower order transaction interceptor called creates transaction loginterceptor called interceptor proceed invocation saving foo save log extracting thread local 