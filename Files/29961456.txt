copy iterator 
iterate set values iteration loop iteration works fine returns behaviour clear solution calling method loop loop iteration reinitialized inefficient approach independent didnt work holds reference copy iterator approach 

smallest api work data sequentially abstracts underlying data source move forwards option reset rewind object thrown usage due limited api offers simply copy knowing implementation underlying data source ways handle problem strong aquire iterator underlying data source strong call time iterate data ul li advantage easy easy implement cache required li li disadvantage performance file read parsed underlying data source changed meantime li ul strong combine processing code single iterating loop strong combine steps ul li advantage iterator required cache required li li disadvantage processing steps dependencies li ul strong copy elements local cache strong iterate items put local collection aquire arbitrary number iterators ul li advantage simple implement fast data cache li li disadvantage additional memory cache required li ul strong modify data source api implementation handle problem strong meaning change return gain arbitrary number iterators ul li advantage underlying data source cache data copy data case underlying data source cache li li disadvantage change api li ul 