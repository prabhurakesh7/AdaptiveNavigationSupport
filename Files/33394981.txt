designing classes hotel 
design class list objects object list list objects design kind scenario traverse rooms traverse list floors rooms hotel list floors list rooms 

blockquote hotel list floors list rooms blockquote developers stop mimic real life relationships objects kind entity kind entity doesnt belong single object cluster strong cases commands strong object model processing strong invariants rules strong protected process good object model knowing problem solving hold traditionnal data structures choose whats knowing data access patterns instance model room reservation process shouldnt accept overlapping reservations create smallest cluster data object model fulfill task bring memory entire room list reservations fulfill single room reservation object holds collection turn hold collection chances aggregate carries list upcoming reservations query purposes list rooms specific floor hotel relationships doesnt expressed object references holds holds queries fulfilled database queries understand question purely academic real life problem understand object models arent crafted real life relationships strong commands strong 