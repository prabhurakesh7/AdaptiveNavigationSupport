lazy parsing stanford corenlp sentiment specific sentences 
strong ways optimize performance stanford corenlp sentiment pipeline result sentiment sentences specific keywords input strong approaches strong approach stanfordcorenlp pipeline annotating entire text sentiment strong defined pipeline annotators tokenize ssplit parse sentiment run entire article looked keywords sentence present run method returning keyword satisfied processing takes couple seconds code strong approach stanfordcorenlp pipeline annotating entire text sentences separate annotators running sentences interest strong weak performance solution defined solution defined pipeline annotators tokenize ssplit looked keywords sentence present created annotation sentence run annotators parserannotator binarizerannotator sentimentannotator results unsatisfying parserannotator initialized properties time entire pipeline run document approach strong questions strong ol li parsing corenlp lazy performed sentiment sentence called performance reasons li li parser sentence work long parser entire article article sentences configure works faster li ol 

youre speed constituency parsing single improvement href http nlp stanford software srparser shtml rel nofollow shift reduce constituency parser orders magnitude faster default pcfg parser answers questions ol li em corenlp parsing lazy em weve implemented pipeline havent cases house happily accept contribution lazy annotator wrapper youre interested making li li em parser sentence work long parser entire article em default stanford pcfg parser href https en wikipedia org wiki cyk algorithm rel nofollow cubic time complexity respect sentence length recommend restricting maximum sentence length performance reasons shift reduce parser hand runs linear time respect sentence length li ol 