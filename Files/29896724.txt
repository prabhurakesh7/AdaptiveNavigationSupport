text search based algorithm behaving intended 
h2 update h2 updated question newer code suggested fellow users clarifying ambiguous text previously h2 update h2 access log files generated application question constrained work content log files solutions scope ill modified sample data bit point key em variables em ranges thread multiple times show multiple times logs thread run script file script em em run thread wont run thread file runs running exact line wont executed successful blockquote start thread starting myscript script myfile file thread finished myscript script myfile file end blockquote unsuccessful blockquote start thread starting myscript script myfile file end blockquote hr addressing query ill give rundown code desired behavior hr h2 summary h2 parsing large log files average 100k 600k lines attempting retrieve information order worked boolean algebra request work paper code mustve missed blatantly inform advance code shape form optimized simply work log file threads hang started finished number thread ids ranges pseudo code hr h2 search hung threads h2 h2 thread hung h2 hr h2 data h2 blockquote scriptexecthread started afile xyz scriptexecthread started bfile abc scriptexecthread started cfile zyx scriptexecthread started dfile zxy scriptexecthread started efile yzx scriptexecthread finished afile xyz scriptexecthread finished bfile abc scriptexecthread finished cfile zyx scriptexecthread finished dfile zxy scriptexecthread finished efile yzy scriptexecthread started bfile abc scriptexecthread started dfile zxy scriptexecthread started afile xyz scriptexecthread finished bfile abc end log blockquote youll noticed threads number amp started failed finished reason simply line h2 sample data h2 blockquote scriptexecthread info starting scriptexecthread info starting scriptexecthread info finished scriptexecthread info starting scriptexecthread info finished scriptexecthread info finished scriptexecthread info finished scriptexecthread info finished scriptexecthread info starting scriptexecthread info starting scriptexecthread info starting scriptexecthread info post finished scriptexecthread info finished scriptexecthread info starting scriptexecthread info starting scriptexecthread info starting scriptexecthread info finished scriptexecthread info finished scriptexecthread info starting scriptexecthread info starting blockquote hr code simply displays entire log file lines started starting make sense review code removed redundant information dont display left feel free ill add 

keeping separate sets threads tucuxi work thread id starts runs finishes set forever thread id starts hangs wont reported suppose moment thread ids arent reused thread created receives id keeping separate sets youll hundreds thousands elements time youre performance data structures proportional theyve time operation performance matter case performing expensive operations running data times larger preamble working version tucuxis code dropped set called threads start thread finishes pulled means size number running threads equal total number threads run operations faster pleasant side effect track threads running log line log line basis determining threads hanging heres python program generate huge test cases 