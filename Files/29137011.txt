guava objects moreobjects overloading avoid autoboxing 
guava objects deprecated moreobjects implements tostringhelper class builder pattern add function implemented primitive type object class works fine overloading primitive types autoboxing converts calls add string object function question reason overloading primitives avoid autoboxing repetitive autoboxing huge overhead case happen effective item prefer primitive types boxed primitives efffective item p193 blockquote conservative policy export overloadings number parameters blockquote tostringhelper violation policy author talk class objectoutputstream primitives function writeboolean boolean writeint int understand advantage avoid overloading specific good input welcomed 

hesistate give answer guessing guava language designers give definite answer surmise shortly conservative policy effective 2nd ed page statement blockquote avoid strong confusing strong overloading blockquote whilst blockquote constitutes confusing overloading debate blockquote confusing overloading claim logical behaviour class identical simply implemented suggestions ej play item page item avoid creating unnecessary objects create boxed primitives overloads handle primitive types inevitably efficiently boxing calling bear mind guava written google open sourced scale google works difference primitive type creating boxed type calling destroying object measurable adding overloads give performance win caller needing hand differently named overloads consciously choose invoke invocations lazily select overload hey works keeping names work transparently hr lot examples guava avoiding unnecessary creation objects overloads instance static factory method overloaded eleven elements handled variadic overload em em implemented simply require implicit creation variadic array time defensively copied internally order guarantee immutability list overloads provide opportunity build list bit efficiently user class notice 