loop alternative clarification 
working lessons completely understand lesson purpose purpose lesson explain loop works creating alternative simulates loop work previous lesson explanation loop simple lesson instructor showing create alternative simulator loop works strong question strong reading documentation iterator listed interface importing class documentation util scanner considered class interface strong question strong question loop type control implemented hasnext method iterator checks element check stop boolean beginning loop loop control variable lcv understand meant eyes object iterator class set equal arraylist iterator method util interator considered interface basically contract declared methods implemented implemented class arraylist class completes set statements declared iterator methods arraylist class called constructor traditional classes called arraylist bit confused hoping shed light 

reference types include classes interfaces enums arrays bit pieces code define behavior imported program methods interface code methods constants defined parameters methods accept types return compiler check correctness program generate proper calls methods byte code creates method returns iterator items list object class implements dont class implemented information encapsulated lists code implements methods declared implements contract reason assign reference object implements interface em em variable type em em interface type variable points actual object class program interested fact implements em em declare variable interface type list iterator assign loop variable object type implements contract loop condition check line 