methods objects relationship 
assignment create classes entry amp roster link classes methods created instructions strong entry strong data entry private instance variables firstname lastname grade names string grade integer methods add methods entry string firstin string lastin int gradein constructor string tostring return string grade separated tab format boolean equals entry return true entry parameter matches current object return false match int getgrade return grade object strong roster strong data roster arraylist entry objects constant found arraylist assignment methods add methods roster instantiate arraylist arraylist initialized empty void insert entry search list private search method entry roster add list roster void delete entry search list private search method entry matches delete entry match order remain void printall print entries roster line double average calculate average grade roster double private int search entry implement linear search algorithm work arraylist entry equals method entry class determine match grade equality check solution loop breaking loop acceptable entry roster classes coded roster class main method code runs doesnt give intended output hard time coding linear search arraylist search method errors trickled insert delete methods advice fix methods appreciative programming 

strong test strong average function doesnt static check size list empty function dont return divided return straight list empty change loop current wrong starts counting loop cleaner strong test strong problem lies search function things wrong loop fundamentally wrong end iteration instantly quit function youre looping entire list put inside block starts counting indexes start means youll condition btw loop condition correct literally index entire function simplified fix test error insert function putting add entry block youre essentially search entry find index bigger add means exists add idk doesnt make sense future tests reading loud meaning checks make sense noticed ton small errors code things test fix time program straighten quickly fact fixing things entire program passes tests didnt read requirements assignment read link comments case question favor spent time debug code 