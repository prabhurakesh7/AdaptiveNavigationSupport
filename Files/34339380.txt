effective handling sql sqlexception ora 
exception versions strong em root em strong state global variable declarations package specification body recompiled amp services calling internally calls thrown exception restart services state present package specification feasible solution strong em code em strong found solution se questions topic strong option strong strong option strong strong option strong removing global variables package strong em option forever disadvantages option amp option em strong strong em options performance overhead database option solution em strong 

standard behavior oracle compiled instance packages session memory session package states valid session package variable database sessions package variable values bound session change package oracle load package sessions good code change package variables lost stopping restaring application code change variables lost graceful exception showing package variables lost depending youre package variables problems application exception hr real life package variables theyre initialized demand oldschool caching plsql tables persistent data content shopping cart webshop app package variables fact package variables persistent treated transient em optimistic persistency calls em rule handle exception easily ul li change package code kidding li li simply run failed pl sql call exception li ul ul li call addcustomer li li sql sqlexception ora li li call addcustomer li ul 