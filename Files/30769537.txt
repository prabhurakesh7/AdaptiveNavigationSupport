wrap head object oriented design 
object oriented design pretty neat concept struggling wrap head facets key good object oriented design good grasp object oriented classes real world entities objects instance fields entitys attributes methods actions verbs entitys abilities interfaces abilities imbue object relationship implementations set stone superman krypton kryptonian set special abilities flying freeze breath superman fly green lantern goku batman flight interface good idea youre creating fictional universe problem add generics mix type parameters creates contract class interface type flight coupled superhero bird fly imagine plain interfaces parameterized interface interface coupling type bothers things complicated add bounded restriction parameter type real world concrete object identify pretty wrong class parameter restrict type flight good design flight independent classes restriction wrong pidgey bird fly object abilities question implications put real world examples easy understand talk collections collections containers create wide variety containers holds kinds objects generics container objects design objects 

analogies features oop valid generics make sense talking collections containers hashmaps places bank process notes currencies write public class moneyprocessor generics strong arent required strong context interface wouldnt reason generics brings point strong doesnt strong oop flexible reason correct method takes parameter end world make read edit read 