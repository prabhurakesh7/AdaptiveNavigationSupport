comparing arraylist candidate objects data read text file 
foremost assignment college class hack answer experienced point view hit brick wall easy election class add candidate objects arraylist type candidate candidate object attributes id total number votes starts candidate objects created stored candidate main client candidate objects added arraylist type candidate located election class problem votes candidate read text file consists numbers vote corresponds id candidate countvotes method located election class reading text file votes compare votes read text file real time candidates id vote id equal increment count total number votes candidate method work candidate id time fed method call countvotes readfile cands work specific candidate store votes arraylist comparison arraylists insight comparing votes read text file candidates id setting total number votes counted candidate candidate class election class main client output running program edit adriaan advice time fix problem implementing arraylist hold votes read txt file understand map data structure hold candidate objects option reason decided stay implementation implement priority queue map priority queue knowledge passed posting updated code feel free comment updated solution updated candidate class updated election class output edit final solution final solution turned didnt rework code completely due assignments finish comparator implemented inside loop located election class method startelectionproblemtwo comparator produce expected results happened didnt plan changing code road beginning wanted read candidates file didnt implement due date comparator votes equal votes equal check number consecutive terms served terms served win terms served equal compare candidate class election class electiontiebreaker class problemoneclient problemtwoclient 

declare fields private protected default declare fields interface implementation typo ninth candidates main class standard change added generic class types dont remove generic types classes rid annotation main method creating array candidates iterating put arraylist dont array store candidate find candidate id edit hints propose changing api ing number votes convenient avoids fraud string concatenation avoid memory usage caused intermediate strings interned href http stackoverflow questions string pool string pool adding candidates list sort descending number votes time called separate method supposed lot work move method main method improved readability implement methods edit passing makes aware dependent design hide implementation detail single class share case elegant hold complete list votes solving leave iteration votes call vote simple suggested method provided alternative approach write implementation pass argument discussion exact issue href http stackoverflow questions iterators read process file made comment implementation noticed applied stringbuilder case iteration simply format result directly put output single line make compact placeholder replaced string representation matching argument inserts platform specific newline edit unit testing interested additional assignment write unit test election class junit framework maven build project add dependency pom xml add href http central maven org maven2 junit junit junit jar rel nofollow jar file classpath unit test typically resides separate source directory run maven command line ide run test partially implemented unit test considered good practice write unit tests classes suitable easily unit tested accesses file directly class easily tested interesting behavior test method class called model class personally dont prefer write unit tests model classes covered part unit tests passed arguments case writing tests forces design easily testable classes elegant 