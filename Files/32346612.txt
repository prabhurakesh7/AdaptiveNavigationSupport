dao null integer object negative number int mapped object optional number column 
working project recently discussion lets database table numeric column allowed source code colleagues prefer primitive type int mapped objects set case prefer make column nullable integer object source primitive type set null searching pros cons variants couldnt find article found href http www javapractices topic topicaction id rel nofollow http www javapractices topic topicaction id common exception rule model objects map roughly database records null represent optional fields stored null database edit add kind columns project kind fake foreign keys real database constraints dont case means relationship primay key id table needed calculations stuff 

nullable columns preferred null dont store approach null integer object numeric column calculation adding null change calculation calculations correct strong pros null integer strong ol li numeric column calculation output effected li li orm underlying framework doesnt insert column insert query li li benefit db number rows nullable columns billion rows nullable column wanted put null li li integer null require bytes memory space memory benefit claimed static null integer object li li dont check li ol reason guys int primitive realized benefit objects primitives jdk style coding hope answer question 