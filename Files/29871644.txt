obfuscate proguard names readable testing 
pre release stage app started compiling release builds obfuscation breaks things hard decipher whats debugging impossible line numbers variables classes unreadable release build stable id make obfuscation pain behave fully obfuscated proguarded release converts names reflection android layout menu resources break encountered classes didnt names strong helpful pre release testing obfuscate code strong converting names proguard helps makes broken stuff work class names correct break broken full obfuscation time easy figure whats mapping txt names human readable href http proguard sourceforge net manual usage html obfuscationoptions rel nofollow http proguard sourceforge net manual usage html obfuscationoptions options dont fine generate renaming file running classes give question strong feed file proguard format strong 

managed skip option href http proguard sourceforge net manual usage html applymapping rel nofollow section linked h3 tl dr h3 jump strong implementation details strong section copy blocks gradle groovy code android subprojects file h3 mapping txt h3 format mapping txt pretty simple shrinked classes members listed information generate transform pretty good chance success h3 solution dump classes failed h3 generate input mapping txt based current classpath passed proguard loaded classes program jars libraryjars resolve super classes iterated class declared member output big problem solution contained obfuscated renameable thing app problem takes things literally apply mappings input mapping file ignoring rules leading warnings conflicted renames gave path didnt duplicate proguard config wanted implement proguard config parser h3 solution run failed h3 based fail thought solution make configuration flow ul li job br outputs source li li transform file li li duplicate gradle task run transformed mapping li ul problem complicated duplicate task started route joined 3rd solution h3 solution output success h3 duplicate task analyzing proguard android plugin code realized easier simulate heres final flow ul li job br outputs source li li transform file li li run proguard config br time mapping file renames li ul result wanted br pattern class field names inverted case notice underscores img src http stack imgur 4rxq8 png alt lt gt unfuscated names mixed names h3 implementation details h3 make simple keeping maximum flexibility call unfuscation becuase undoing proper obfuscation considered obfuscation terms reflection implemented guards 2nd round makes assumptions obivously obfuscation unfuscated pointless unfuscate accidentally released debuging turned unfuscation helps inside ide app tested obfuscated interals androidproguardtask mapping file didnt deal ahead created unfuscate task transformation runs proguard sadly proguard configuration exposed stop drawback takes double time proguard guess worth debug heres android hooking code gradle part transformation managed quickly compose matching regex pattern pretty simple safely ignore class structure remap method key called line line split parts text obfuscated stays changed middle change statement suit h3 unfuscations h3 apply transformation package names didnt test strong warning strong irreversible transformations error prone transformations tricked uncommon pre postfixes text transformations 