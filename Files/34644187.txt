file exists behaving flakily multithreaded environment 
batch process running jdk running system rhel el5 smp process list metadata objects database metadata extracts path file file exist process executorservice launch multiple threads thread runs callable launches process reads file writes file input file exists logs result file exist log result find behavior indeterminate actual existence files constant running process give consistent results correct results occasionally finds files exist run process find files previously exist happening alternative reliable mistake writing files multithreaded process threads attempting read directory smaller thread pool strong update strong actual code unix process called worker threads scenario strong update strong experiment switching io file exists nio files exists provide reliability failure condition multiple attempts occurred approximately time guess nio version robust handles underlying file system strong finding proven false nio strong strong update strong review find failure condition occurring switching nio panacea obtained results reducing thread pool size executor service reliable chance thread reading directory thread launching process writes directory possibility investigated served putting output files directory input files put directory easier code confusing things output file creation affecting directory input directory scan strong update strong recoding output files written directory input files existence checked things strong change helps things executorservice thread pool size words multithreading operation strong 

application properly multithreaded accessing filesystem limitations case bet threads accessing time consequence fs runs file handle file instances throw exception simply return directory exists 