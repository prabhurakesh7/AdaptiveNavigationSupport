implementing metric suite astparser 
strong background question strong start implementing metric suite concerned approach jdts href http eclipse org juno index jsp topic 2forg eclipse jdt doc isv 2freference 2fapi 2forg 2feclipse 2fjdt 2fcore 2fdom 2fastparser html rel nofollow astparser file directory started collect things line count average lines method class methodvisitor class extends astvisitor method visit methoddeclaration node calculate cyclomatic complexity method split method body complexityvisitor visit ifstatement node visit returnstatement node structure statement code unsure levels method find helpful node getelsestatement returns basically string regex number paths statement strong question strong deduce levels statement eclipses astparser cleaner solution ijavaelement parsing code putting key words list looping back strong sample code testing phase strong cheers 

answer question calculating mccabes cyclomatic complexity mccc metric dont care nesting levels simply count number branching instructions add end definition href http sonarqube sourcemeter static sourcemeterjava usersguide pdf rel nofollow users guide href https www sourcemeter rel nofollow sourcemeter tool strong mccabes cyclomatic complexity mccc strong method complexity method expressed number independent control flow paths represents lower bound number execution paths source code time upper bound minimum number test cases needed achieving full branch test coverage metric calculated number instructions foreach case label belongs switch instruction catch conditional statement logical amp amp logical expressions add short circuit evaluation branching depending operand instructions included switch default label belongs switch instruction finally 