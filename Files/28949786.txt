android interface considered practice communicating activity fragment 
documentation href http developer android training basics fragments communicating html rel nofollow communicating fragments google tells practice communicating activity fragment strong implement interface strong interface called fragment execute behaviour activity hack directly activity method strong getactivity strong strong public method strong confuse lot couldnt critical disadvantage hack advantage approach head ol li confine strong resource accessibility strong activity fragment call getactivity access public method convince li li readable story telling code approach code tells activity open specific accessible area fragment inside fragment interfere activity directly strong code activity strong open code fragment li ol summarise bit convinced frankly solid reason idea documentation appreciated 

main advantage modularity code directly call parent class child class create href http en wikipedia org wiki circular dependency rel nofollow cyclic dependency effectively means replace changing approach frequently results spaghetti code difficult maintain harder extend impossible replace big refactoring efforts call public methods directly fragment activities implementing hacky solutions swap activity controller class solution difficulty comprehending subject highly recommend read book href http rads stackoverflow amzn click rel nofollow effective 