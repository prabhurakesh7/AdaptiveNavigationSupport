generic method bound return type 
code compile method returns instance type subclasses thereof code class invokes method compiler store return variable type hierarchy strong shouldnt return type instance strong type erasure bytecode method strong edit strong replaced consistently 

apparently legitimate type inference reduce href http ideone jkr6ke rel nofollow ideone compiler allowed infer nonsensical intersection type interface question inferred silly conversion impossible cast hr type inference basically works ul li set em inference variables em methods type parameters li li set em bounds em conformed li li em constraints em em reduced em bounds li ul end algorithm variable em resolved em intersection type based bound set theyre valid invocation compiles process begins href http docs oracle javase specs jls se8 html jls html jls rel nofollow blockquote inference begins bound set typically generated list type parameter declarations inference variables bound set constructed em nbsp nbsp nbsp nbsp em ul li hellip li li type delimited href http docs oracle javase specs jls se8 html jls html jls typebound rel nofollow em typebound em bound appears set hellip li ul blockquote means compiler starts bound means subtype moving href http docs oracle javase specs jls se8 html jls html jls rel nofollow return target type considered blockquote invocation poly expression hellip return type invocations target type ul li hellip li li constraint formula reduced incorporated bound set li ul blockquote constraint formula reduced bound resolved href http docs oracle javase specs jls se8 html jls html jls rel nofollow blockquote hellip candidate instantiation defined ul li proper upper bounds li ul bounds incorporated current bound set blockquote recall set bounds defined apparently legitimate type href http docs oracle javase specs jls se8 html jls html jls rel nofollow glb requires blockquote compile time error strong classes strong strong interfaces strong subclass vice versa blockquote finally blockquote resolution succeeds instantiations inference variables substitution ul li unchecked conversion method applicable invocation type obtained applying type li ul blockquote method invoked type assign impossibly converting fact final classes apparently considered hr type em erasure em completely unrelated issue compiles reasonable neednt worry specification 7s type inference essentially sophisticated version 8s compiles similar reasons hr addendum strange problem present rarely write generic method return type solely inferred return target returned method casting suppose map analog stores subtypes interface perfectly valid make error fact em em em em possibility error programming code potentially unsound begin generally type parameter solely inferred target type reason bound produce consume 