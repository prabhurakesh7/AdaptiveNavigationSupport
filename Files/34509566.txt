case string concatenation 
strong strong amp strong strong pointing string literal string constant pool case internally strong strong amp strong strong pointing reference amp strong strong amp strong strong 

things ol li lurkers tests variables point strong object strong em equivalent em strings true false depending refer object href http docs oracle javase docs api lang string html equals lang object compare strings equivalence meant explain true suggestion compare strings li li equivalent string constants strings compiler constants rules jls class made refer string compiler lists classs href https docs oracle javase specs jvms se7 html jvms html jvms constant pool true li li class loaded string constants automatically href http docs oracle javase docs api lang string html intern em interned em nbsp mdash jvms string pool checked equivalent string found object object constant added pool string constant initialized class string constant initialized class theyll points covered part href https docs oracle javase specs jls se8 html jls html jls jls bit class constant pool bit implementation detail link jvm spec earlier jls speaks interning li li compiler string concatenation dealing constant values compiled string constant compiler jvm apply points concatenation em compile time em runtime covered href https docs oracle javase specs jls se8 html jls html jls jls em constant expressions em true reason true refer constant string compiler ensured referring string classs constant pool compiler operands constant code analysis easily show specification compiler concatenation constant values specifically compiler outputs code referred work runtime creating object string isnt automatically interned ends referring object false href http stackoverflow questions case string concatenation comment56760592 vinod declared href https docs oracle javase specs jls se8 html jls html jls em constant variable em theyre called apply compiler turn true li ol reiterate means compare strings equivalence 