performance stream sorted limit 
streams sport methods return sorted version stream return stream returning number items stream operations applied succession sorting performed sorts items entire list sorted words fixed operation documentation doesnt performance methods conjunction reason imperative implementation operations sort limit taking time operations performed smart streaming framework view entire stream executing optimize special case 

start making general point language specification places restrictions streams implemented meaningful performance streams vary significantly implementations interface create class implements performance special behaviour performance makes sense context implementation openjdk implementation lots classes implement interface openjdk implementation sorting streams ends class source href http hg openjdk net jdk8 jdk8 jdk file 687fd7c7986d src share classes util stream sortedops rel nofollow find sorting methods end returning extensions stateful operations methods check upstream sorted case pass downstream special exceptions sized streams upstream preallocate arrays end sorting improve efficiency unknown size streams upstream sorted accept items sort send method downstream instance conclusion openjdk implementation collects items sorts sends downstream cases wasting resources downstream discard elements free implement specialised sort operation efficient special cases implement list largest smallest items stream operation replace 