watch directory scheduled executor hard loop 
href http stackoverflow questions suppress unchecked cast warning watchevent previous question warking simple exercise watched directory file code href https docs oracle javase tutorial essential io notification html rel nofollow oracle docs worked problem unchecked cast warning unsure problem code putting hard loop inside thread blocking theory operating system time slicing hard loop split small chunks share processors time threads application running fact make sorts examples hard loops running threads dont block long priority virtual machine expressly created core language doesnt guarantee kind scheduling thread management time slicing round robin depends actual vm implementation operating system advice studying subject write code run round robin thread scheduling avoiding putting hard loops threads code continuously yeld back control threads gui main thread hard loop watching events sending control back listeners handle case couldnt put thread sleep handled file change yeld control back main loop core idea basically continuously filesystem scheduled executor regularly calls watching thread tradeoff blocking thread immediately notified filesystem change real case put exercise wont immedite notification happy code questions ol li pushing good practice care blocking code threads real cases time slicing present rare safely put hard loop inside thread kind stuff code run embedded device guaranteed round robin li li avoid hard loop case clever thread control methods li ol long post 

pointed comments method doesnt block thread execution key provided mechanism similar method put thread sleep found href http dzone articles 7s watchservice rel nofollow post pointed exploit native file event notification mechanism notable exception href http stackoverflow questions watchservice slow osx implementation answer question inside hard loop block thread automatically put thread sleep letting threads cpu file change notification operating system 