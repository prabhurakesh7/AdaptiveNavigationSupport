springmvc c3p0 hibernate jpa application leaking connections leads connections error 
googled searched stackoverflow solution problem hours reading learn happening solution pertains issue apologies sounds duplicate ill explain happening insight workings c3p0 springmvc web application running tomcat hibernate jpa c3p0 pooling resource page reload application stand makes calls database random image display page application runs fine page reloads eventually crashes restart mysql order application work error blockquote apr pm mchange v2 resourcepool basicresourcepool acquiretask run warning mchange v2 resourcepool basicresourcepool acquiretask 634d8e3d acquisition attempt failed clearing pending acquires acquire needed resource failed succeed maximum number allowed acquisition attempts acquisition attempt exception mysql jdbc exceptions jdbc4 mysqlnontransientconnectionexception data source rejected establishment connection message server connections sun reflect generatedconstructoraccessor101 newinstance unknown source sun reflect delegatingconstructoraccessorimpl newinstance delegatingconstructoraccessorimpl lang reflect constructor newinstance constructor mysql jdbc util handlenewinstance util mysql jdbc util getinstance util mysql jdbc sqlerror createsqlexception sqlerror mysql jdbc sqlerror createsqlexception sqlerror mysql jdbc sqlerror createsqlexception sqlerror mysql jdbc mysqlio dohandshake mysqlio mysql jdbc connectionimpl coreconnect connectionimpl mysql jdbc connectionimpl connectonetryonly connectionimpl mysql jdbc connectionimpl createnewio connectionimpl mysql jdbc connectionimpl connectionimpl mysql jdbc jdbc4connection jdbc4connection sun reflect generatedconstructoraccessor43 newinstance unknown source sun reflect delegatingconstructoraccessorimpl newinstance delegatingconstructoraccessorimpl lang reflect constructor newinstance constructor mysql jdbc util handlenewinstance util mysql jdbc connectionimpl getinstance connectionimpl mysql jdbc nonregisteringdriver connect nonregisteringdriver mchange v2 c3p0 drivermanagerdatasource getconnection drivermanagerdatasource mchange v2 c3p0 wrapperconnectionpooldatasource getpooledconnection wrapperconnectionpooldatasource mchange v2 c3p0 wrapperconnectionpooldatasource getpooledconnection wrapperconnectionpooldatasource mchange v2 c3p0 impl c3p0pooledconnectionpool 1pooledconnectionresourcepoolmanager acquireresource c3p0pooledconnectionpool mchange v2 resourcepool basicresourcepool doacquire basicresourcepool mchange v2 resourcepool basicresourcepool access basicresourcepool mchange v2 resourcepool basicresourcepool acquiretask run basicresourcepool mchange v2 async threadpertaskasynchronousrunner taskthread run threadpertaskasynchronousrunner blockquote pertaining files configurations give context problem spring xml persistence xml basic query class entitymanager instance variable close entitymanager query finished affect number connections made database infographicdaoimpl point questions happening application understand c3p0 handling connections made database thought pooled connection connections made reused growing list connections processlist mysql number connections growing application finally throws connection warning shown question c3p0 reusing connections missing configuration reuse pre existing connections entitymanager close seemingly affect misunderstanding hibernate c3p0 missing greatly advance update blockquote severe web application infographyl appears started thread named mchange v2 async threadpoolasynchronousrunner poolthread failed stop create memory leak blockquote narrowed problem memory leak recognized tomcat starts deploys application question issue find configuration missing config causing issue current workaround set wait timeout cnf kill processes connections older seconds sustainable solution id correct close connections update2 mchange info log blockquote apr pm org hibernate service jdbc connections internal connectionproviderinitiator instantiateexplicitconnectionprovider info hhh000130 instantiating explicit connection provider org hibernate ejb connection injecteddatasourceconnectionprovider apr pm mchange v2 c3p0 impl abstractpoolbackeddatasource getpoolmanager info initializing c3p0 pool mchange v2 c3p0 combopooleddatasource acquireincrement acquireretryattempts acquireretrydelay autocommitonclose false automatictesttable null breakafteracquirefailure false checkouttimeout connectioncustomizerclassname null connectiontesterclassname mchange v2 c3p0 impl defaultconnectiontester datasourcename z8kfsx98137ghpr10fde73 6aa74262 debugunreturnedconnectionstacktraces false description null driverclass mysql jdbc driver factoryclasslocation null forceignoreunresolvedtransactions false identitytoken z8kfsx98137ghpr10fde73 6aa74262 idleconnectiontestperiod initialpoolsize jdbcurl jdbc mysql localhost infographyl db lastacquisitionfailuredefaultuser null maxadministrativetasktime maxconnectionage maxidletime maxidletimeexcessconnections maxpoolsize maxstatements maxstatementsperconnection minpoolsize numhelperthreads numthreadsawaitingcheckoutdefaultuser preferredtestquery null properties user password propertycycle testconnectiononcheckin false testconnectiononcheckout false unreturnedconnectiontimeout usestraditionalreflectiveproxies false blockquote 

youve sounds application creating abandoning multiple c3p0 pools dont experience usual symptom exhaustion single pool application freezes app opens connections maxpoolsize fails hits server side connection limits server things connections creating pool setting hides problem connections abandonned datasources automatically close ed wont good solution making datasources client youll dramatically slow speed app datasources close ed arent youd accumulate open connections youll create thread memory leaks logging things make classes logged info check pool initiation messages c3p0 dumps large pool config message info datasource initialization make messages times problem opening abandoning multiple c3p0 datasources question pooled datasources app embedded object lifetime application spring makes things easy hides details things constructed destroyed key question answer spring creating multiple entitymanagerfactory instances recreating c3p0 datasource multiple times single entitymanagerfactory c3p0 offers logintimeout config parameter 