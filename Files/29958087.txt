2d array performance net 
wrote code test performance arrays net clr windows normal flat arrays net showed faster wrote code testing 2d arrays jagged arrays noticed clear gap version running 2x faster heres code computer measured part takes strong 2200ms strong run heres version takes strong 930ms strong run strong 2200ms 930ms strong change method code fast 930ms long time code fastest version uglier questions ol li code eficiente li li rewrite efficient ugly efficient li ol edit net console applications net version running strong release strong mode strong debugger strong attached edit clear strong strong micro benchmark make operations 2d arrays faster fast prefer cleaner code 

made tweaks code maximum technology domath tweaked method optimization enabling optimize code project settings slower comparison funny uniform 2d array weirdly slower changed optimizations lie results blockquote blockquote blockquote blockquote i7 processor 2ghz turbo boost disabled hyper windows bug strong happening strong notice operation times javas optimizations store internal shortcut reach response faster strong strong surround domath function nanotime checkers domath runs 13ms complete takes 7ms reduces furter optimizations kick apply shortcut procedure counterpart domath operation taking 2ms complete javas compiler optimize simplifying formulas compile time association optimizing features result happen hand fact math step step shortcut edit optimize achieve results strong strong blockquote blockquote user find amazing learned important thing myarray slower creating myarray points myarray kind optimization led run fast optimizations required parallel processing math good row height processed thread threads limited regulated net runtime run concurrently taking great advantage multiple processor cores single core processors 