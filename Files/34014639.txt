designing hashcode method 
studying item effective override hashcode override equals queries points made author ol li author li ol blockquote nonzero initial step hash affected initial fields hash computed step initial step hash unaffected initial fields increase collisions arbitrary blockquote step blockquote significant field object field account equals method compute int hash code field field boolean compute ii field byte char short int compute int iii field long compute int iv field float compute float floattointbits field double compute double doubletolongbits hash resulting long step iii vi field object reference class equals method compares field recursively invoking equals recursively invoke hashcode field complex comparison required compute canonical representation field invoke hashcode canonical representation field null return constant traditional vii field array treat element separate field compute hash code significant element applying rules recursively combine values step element array field significant arrays hashcode methods added release blockquote suppose result calculated case initial result fields result remain result isnt initially result amount constant time initial fields decreasing collisions ol start li paragraph states li ol blockquote classes platform libraries string integer date include specifications exact returned hashcode method function instance generally good idea severely limits ability improve hash function future releases leave details hash function unspecified flaw found hash function discovered change hash function subsequent release confident clients depend exact values returned hash function blockquote means exact returned hashcode function instance advance 

h3 decreasing collisions h3 hash collision primarily achieved good distribution hash range integer type defining initial calculating hash result restricted distribution small range objects differ minor field produce hash codes makes hash collisions defining initial simply increase gaps calculated hash codes objects differ minor utilize hash range effectively make hash collisions h3 means exact returned hashcode function instance h3 simply means calculate hash code objects values fields implicitly understood joshua bloch intended paragraph wanted warn em em documenting exact function hash code calculated restrict anymore change implementation future releases users expect specific implementation break code depending 