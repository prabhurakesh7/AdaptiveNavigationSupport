tostring fail produce correct immutable bigdecimal 
compile execute output output correct notice completely wrong strangely scale desired decimal places result division changed produce correct operands swapped produce correct exponent changed correct call added operation em em calls produce correct machine testing windows bit behaviour 32bit bit versions testing online href https ideone https ideone produces results correctly href http ideone p1sxqq http ideone p1sxqq incorrect href http ideone omaq7a http ideone omaq7a behaviour unique calling bigdecimals digits passing operand operation produce incorrect values explanation operation mutating produced subsequent calls operands happen platform em edit em issue runtime program compiled produces correct output executed runtime incorrect output executed runtime em edit em tested early access href https jdk8 net download html jre1 bug marco13s answer fixed build oracle jdk product binaries update time fixed versions widely 

hard track em reason em odd behavior call internally delegates method based rounding mode case call applies stored passed directly method argument finally path strong strong passing original ending code error introduced strong mutable strong created mutable view array stored original call division modifies field state immutable bug implementation methods started tracking change sets openjdk spotted definite culprit em edit updates em side calling division em avoid em em hide em bug string cache correct state created internally printed internal state wrong hr blockquote strong update strong confirm bug listed href https bugs openjdk net browse jdk openjdk bug list resolved strong update strong kudos mike exex zian digging bug reports discussion bug introduced href http hg openjdk net jdk8 jdk8 jdk rev ffada2ce20e5 l1 changeset admittedly skimming considered hot candidate introduced em years ago em remained unnoticed blockquote 