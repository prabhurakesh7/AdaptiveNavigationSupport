programmatic schemaexport schemaupdate hibernate spring 
spring hibernate reflection hibernate configuration object current environment code hibernate doesnt objects wrong kind working 

add aviads answer make complete ops request strong internals strong order instance metadataimplementor workaround register instance href https docs jboss org hibernate orm javadocs org hibernate boot spi sessionfactorybuilderfactory html rel nofollow sessionfactorybuilderfactory javas href https docs oracle javase docs api util serviceloader html rel nofollow serviceloader facility registered services href https docs jboss org hibernate orm javadocs org hibernate boot spi sessionfactorybuilderfactory html getsessionfactorybuilder org hibernate boot spi metadataimplementor org hibernate boot spi sessionfactorybuilderimplementor rel nofollow getsessionfactorybuilder method invoked href https docs jboss org hibernate orm javadocs org hibernate metamodel source metadataimplementor html rel nofollow metadataimplementor instance hibernate bootstrapped code references ol li href https github hibernate hibernate orm blob master hibernate core src main org hibernate boot registry classloading internal classloaderserviceimpl l317 l328 rel nofollow service loading li li href https github hibernate hibernate orm blob 2964ecbf1b74003fcc337b0574487c724638fe94 hibernate core src main org hibernate boot internal metadataimpl l137 l152 rel nofollow invocation getsessionfactorybuilder li ol ultimately instance metadataimplementor implement sessionfactorybuilderfactory register serviceloader recognize service strong implementation sessionfactorybuilderfactory strong order register create simple text file path assuming maven project ultimately meta inf folder classpath content text file single line multiple lines register multiple instances stating fully qualified class path implementation sessionfactorybuilderfactory class package yourcompany prj content file run application spring app standalone hibernate instance metadataimplementor static method hibernate bootstraped strong update strong injected spring digged hibernates source code metadata object stored sessionfactory spring inject options springs ol li extend existing classes customize li ol blockquote localsessionfactorybean metadatasources metadatabuilder blockquote localsessionfactorybean configure spring object metadatasources metadatasources creates metadatabuilder turn creates metadataimplementor operations dont store create object fly return instance metadata extend modify classes store local copy respective objects return reference metadataimplementor wouldnt recommend needed apis change time ol start li hand dont mind building metadataimplemetor sessionfactory code li ol 