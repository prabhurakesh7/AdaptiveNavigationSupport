translating imperative functional game 
learning lot functional capabilities wanted practice imperative code wrapping circle bounds screen ol li functionalize pseudo code mutability state inherent li li functional programming good fit game development love combine li ol 

inherent requirement mutability imperative approach modify existing circles applying side effects alter state existing circle functional approach immutable data structure create function takes data structure creates structure functional approach circle immutable setx sety methods java8s functional features imagine mapping list circles wrapped circles imperative functional approaches advantages functional approach intrisicaly threadsafe immutability readily parallelise kind code instance equally safely write dont functional programming necessarily badly suited game development standard approach wont level library support youre functional language dfeuer states answer javas functional features pretty primitive dont support algebraic data types pattern matching make easier express problems functional style idioms agree reading bit haskell excellent tutorial href http learnyouahaskell chapters rel nofollow http learnyouahaskell chapters good started unlike scala multiparadigm language wont oop features fall back youre learning style 