link lib rt jar app runtime 
standard system libraries stored inside jre distribution application compiled red jar apps class files em references em system classes run app jvm minute linking executing bytecode class files inside jumping run bytecode located imagine process depends jars provided runtime question linking process called essentially work 

part bootstrap classpath parent usual classpath configure option change bootstrap classpath option load custom runtime oracle documentation href https docs oracle javase docs technotes tools findingclasses html rel nofollow detailed description classes searched loaded system defined classpaths hierarchy additional questions ol li archive em found em simply hardcoded binary located rt jar searched li li linking performed jvm actual linking classes dynamically loaded mechanism based hierarchy classloader software components class file loading parsing load class search starts application facing default classloader child classloader defined class loaded loading attempt repeated parent classloader bootstrap classloader reached class found file loaded parsed internal structures representing class data created class loaded instance created boot classloader load class user visible thrown li ol 