scopes dagger 
missed thought scopes singleton define scoped lifecycles dagger android app dont problem android related module components scope constructor menupresenter expects parameter loginpresenter takes time components create fresh instance thought scope kind singleton scope understand completely wrong define real singleton multiple components dagger 

assume separately component built components recreated time activity created modules dependencies independent scope bond instances time separate livecycles dependencies singleton declare root component scope application subclass make depend activity level component singleton scoped create scopes annotation leave unscoped scopes heres initial href https docs google document 1fwg nsmkytyxeewe82risihjnrtdqonfihgp8 pq7m8 edit heading 5xwubel5z6iq dagger proposal blockquote declaration enables dagger enforce constraints ul li component bindings including scope annotations classes unscoped declared scope component represent scopes scope listed bindings unscoped li li scoped component scoped dependency mechanism enforces components don declare scoped binding singleton components singleton cache broken li li scope component transitive dependencies sessionscoped requestscoped sessionscoped doesn make sense bug li li singleton treated specially scoped dependencies expects singleton root li ul goal combination rules enforce scope applied components composed structure dagger objectgraphs ability static knowledge bindings scopes put scopes applied limits graphs built correctly constructed blockquote practice clearer serves define singletons application additional restrictions hope helps tricky understood quickly takes time 