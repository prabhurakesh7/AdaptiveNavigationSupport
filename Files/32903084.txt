javafx improving scatter chart performance 
strong question strong ways improve render time scenario strong description strong task facing plotting points scatter chart javafx data oracle db current bottleneck datapoints needed chart executing rendering chart screen seconds minutes time gui freezes running lenovo thinkpads cores threads intel hd4000 graphics examples finished charts current worst case data collected data displayed due images impractically large links href http stack imgur x0gnw png rel nofollow chart 5k points br href http stack imgur rgqgb png rel nofollow chart 75k points strong info strong href http code makery ch library javafx tutorial rel nofollow tutorial javafx rendering strong code sample strong isnt actual code illustrate things 

faced similar problem drawing route consisting points google map javascript eliminated points taking account current scale png files strong points strong expressing message hey vertical horizontal segment points assume solid line problem max scale solid line 75k chart solid small scale lot points solid line max scale max scale required small piece chart strong eliminate scale borders strong reference google map zoom map globe cool resolution small piece map borders eliminated automatically post code information scale zoom feature havent chart png files link iterate vertical horizontal line sequental points replace sequantal points middle point points experimentally find replacing strong sequental strong points em middle point em affect resulting chart repeat main idea exist drawing strong sequental strong points equal drawing point fixed scale points give precision simply overwrites due scale human eye limitations pseudocode finding scale constant render compressedarray png result bad chnage magic repeat strong update strong em binary search em magic solid comperssing points bigger humans binary search forget remember point representing big segment declare add correspinding 