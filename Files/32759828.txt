thread pools mapped future executions spring 
code processing order ol li spring receive request li li determines handler pass request li li method invoked li li called li li called li li called li li completablefuture returned back spring component li ol understand points executed thread pool thread pools execute points 

ul li amp executed thread call li li executed thread thread completablefuture result step em em thread make call resttemplate li li asyncrestoperations interface inside depend underlying implementation li li nio rest client rest call executed nio clients internal event loop pool amp thenapplyasync thencompose li li async blocking rest client amp call executed thread configured thread pool default behaviour class configure thread pool thread time amp executing thread fine optimal li ul strong update strong based info asyncresttemplate blockquote springs central class asynchronous client side http access default asyncresttemplate relies standard jdk facilities establish http connections switch http library apache httpcomponents netty okhttp constructor accepting asyncclienthttprequestfactory blockquote asyncresttemplate makes springs simpleasynctaskexecutor instantiated default constructor blockquote taskexecutor implementation fires thread task executing asynchronously supports limiting concurrent threads concurrencylimit bean property default number concurrent threads unlimited implementation reuse threads thread pooling taskexecutor implementation executing large number short lived tasks blockquote part optimal configure asyncresttemplate thread pool 