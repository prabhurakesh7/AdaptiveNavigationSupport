process rest request retrieve data hibernate separate thread 
spring osgi application jersey rest interface setting send data mobile device running wince cf nbsp nbsp mib ram process means thousand data objects mdes memory flow solve problem idea split request ol li initial request query data split fragments encode json store hdd return fragments reference li li followup requests retrieve fragment time fragment size nbsp kib li ol work crappy connection mde request fragments slow data snap shot idea request query data hibernate criteria scrollable result scroll end total results row number create answer intital request back ground scroll back start process results json files hard disk hibernate stuff happen background thread notifies rest request thread provide data results actual results data read hibernate multithreading dangerous mix avoid trouble hibernate related happinging background thread problem dont hibernate session thread hibernate session child thread setup chance work pitfalls considered aware idea deal problem splitting data open h1 edit h1 blockquote org springframework orm hibernate3 hibernatesystemexception hibernate session bound thread configuration creation transactional nested exception org hibernate hibernateexception hibernate session bound thread configuration creation transactional blockquote line depth masterdatafinder hr left vital information synchronizing master data mobile device offline batch modus mobile device connection time data mobile device date sync time consistently retrieving pages independently give data belonging point time request select count retrieving actual data give results data changed milliseconds idea result scrolling post supposedly hibernate book data retrieved start resultfragmentationcontroller 

create hibernate current storage session bound related design close release database related resources connection cursor design ol li initial request builds command assigned uuid command passed executorservice processed asynchronously result execution cached li li subsequent request uuid fetch computation result cache client code blocks untile computation li ol asynchronous block calculating result object close hibernate session free database connection resources 