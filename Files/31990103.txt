effective method finding common character string 
created method finding common character string solutions ul li solution fastest code attached code li li solution effective terms memory reduced arrays variables li ul created method hashmap suitable solution pros cons attached code suitable technique logn 

fastest count occurrences character max count array string long youll gain decent speedup tracking current max looping characters string href http stackoverflow questions counting frequency characters string counting frequency characters string ideas count frequencies strings ascii branch count loop choose array low char values hashmap rest worth branch predict strings dont ascii characters lot alternating ascii ascii branch hurt bit compared hashmap didnt flesh code dont lot idk container insert increment operation efficiently hashmap pair href http stackoverflow http stackoverflow suggests guava good hr array touch low elements array memory touched allocated untouched memory doesnt hurt ram swap looping entries end means reading os soft pagefault wire pollute caches updating max character choice microbenchmarks show iterating string looping wins wouldnt account cache tlb pollution touching needed memory 