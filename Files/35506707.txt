matching algorithm 
writing algorithm match students groups group limited number spots student top choices groups students groups predetermined order older students students perfect attendance higher priority requirement groups filled filled passed capacity looked similar marriage problems gale shapely stable marriage algorithm problem fewer groups students group accept multiple students implement algorithm find solution optimized arrangement students groups terms algorithm complexity placing roughly students groups 

nb close votes terribly misplaced algorithm choice design solve ambiguous problem absolutely part programming youll farther minimum weight bipartite matching stable marriage called hungarian method algorithm maximum weight matching give min weight matching negating weights match positions students node types bipartite graph simplest statement algorithm requires complete weighed bipartite graph equal numbers nodes set square matrix weights elements rows students columns positions algorithm pick single element row column sum minimized navas proposal basically greedy version mwbm optimal true hungarian algorithm give optimal answer handle fact fewer positions students easy real positions add dummy positions needed connect students super high weight edges algorithm pick real positions matched trick pick edge weights lets call ordinal student considered position ith student ip ranking student places pth position finally ip weight edge connecting ith student pth position youll pick relative importance students preferences order theyre ranked sounds order important case big completely override students rankings implementation working fun tweak parameters students preference tweak parameters bit give order time working late 90s open source mwbm find ancient fortran lib handled students selecting core academic program courses seconds spent lot time coding fancy log version turned 3x slower started winning days options 