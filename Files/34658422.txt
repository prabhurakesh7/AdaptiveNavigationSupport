toarray implemented 
source code strong util abstractcollection toarray strong implemented br implementation easy understand question br ol li collections elements change size changed iteration guess iterator kind snapshot br li li collections size changed work correctly li ol 

blockquote implementation easy understand question ol li collections elements change size changed iteration guess iterator kind snapshot li li collections size changed work correctly li ol blockquote implementation intended handle case iterator returns number elements occur collections size iteration destination array allocated based optimistic case size doesnt change pretty complexity code actual number elements returned iterator differs initial returned actual number elements smaller elements copied smaller array size actual number bigger elements copied larger array elements iterated array repeatedly reallocated larger fills iteration completes question iterator doesnt necessarily snapshot elements depends actual collection implementation collections snapshot semantics collection modified modification wont visible iterator case number elements reported iterator match array reallocation collection implementations policies collection modified iteration em fail fast em means theyll throw em weakly consistent em means modifications visible iterator applies question collections size iteration collections iterator supports fail fast code handle number elements coming iterator initially reported occur classs iterator weakly consistent inherits method iterating set order gather elements destination array legal thread modify set possibly changing size iterator report number elements initial returned array reallocation code executed 