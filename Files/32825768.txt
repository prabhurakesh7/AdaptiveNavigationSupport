understanding speeding addcallbackbuffer 
understand preview buffer passed relates array passed prompts related questions q1 guessing buffer passed store camera frame called buffer copied data buffer passed case reuse preview frame buffer calling enter end function processing buffer returned correct q2 clear mechanism preview frame buffers private preview buffers added initialization preview buffer add correct preview frame buffer q3 understanding correctly thread responsible acquiring frame buffer long preview buffer queue capturing frame executing case call back buffers speed 

strong q1 strong return buffer camera early dont care contents read buffer call read pixel data wrong hr strong q2 strong simply return camera buffer receive callback case dont care code hr strong q3 strong correct executes parallel filling buffer callbacks called thread process preview frames strong strong delegate processing worker thread multi core device call safely thread strong strong href http stackoverflow start camera separate looper decoupled ui thread 