write arraylist integers accessed concurrently 
requirement write arraylist integers thread access integers write read increase decrease maximum concurrency operation integer special ol li frequent operation read li li frequent operation decrease greater increase unconditionally li li adding removing elements rare needed li ol thought atomicinteger unavailable atomic operation compare decrease atomic operation provided atomicinteger compare equal set apply atomicinteger case raise thinking synchronized access integer solution side effect efficient maintain hundreds thousands synchronized integers update thinking allowing concurrent access element practical beneficial actual concurrent access limited number processors synchronization objects guard portions list thing implement operation add delete thread impact concurrency operations thinking readwritelock add delete acquire write lock operations change integer acquire read lock approach 

youre read lock accessing list write lock add remove list values 