android dependencies architecture domain layer 
reading android architecture separation presentation domain model layers href http saulmm github io iron man reactive avengers2 rel nofollow href http fernandocejas architecting android clean rel nofollow posts domain layer completely independent android framework blockquote layer pure module android dependencies external components interfaces connecting business objects blockquote android lot utilities textutils android log opinion layers testing junit kind classes required mocking meaning lib robolectric understanding pattern independent android framework stuff activity context service broadcastreceivers 

domain layer business logic ideally isnt coupled code run service make swing client app major benefits jvm languages coupled platform youre platform specific stuff youre androids sdk domain logic youre coupling valuable business logic android platform identify core classes android layer presentation layer constructions avoid coupling platform advantage androids sdk implementation creating generic interfaces wrap android implementation found function offered textutils thought create interface referencing directly pass reference interface android app define configure domain logic instance decide point move business logic swing app web service free implement vanilla se jdk href http stackoverflow questions android libraries project include android jar depending interdependent android libraries logging coupling androids logging framework check href http mvnrepository artifact org slf4j slf4j api rel nofollow slf4j api platform independent logging em interface em href http www slf4j org android rel nofollow slf4j android android platform binding slf4j interface mocking bad thing mock external dependencies class youre testing mock instance domain layer mocking frameworks expectations verify behavior domain class coupling test behavior impl textutils 