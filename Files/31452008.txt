multiple junit test classes share large amount setup resuse setup code 
number classes testing seperated tests classes files sort directory structure ul li src ul li classone li li classtwo li ul li li test ul li classonetests li li classtwotests li ul li ul larger number classes test started write tests classes realised lot code setup id reuse code reduce time takes write tests event end making modifications code base point tests change dozens identical instatiation mocks code layout means huge majority stuff declaration setup method duplicated class tests partially solved simply generictestsetup setup classxtest extends problem lies classes unique classxtext file method aclass variable specific classonetests classtwotests id bunch shared variables aclass id bclass problem declare tags generictestclass generic setup classxtest class objects inside classxtest dependant generictestclass guarantee execution order summary generic test setup multiple class tests setup method specific class guaranteed run generic objects set hr edit suggested question duplicate question href http stackoverflow questions put common setup code differen testclasses put common setup code differen testclasses theyre similar question general approach terms policy specific set requirements implemented answers gave proper answer implementation require theyre 

overloading increases complexity call em logic classes em basically class static methods takes parameters initialized sets logic methods advantage code shared similar initializations reuse code logic class call variants methods edit pattern related solution 