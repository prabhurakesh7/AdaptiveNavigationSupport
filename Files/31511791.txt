good practice check parameters preventing injection attacks 
strong background strong ul li application based spring mvc li li java8 li li filter requests interceptors li ul strong problem strong tested application user inputs vulnerable html script injection attacks methods prevent client side manipulated form values theyre posted server injections successfully made corrupted website whats top priority detection methods server side eariler reason strong thinking strong check parameters interceptor interceptor validate parameters page user inputs forms submit strong strong strong setup strong hr strong good idea strong 

attempting escape reject href https en wikipedia org wiki cross site scripting rel nofollow cross site scripting xss attempts submission isnt good idea issues approach ul li proper method escape user input depends inject content improperly escaped lead display issues user sees garbage unexpected xss vulnerabilities li li user content escaped display avoid escaping means youll treat user input database user input sources differently templates youll issues point li li escaped content database special treatment dont display unescape adds unnecessary boilerplate code reduces interopability lead bugs li li hard differentiate legitimate xss attacks innocuous reserved characters lt approaches tag stripping removing html tags destroy user content li ul appropriately escape content strong displayed strong heres href http lukeplant uk blog posts escape input bad idea rel nofollow pretty good writeup elaborates reasons escaping input bad idea templating frameworks supported spring shortcuts escaping content personally suggest thymeleaf escapes user input default html content attributes requires href http www thymeleaf org doc tutorials usingthymeleaf html unescaped text rel nofollow specific thymeleaf attribute href http www thymeleaf org doc tutorials usingthymeleaf html strings rel nofollow shortcuts escaping input javascript json embedded page bottom youre templating framework jsps consult documentation find escape content display templating frameworks escape default dont offer escaping methods lead xss vulnerabilities forget escape input consequences 