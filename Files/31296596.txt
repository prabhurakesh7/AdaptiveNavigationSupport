class boolean class compiler error extends comparable super 
generics abstract comparable data types illustrated code supplied case arose swing component specifically attempting adapt table model generics working solution problem case 3a process arriving solution confused behavior compiler changed class signature compiler comparable raw type case 3a expected class signature work case 6a requires cast compiler error cases 2b 3a 4a cases 1a 2a 5a 6a compiler error specifically id explanation error case 2a 2b share class signature runnable test cases external classes supplied demonstrate case involving inheritance highlights difference case case strong strong strong strong strong strong 

javadoc href https docs oracle javase docs api lang object html getclass rel nofollow return type type expression undergoes wildcard capture captured type messages question surrounding jls href http docs oracle javase specs jls se8 html jls html jls rel nofollow depends type casted casting types forbidden provable compile time impossible case test forbidden makes sense jls href http docs oracle javase specs jls se8 html jls html jls rel nofollow sloppy lets follow exact words casted type arguments provably distinct dont casted case jls href http docs oracle javase specs jls se8 html jls html jls rel nofollow provably distinct due allowed compiler forbids javac8u45 follow reasoning allowed cases behavior intellij javac8 forbids case reexamining jls href http docs oracle javase specs jls se8 html jls html jls rel nofollow incomparable bounds subtype relationship restrictive subclass number implements runnable javac8 types casted compared interestingly javac8 forbid comparing fact final factor sounds lot jls href http docs oracle javase specs jls se8 html jls html jls rel nofollow appears provably distinct testing javac8 casting conversion test thing mess fortunately add intermediary cast common supertype resolve issues big problem 