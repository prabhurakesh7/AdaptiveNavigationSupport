calculating hashcode key hashmap 
studying internals href http docs oracle javase docs api util hashmap html rel nofollow strong hashmap strong implementation adding map based key calculate hashcode finds bucket location table location index correct wrong br calculating hash code code snippet key hashcode native method object class hash method implemented class br comments hash method calculated understand explain briefly scenario 

href http tekmarathon hashmap internal implementation analysis rel nofollow http tekmarathon hashmap internal implementation analysis blockquote means case algorithm wrote hashcode generation distribute mix lower bits evenly lead collisions hashcode logic empid deptid deptid generate hashcodes number multiplied directly depend hashcodes compute index store objects hashmap odd places hashmap empty leave places double number collisions blockquote defends poorly written hash functions additionally similarly valued objects collisions necessarily collisions good increase time find key hash points linked list values iterated retrieval match correct key good hash function mix lower bits ensure power distribution strong strong ul li improving performance large hashmaps href http stackoverflow hashmap performance optimization alternative li li duplicate ul li href http stackoverflow explanation hashmap hash int method li li href http stackoverflow hashmap hashing function li li href http stackoverflow hash method hashmap li li href http stackoverflow change hashmap hash function li li href http stackoverflow hash method hashmap li ul li ul disclaimer worked heavily hashmaps year research 