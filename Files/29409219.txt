gremlinpipeline api chain traversal titan graph cases 
case traverse chain vertices starting vertex linear chain train vertex connected previous traversing emit vertices based criteria reach end chain case extension case single chain starting single vertex multiple chains starting single vertex traverse chain check property vertices property match found emit vertex start chain achieve gremlin api appears simple gremlin internet gremlin api 

converting gremlin groovy gremlin shouldnt difficult argue ol li greatly increase size code li li make code readable li li make code harder maintain li ol work shop wont hear programming language hard sell folks points examples differences gremlin groovy easy read liners hundreds lines code groovy fit standard maven project alongside module separate standalone module projects depend cases prefer isolate groovy single package reusable dsl multiple cases application add lib gremlin console start writing groovy gremlin console traversal algorithm sounds cases involve looping traversal traverse chain vertex exhaust chain signified true closure emit vertex matches criteria closure gremlin defined tested time convert starts part pretty easy conversion purposes groovy approach pretty map fairly cleanly point closure steps requires work gremlin find href http www tinkerpop docs javadocs gremlin tinkerpop gremlin gremlinpipeline html javadoc argument version marked deprecated purposes href http www tinkerpop docs javadocs gremlin tinkerpop gremlin gremlinpipeline html loop int 20com tinkerpop pipes pipefunction 20com tinkerpop pipes pipefunction argument simple integer part translation left place holders closures groovy version slightly syntax prior notion closures built langauge href http www tinkerpop docs snapshot tinkerpop3 gremlin changed dramatically advantage fact lambdas tinkerpop2 built essentially represents typed versions groovy closures arguments loop basically function object metadata loop expects return boolean understand concept gremlin opens groovy closure underneath form read expectations javadocs language translations closure translation return argument construct method called method return handle argument controls vertices emit stands conversion long post lets place original groovy closer difference clear line code full dozen simple traversal gremlin tinkerpop3 lambdas major overhaul language prior versions produce code isnt worth effort generating maintaining groovy make things neat tidy 