singleton class behaviour multi threaded environment 
read stackoverflow questions phrased differently answered dont expect code solutions behavioral explanation singleton object multi threaded environment answers links explanation great question multiple thread access singleton object configured singleton bean spring config thread access strong blocked strong till current holding thread releases blocking makes sense object threads object time configure dao singleton bean multiple users threads reads write dao strong doesnt happen concurrently sequentiall strong performance issue database intensive application hand daos stateless atleast case configuring singleton instantiate operations strong concurrently strong object instantiation time memory design decision case dao state variable memory negligible theory correct 2nd option choosing concurrency memory question question asked href http stackoverflow questions bad singletons page answer lott dont point link directly answer copying answer blockquote singletons solve problem resource contention resource single instance manage single instance singleton blockquote question answer true reason loggers implemented singletons log file single resource strike dont due time slicing thread written part log file suspended thread writes part thread making log file gibberish strike stroke text thread logging thread log strong blocked strong singleton config avoiding making log file gibberish understanding 

james correct coming questions question multiple threads access singleton object blocking make method returns object synchronized multiple threads reference singleton object blocked question understanding incorrect thread writing thread wait singleton config possibility object file end inconsistent state applicable object synchronized properly 