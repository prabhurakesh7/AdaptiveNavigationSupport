static util class spring unsure make springbean design concerns 
quick high level concept design usage command line static spring wondering awsadapter static loaded spring snapshotutil create adapter applicationcontext supplying xml adapter bean info originally thought simple util deal ebs snapshots ignore spring awsadapter potentially means static pro con adapter designed deal ebs snapshot basically creating deleting viewing snapshots amazonec2client instance spring managed class wanted adapter question matters loads adapter spring statically call strong edit response answer strong started turning bean removed static references gave method getinstance load applicationcontext return caller initializing dependencies configurations call spring working considered injecting pretty injecting caller spring managed feel hacky spring bean spring class spring managed feel reason turn utility bean understand benefits reason turn bean spring bean handle authenticating thought easily instantiate bean keyword correct turned class bean injected callers getinstance method getinstance method spring bean difference inject utility spring configurations 

generally favor static static specific spring beans flexibility start extending application module complex features static classes require resources parts system di helps advise static invocations aspects simple logging request complex cases transactions spring beans simple achieve important simple add big engineering testing easier integrate beans spring apis frameworks integrated spring easy bean apache camel route points mind pros cons pick tool job strong edited part question strong em call spring em fine obtain bean instance spring application context directly class managed spring bean runtime apache camel route camel em correct turned class bean injected callers getinstance method em bean beans functionality beans injected aspects em getinstance method spring bean difference inject utility spring configurations em href http stackoverflow questions springs applicationcontext getbean considered bad question href http martinfowler articles injection html servicelocatorvsdependencyinjection rel nofollow article written martin fowler referenced question opinion readable unnecessary injecting resources fields type clean mechanism class declare dependent resources bean lookup costly executed frequently experienced project worked past dont takes time spring spring version return bean noticeable executed loop 