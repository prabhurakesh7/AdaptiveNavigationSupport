jvm decided jit compile method categorize method hot 
worked basic techniques jit compiler jit compilation found jvm decides jit compile method time jit compile method assumption method starts interpreted long categorized hot method compiled back head read method considered hot executed times interpreting method times compiled admit read sum question em em method interpreted long categorized hot method compiled reasons methods compiled hot jvm categorize methods hot hot methods number execution thresholds number executions hot methods flags set thresholds 

hotspot compilation policy complex tiered compilation default number executions matter parameter explanation apparently em em reasonable explanation found hotspot sources href http hg openjdk net jdk8u jdk8u hotspot file 2b2511bd3cc8 src share vm runtime advancedthresholdpolicy hpp l34 advancedthresholdpolicy hpp ill summarize main points advanced compilation policy ul li execution starts tier interpreter li li main triggers compilation ol li method invocation counter li li backedge counter backward branches typically denote loop code li ol li li time counters reach frequency compilation policy called decide running method depending values current load c1 c2 compiler threads decided ul li continue execution interpreter li li start profiling interpreter li li compile method c1 tier full profile data required futher recompilation li li compile method c1 tier profile possibility recompile li li finally compile method c1 tier profile counters li ul key parameters thresholds dynamically adjusted method depending length compilation queue li li compilation queue fifo priority queue li li c1 compiled code profile data tier behave similarly thresholds switching level c2 tier bigger interpreted method compiled tier invocations c1 compiled method subject recompilation tier invocations li li special policy method inlining tiny methods inlined caller hot bit larger methods inlined invoked frequently li ul 