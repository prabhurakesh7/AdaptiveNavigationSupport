socketexception connection reset client send request 
href http shop oreilly product 0636920028420 rel nofollow network programming 4th edition chapter secure socket build secure server code find href https github jkorab jnp4 examples blob master src main oreilly jnp4 secureordertaker rel nofollow make simple version code code diffence code create server read characters server simple client send text client run server cient server accept input client throws exception update client based dave answer add lines code exception arrive 

outputstreamwriter socket stream apparently buffers client strong didnt strong data isnt program jvm strong exits strong socket stream including closing writer passes stream handling depends platform windows sends rst strong connection reset strong exception peer unix closes connection tcp level fully normal ssl tls close treats eof strong edit strong followon question server sslhandshakeexception strong received alert strike bad certificate strike certificate unknown strong em theoretically things em means certificate server keystore loaded matching privatekey signed ca certificate authority trusted client code show client doesnt set alter truststore isnt code external settings commandline option set system properties client jsse strong default truststore strong file exists file jre directory jre installed jdk jre subdirectory jdk directory system havent modified files jre installed doesnt exist set strong root cas strong determined oracle verisign equifax ul li certificate issued strong ca strong dont cert obtain ca proving control domain certified depending ca possibly paying fee cert install keystore em em privatekey entry em em chain certs cas chain cert li li certificate issued strong ca strong including adhoc ca make strong including strong limit case strong selfsigned strong certificate implicitly ca generates automatically put ca certificate ca selfsigned cert strong truststore strong client ways ul li put servers ca cert selfsigned cert default truststore file jre client affect programs sharing default truststore potentially programs jre affects jsse affects verification signed code wiped upgrade jre place automatic windows li li create reuse truststore put servers ca cert client nondefault truststore options set system properties default truststore externally set explicitly program jsse explicitly load keystore file cert trustmanager nondefault sslsocketfactory server code keymanager write trustmanager store similarly li ul li ul strong edit simple strong covering options detail long strong strong simple option ol li generate keypair default selfsigned certificate li ol prompt commonname attribute cert enter server client connect server question localhost fields dont matter fill omit country letters prompt answering prompts add command line server options omitted applications entry question isnt needed ol start li copy certificate li ol client machine server case copy contents file server client conveniently copying file ol start li put cert client truststore options suggested quickest start put jre default file cacerts li ol jre directory jre runtime environment installed depends os installed jre jdk includes jre package manager jre jdk installed depends unix invoke path bash shells full pathname run symbolic link real location form change part windows install normal system wide program run actual code files jre depending architecture bit bit jren applicable expand future run control panel tab view button shows location installed jre 