hibernate performance issue inserting massive data 
migrate large amounts data single type entity amazons dynamodb mysql db hibernate map class mysql entity strong million entities excluding rows list property strong class mapping summary strong users strong list string created mysql tables strong strong make hibernate generate id assigning ids customer entities guaranteed unique hibernate cfg xml creating number threads reading data dynamo inserting mysql db hibernate thread performance monitoring functions continuously logging read write performance problem migration starts reading writing items sec average slowed long number rows customer customer user tables increases minutes speed items sec experienced hibernate questions ol li hibernate cfg xml multi threaded task content gave fits task wrong missing point li li threads read dynamodb insert results mysql db read dynamo uptime communication hibernate circumstances recommend set min size max size c3p0 connection pool sizes understand concept set remaining c3p0 related tags hibernate cfg xml li li maximize speed bulk inserting li ol strong strong write properties remaining list users int boolean string strong strong points tested negative effect performance dont insert mysql db read speed stays stable hours strong strong recommendation guidance structure mysql tables configuration settings sessions transactions number connection pools batch sizes helpful 

assuming hibernate transaction inserting data tables normal session reduces overhead maintaining caches save nested collection objects separately refer href https docs jboss org hibernate orm reference en html batch html rel nofollow https docs jboss org hibernate orm reference en html batch html 