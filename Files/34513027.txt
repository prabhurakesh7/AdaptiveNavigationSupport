solr performance benchmarking ver ver 
test solr performance solr aiming switch solr prod jmeter perform test queries test plan simple queries querying fixed field field fixed simple facet problem expecting performance enhancements versions worse results worse average response time wrong tests test criteria give unaccurate results queries fixed values reading cache soemthing test local server machine tune jmeter normal strong em environment details em strong win7 8gb ram i7 apache tomcat jetty 30m documents solr core core indexed version solr imported strong test details jmeter strong users 20s ramp period throughput requests expected hit rate tuned delay reach queries user running infinetly 

question performance solr queries simple facet search range queries complex queries updates clear caches recently switched version simple queries simple facets huge factor performance regression search application lot factor faster lot work lucene realtime search nrs lucene folk reduced memory impact href https lucene apache org core api org apache lucene index indexreader html rel nofollow indexreader href https lucene apache org core core org apache lucene index leafreader html rel nofollow leafreader reader segment great improvement lucene kind tokens index bytesref strings href https lucene apache org core core org apache lucene util automaton automaton html rel nofollow automaton index good skip token prefix search fast access document term focus lucene form beginnings hasnt improve simple faceting solr peek performance ms facet values main memory fast expensive fast updates index switch codec search fixed field performance benefit docvalues facet search switch version href https issues apache org jira browse solr rel nofollow speed faceting doc values fields aware solr folk waiting proof faceting slower proof write issue solr href https issues apache org jira browse solr rel nofollow major faceting performance regressions update faceting solr open solr fast faceting solr href https issues apache org jira browse solr rel nofollow uninverted field faceting enabled higher performance rarely changing indices 