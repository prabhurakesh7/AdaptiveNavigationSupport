managing product count database 
excuse question naive scenario manage product count database commerce store product class integer variable signifies number products database visible users site class accessed threads users commerce site adding removing product cart orm framework hibernate sample code clear code concurrency check product count database prevent lost updates users add single left product database users cart product added research ways found ol li creating singleton class product ensure instance product application li li synchronize amp methods thread update product count amp update db time li li database concurrency control apply db transaction isolation level optimistic pessimistic locking mysql default isolation level li ol approach deal 

possibilities work restricted deploying single instance application singletons managed multiple application instances synchronization multiple jvms deploy multiple instances application cluster farm instances load balancer front undesirable work single point failure mode approach product counts database advantage remains valid application scales multiple instances instance server time youre building application clear application deployed situations didnt plan application set preprod environment date reason change application deployed application expected load beneficial set box thing apparent vital product count correct business domains airline tickets shipping common overbook trouble worth accurate count early point process adding item shopping cart compared point customer commits making purchase time customer buys make sense make reserve items database transaction cf overbooking common web applications expect low conversion rate items cart items purchased mind level accuracy counts business domain 