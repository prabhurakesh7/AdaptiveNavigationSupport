number simple connected graphs labeled vertices unlabeled edges 
strong tl dr recurrence relation accounting smaller number graphs strong find number simple connected graphs labeled vertices unlabeled edges href https github dray92 google foobar blob master undercover underground rel nofollow link full source complete question href http stackoverflow questions maximum number edges undirected graph vertices connected post didnt solve question constraints lt lt lt lt approached problem realized ideas idea ideation nodes edges ways add nth node ul li distribute edge node nodes trivial inom choose li li distribute edges li li li li li li distribute edges li ul formula looked href http stack imgur bzlik png rel nofollow img src http stack imgur bzlik png alt approach values values dont make sense essentially falls href https en wikipedia org wiki cayley formula rel nofollow cayleys formula recurrence relation part strong issue accounting smaller number graphs strong code found href http math stackexchange questions connected graphs vertices edges post mse addresses problem reference formula looked href http stack imgur fnbxa png rel nofollow img src http stack imgur fnbxa png alt approach works expected code section grateful point direction error approach approach works makes nk recursive calls average quadratic good minimize computations dp nchooser factorial functions code nchooser code factorial test code strong challenge part google foobar challenges wanted make aware judged working based test cases foobar challenge taker strong reading href https youtu joctdw9fg 29s rel nofollow video tiny hamster eating tiny burrito 

alternate approach counting function number labeled rooted trees cayley formula total number connected graphs nodes edges characterization add edge blockquote graph add edge choose pairs unmatched nodes connected graphs connected graph nodes edges connected graph nodes edges surgically construct graph connecting subgraphs blockquote pairs vertices choose choose ways sum choice double counted graph lets call construction ways add extra edge reducing constructions additive term characterization multiset graphs weve constructed multiset lets case analysis subcases induction construction random graph graphs constructed induction hypothesis copies multiset lets inductive case break edge connected graph remains connected graph breaks connected graphs fixate break edges distinct constructions break unique construction means distinct classes graphs single component components construct final graph counts graph total times fixed recurrence compute correct result time complexity wise equivalent previous algorithm nice thing construction easily yields analytic generating function analysis br case suppose complex valued function youll lot complex analysis machinery solve recurrence pde heres implementation href https github dray92 google foobar blob master undercover underground2 rel nofollow source 