create spring service instance transactional methods manually 
lets interfaces part working application configured access single database works fine possibility strong create stand working instance orderservice auto wired orderdao strong strong pure strong strong jdbcurl code strong introduce strong multi tenant architecture strong strong tenant database strong strategy existing spring based application achieve strong easily strong implemented jdbctemplate logic jdbc transactions correctly working em valid task em strong simple transaction logic strong start transaction requests service method scope transaction commit rollback exception solutions web multi tenancy spring propose concrete persistence units xml config annotation based configuration strong highly inflexible strong order add database url application stopped xml config annotation code changed application started basically piece code create spring creates internally properties read xml configs annotations spring create service instances guess simple good usable oop strong spring flexible strong strong simple case strong code reuse strong hints greatly appreciated strong find complete answer question ill post future generations 

hibernate href http docs jboss org hibernate orm devguide en html ch16 html rel nofollow box support multi tenancy check hibernate requires href https docs jboss org hibernate orm javadocs org hibernate service jdbc connections spi multitenantconnectionprovider html rel nofollow href https docs jboss org hibernate orm javadocs org hibernate context spi currenttenantidentifierresolver html rel nofollow default implementations box write implementation schema change pretty simple implement execute query returning connection hold map datasources instance create instance years ago wrote generic solution documented href https mdeinum wordpress application client database rel nofollow code href https github mdeinum spring utils rel nofollow isnt specific hibernate basically switch web related things theming 