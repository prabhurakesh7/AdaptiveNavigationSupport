slower large heap excessive gc ing 
h2 original question h2 running program program jar small initial heap 1gb large initial heap 16gb run small initial heap program terminates seconds averaged multiple runs contrast run large initial heap program terminates seconds averaged multiple runs understand questions generally large heaps give rise excessive garbage collecting slowing program ul li href http stackoverflow questions large heap sizes large heap sizes li li href http stackoverflow questions sun jvm slow memory allocated xmx sun jvm slow memory allocated xmx li li href http stackoverflow questions circumstances performance degrade memory circumstances performance degrade memory li li href http stackoverflow questions slower big heap slower big heap li ul run program jar flag gc activity reported whatsoever large initial heap small initial heap gc activity initialization phase program start measuring time excessive garbage collecting clarify observations make confusing functionally equivalent program program2 jar input output behavior program jar main difference program2 jar efficient data structures program jar terms memory program2 jar efficient terms time determine run program2 jar small initial heap large initial heap terminates seconds including seconds gc ing question strong large heaps slow programs excessive gc ing strong question similar georgs question href http stackoverflow questions slower big heap slower big heap problem turned unrelated heap case feel em em heap difference runs program jar details relevance openjdk machine e5 2690v3 processors href http ark intel products rel nofollow http ark intel products sockets hyper threading turbo boost disabled ample memory 64gb half free running program finally program multiple threads h2 edit h2 em response href http stackoverflow questions slower large heap excessive gc ing comment50450498 bruno reis href http stackoverflow users kdgregory kdgregory em collected additional statistic program jar small initial heap program jar large initial heap wall clock times reported differ reported original post previously untimed initialization phase h2 edit h2 em response the8472s initial href http stackoverflow posts revisions answer href http stackoverflow questions slower large heap excessive gc ing comment50458108 comment em collected statistics caches program jar small initial heap averaged runs program jar large initial heap averaged runs comparing absolute numbers large initial heap results l1 dcache load misses dtlb load misses back envelope calculation dtlb load misses assuming cycle miss source href https en wikipedia org wiki translation lookaside buffer typical tlb rel nofollow wikipedia ghz machine seconds delay large initial heap versus delay small dont translate number back core delay divide number cores order magnitude plausible collecting statistics diff ed output large small initial heap based run cases flags affacted output program jar small initial heap program jar large initial heap 

accessing memory costs cpu time accessing memory costs linearly cpu time increases cache pressure miss rates costing super linearly cpu time run program number cache misses href https perf wiki kernel org index php tutorial rel nofollow perf tutorial br img src http stack imgur lhu6r png alt time scale system latencies br image source systems performance enterprise cloud paperback brendan gregg isbn hr initial heap size affects eden space size smaller eden space triggers gc lead compact heap cache friendly temporary start objects littering heap reduce number difference runs setting initial max young generation size runs generation size differs lead performance starting jvm huge pages em em measure extra performance reducing tlb misses strong future readers strong restricting gen size necessarily make jvm faster triggers gc make workload peng faster br manually triggering gc startup effect 