limit transactions tps client tomcat server dos vulnerability 
web service limit number transactions client perform transaction hitting url correct parameters client number transactions perform client identified based ip address parameter url maximum tps client perform database configurable manner understand write servlet filter filter calculate requests make database connection maximum tps client reject request tps reached slow application response helpful dos attack 

thing data model tracking ips requests tracked rate requests math allowed add request rate requests ip quickly recalculated lets call class unique ip made request instance instantiated instance required ip put hashmap fast retrieval ip instance created request instance hashmap add request instance rate rate threshold request processed requester accidentally threshold rate quickly dip threshold real dos case attempts access account due hackers longer rate dip threshold wanted recall cleanup thread remove ips needed point ehcache hashmap automatically worked thought open sourcing simple easily reproducible math math rate easy accurate tricky fast lot fo cpus spent calculating rate request added answer question info setup filter server edit wrt dos dos attack waste resources dos detection load balancer reverse proxy gateway firewall ip max transmission rate stored database cache max transmission rates db lookup request load table hashmap start application init method load table hashmap maps ip maxtransmissionrate request maxtransmissionrate hashmap default maxtransmissionrate init kickoff scheduleexecutorservice update hashmap desired interval hashmap fresh link scheduleexecutorservice hard href http docs oracle javase docs api util concurrent scheduledexecutorservice html rel nofollow http docs oracle javase docs api util concurrent scheduledexecutorservice html hashmap implementation regular hashmap problems updated scheduledexecutorservice synchronized hashmap locks hashmap hurts performance concurrent requests concurrenthashmap designed speed multithreaded environment safely update concurrenthashmap separate thread worry apply technique viable solution dos prevention supporting client maxtransmissionrate 