synchronized block synchronized method 
code party library synchronized method method synchronized block locks instance variable similar make sense benefits synchronized statement synchronized method synchronized method locks entire object redundant approach makes sense working instance variables private 

method em em locking instance object methods locking instance em em object makes sense depending protects smaller subset data methods lock perform actions thread manner h3 h3 method statement creates mutual exclusion zone href https en wikipedia org wiki critical section rel nofollow em critical section em specifically href https en wikipedia org wiki reentrant mutex rel nofollow em reentrant mutex em key thread enter critical section object reference statement thread recursively key time blocks key thread enter block object reference time critical section simply prevents em operations em variable read write inside block happening concurrently operations critical sections lock object reference doesnt automatically protect variables inside object critical section creates href https docs oracle javase docs api util concurrent package summary html memoryvisibility rel nofollow em em contract h3 h3 contrived instance variables private doesnt matter approach applicable single class multiple lock objects protect set data risk em em strict coding conventions prevent deadlocks locking locks orders places code code risk deadlock method em instance variable avoided sake brevity code sample em case methods reference reference class instance class methods 