rxjava observable iteration work 
started play rxjava reactfx pretty fascinated experimenting dozens questions constantly researching answers thing observing pun intended lazy execution exploratory code noticed executed called fascinated subscribed subscriber fired iteration understand behavior iteration behave literally time posting moment subscribers previously fired subscribers receive items 

represents monad chained operation execution operation descriptive language imperative youre execute operation time subscribe execution stream created scratch confuse streams threads em subscription executed synchronously thread change em chain elements existing operation monad observable add href http reactivex io documentation operators html alphabetical rel nofollow behaviour changing threads filtering accumulation transformation case observable expensive operation dont repeat subscription prevent recreation make asynchronous synchronous operation synchronous inlined change type href https github reactivex rxjava wiki blocking observable operators rel nofollow methods execute operations result coerce observables good tool theyre deterministic inputs yield outputs youre wrong reusable send part command policy pattern part ignore concurrence rely shared state wrong blockingobservables good youre bring observable based library imperative language executing operation observable confidence managed architecting application principles change paradigm cover answer blockquote breaches needed integrate imperative frameworks blockquote 