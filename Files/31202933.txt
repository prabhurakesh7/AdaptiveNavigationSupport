preventing xss attack web app saving actual values database 
recent scan based web application appscan found application prone xss attacks research found servletfilter easiest protect application introduced filter extended httpservletrequestwrapper request param changed request setparam method introduced sanitize method post change good tested xss vulnerabilites fixed posed problem suppose form create product product user enters ideally save database protected xss attack filter achieve 

html injection output stage issue caused forgetting encode text injecting context characters special esapi offers encoders contexts discussed zakaria consistently correct context fixed injection related xss issues purely jstl tags templating html escape default general generate html templating system works html escaping automatically forget manually encodeforhtml occasionally project compelled terrible owasp esapi library preference html encoders produces output html content quoted attribute values whilst needlessly attempting produce entity references ascii characters typically avoid injecting javascript string literals typically easier maintainable inject run time content html attributes read separate javascript dom code filter html input stage lamentably popular completely misguided approach prevents entering html input found stackoverflow input filter conversation whats resilient ways smuggle potential injections past input filters make filter effective youd blocking pretty punctuation generally considered acceptable data application means request parameters wont vetted input validation great enforcing business rules formats input fields filter input control characters wrong place worrying escaping removing html time youre creating html 