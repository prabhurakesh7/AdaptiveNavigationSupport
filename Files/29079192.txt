control order constant pool entries asm 
implementing transformation removes unused elements class files reduce size constant pool entries unused asm recompute constant pool copying input transformed class files larger originals asms constant pool ordering requires instructions byte index input class file byte index id manually sort constant pool constants referred sort constant pool reasons make set class files compressible putting constant pools canonical order test tools consume class files order software watermark confuse poorly implemented decompilers deobfuscators grepped href https duckduckgo kh amp uddg http 3a 2f 2fdownload forge objectweb org 2fasm 2fasm4 guide pdf rel nofollow asm guide constant hits generic explanation constant pool asm hides details related constant pool bother anti helpful case control order asm emits constant pool entries 

asm doesnt provide clean youre define classes package reflection access package private members ideal introduces dependence asms implementation details hack add answer h3 things dont work h3 classwriter exposes variants constant pool entry types implementing custom attributes asm reuse constant pool entries assume pre fill constant pool desired order calling friends constant pool entries reference constant pool entries utf8 entries referenced string class entries methods automatically add referenced entries present put string constant utf8 references methods overridden behavior baked package private private methods delegate href http osdir ml objectweb asm msg00013 html rel nofollow post suggests sorting classwriters internal data structures overloaded work reasons final wasnt back post written classwriter emits class bytes visitation time called constant pool written bytes constant pool indices baked code bytes h3 solution h3 solution requires rounds class writing write class including transformations classwriter pre filled constant pool parse rewrite result round classwriter builds constant pool bytes manually beginning parse write encapsulate parse write classwriters method heres code actual sorting occurs method sorting number occurrences operand collected methodvisitor final separate strong implement sort strong change add fields store sort based heres constanthistogrammer refer implementation specific sort demonstrates perform custom sorts based information class file finally heres transformation applied occur visitation visitation inside test suite applied sort oracle jdk 8u40 netbeans functions transformed class files correct transformation saved bytes worthwhile code href https gist github jbosboom 86b7c24825b0d40121fa rel nofollow gist license asm 