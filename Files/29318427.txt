hbase table design maintaining hourly visitors count source 
working project report hourly unique visitors source calculate unique visitors source hour visitors identified unique id design calculation hourly unique visitors efficient data order 20k entries hours present sourceid visitorid row key 

lets start 2500k entries hour pretty low volume data scale massively project easily achievable single sql server options h2 realtime h2 log visitorid source run job mapreduce analyze data hour day depending case completely avoid hbase stick hadoop log data file hour process store results sql hbase performance wise approach h2 realtime h2 track data realtime making hbase counters case id tables ul li table em unique users em track time visitorid visited site rowkey visitorid source visitorid depending visitor id sources table ttl seconds automatically discard data days data li li table em date source stats em track unique visitorid source hour table ttl weeks years depending retention requirements li ul visitor enters site read em unique users em table check access date date older hour visit increment counter date hour sourceid combination em date source stats em table update em unique users em set visit time current time easily retrieve unique visits date hour scan sources em source date stats em table case perform queries specific source hourly report days source store stats table rowkeys blockquote notice things approach ul li detailed schemas li li store total visits counter incremented unique li li proposal easily extended track daily weekly monthly unique visitors youll counters rowkeys date sourceid month sourceid case multiple column families distinct ttl properties adjust retention policy set li li proposal face hotspotting issues due rowkeys sequential thousands reqs read href http blog sematext hbasewd avoid regionserver hotspotting writing records sequential keys rel nofollow li li alternative approach em date source stats em opt wide design sourceid rowkey date hour columns li ul blockquote 