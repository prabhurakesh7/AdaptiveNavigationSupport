lambdas works jvm oop 
case anonymous class anonymous object reference passed methods object executed lambdas code blocks executed needed jvm lambdas encountered jvm store code blocks related lambdas heap young permanent generation searching syntax lambdas understand happening inside jvm object based ol li context oop lambdas work li li lambdas violate oop concepts li li lambda good garbage collector objects created worry memory issues clearing memory li ol 

wouldnt waste time thinking weather lambda expressions violation oo principles goal increase power language write oo code dont lambdas violate encapsulation inheritance polymorphism href http blog takipi compiling lambda expressions scala article explains handles lambda expressions blockquote interesting lambda expressions jvm perspective completely invisible notion anonymous function lambda expression bytecode strict oo specification makers language compiler work constraints create newer advanced language elements blockquote code blockquote begins simply loading names var invokes method elegant creating object wrap lambda function instruction added dynamically link call site actual lambda function blockquote blockquote instruction added make jvm strict dynamic languages bind symbols run time linkage statically code compiled jvm blockquote lambda code 