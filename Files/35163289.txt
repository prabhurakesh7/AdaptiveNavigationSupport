newer faster sorting acting worse 
sorting method slow performance improves expect jit compiler time optimize high code weird thing sorter slow sorter slower sorter faster expected executions slow simply unacceptable specs br cpu intel i7 core 8m 1m 128k cache br cmd javaw server cp bin myclass ul li experienced worse performance newer stream operations li li fix slowness inducing start delays li ul 

care performance warm stage sorting jvm start standard jmh benchmark suitable lets write benchmark manually speaking dozens milliseconds naive benchmark provide precision supply question simple comparator sorts data faster assume complex comparator compares points euclidean distance square root monotonic function order change lets separate data preparation sorting measure sorting performance array test directly plain sort parallel stream api based sort lets add sequential stream api version directly measurement code difficult href https gist github amaembo 9eac0d2c6e4bbe01b946 rel nofollow complete implementation test launched independently test mode jvm launch heres typical results machine i7 4702mq 20ghz cores ht hw threads win7 64bit results tests similar iterations slower effect direct execution finally parallel stream slowest stream api intermediate buffer sorting space time perform additional copying buffer sorting perform copying resulting list iterations slow especiall small starting heap conveniently place intermediate buffers full gc events occur iterations end significant delay run test full gc events heap sufficiently enlarged compare launch full gc significantly time significantly garbage lets set initial heap size 1gb reduce gc pressure completely results results stable gc pauses produces objects easier allocate collect garbage bigger heap full gc events observed tests conclude ul li parallelstream produces garbage additional copying slows operation li li jvm startup default heap setting small garbage collector takes lot time decides sufficiently increase heap size li li maximal parallel speed directly sorts place advance size dataset li ul finally noted calling collection sorter launched works slower implementation changed 