method overload ambiguity ternary conditional unboxed primitives 
code compiles openjdk b13 fc21 compiler claims method call ambiguous change type parameter code compiles platforms doesnt posted code compile 

lets simplified version doesnt ternary conditional doesnt compile hotspot vm build b17 compiler error href https docs oracle javase specs jls se8 html jls html jls rel nofollow jls compile time step determine method signature blockquote method applicable applicable strict invocation loose invocation variable arity invocation blockquote invocation invocation context explained href https docs oracle javase specs jls se8 html jls html jls rel nofollow jls invocation contexts boxing unboxing involved method invocation strict invocation applies boxing unboxing involved method invocation loose invocation applies identifying applicable methods divided phases phase performs overload resolution permitting boxing unboxing conversion variable arity method invocation strong applicable method found phase processing continues phase strong phase performs overload resolution allowing boxing unboxing precludes variable arity method invocation strong applicable method found phase processing continues phase strong phase overloading combined variable arity methods boxing unboxing case methods applicable strict invocation methods applicable loose invocation double boxed href https docs oracle javase specs jls se8 html jls html jls rel nofollow jls choosing specific method blockquote member method accessible applicable method invocation choose provide descriptor run time method dispatch programming language rule specific method chosen blockquote blockquote applicable method m1 specific applicable method m2 invocation argument expressions e1 ek true ol li m2 generic m1 inferred specific m2 argument expressions e1 ek li li m2 generic m1 m2 applicable strict loose invocation m1 formal parameter types s1 sn m2 formal parameter types t1 tn type si specific ti argument ei li li m2 generic m1 m2 applicable variable arity invocation variable arity parameter types m1 s1 sk variable arity parameter types m2 t1 tk type si specific ti argument ei additionally m2 parameters 1th variable arity parameter type m1 subtype 1th variable arity parameter type m2 li ol conditions circumstances method specific type specific type expression lt blockquote 2nd condition matches case fact doesnt em int em subtype object true em int em lt em object em replace int integer method signature condition match 1st parameter methods matches condition em object em lt em object em true href https docs oracle javase specs jls se8 html jls html jls rel nofollow subtype supertype relation defined primitive types class interface types em int em subtype em object em em int em specific em object em methods em specific methods em em strictly specific em em specific em method jls definitions terms paragraph href https docs oracle javase specs jls se8 html jls html jls rel nofollow jls choosing specific method methods em maximally specific em case jls options blockquote maximally specific methods override equivalent signatures blockquote case blockquote method invocation ambiguous compile time error occurs blockquote compile time error case valid jls strong change method parameter type int integer strong case methods applicable loose invocation method integer parameter specific method object parameters integer lt object method integer parameter strictly specific specific compiler choose throw compile error strong change double double line double strong case method applicable strict invocation boxing unboxing required invocation method object o1 int method boxing int applicable loose invocation compiler choose method applicable strict invocation compiler error thrown marco13 pointed comment similar case discussed post href http stackoverflow questions method overloading ambiguous method overloading ambiguous explained answer major related method invocation mechanisms explains code compiles hr strong fun part strong lets add ternary conditional operator compiler complains ambiguous method invocation href https docs oracle javase specs jls se8 html jls html jls rel nofollow jls doesnt dictate special rules related ternary conditional operators performing method invocations href https docs oracle javase specs jls se8 html jls html jls rel nofollow jls conditional operator href https docs oracle javase specs jls se8 html jls html jls rel nofollow jls reference conditional expressions categorizes conditional expressions subcategories boolean numeric reference conditional expression operands conditional expression types string double jls conditional expression reference conditional expression href https docs oracle javase specs jls se8 html jls html jls rel nofollow jls reference conditional expressions conditional expression poly reference conditional expression appears invocation context type poly conditional expression object target type invocation context continue steps parameter object case compiler choose method int parameter throw compiler error tricky part jls blockquote operand expressions similarly context kind target type blockquote assume poly implies context method invocation operands considered independently means compiler decide boxing operation required argument operands boxing required specific case string doesnt require boxing double require boxing compiler decides overloaded methods loose method invocation steps case ternary conditional expression double explanation jls vague ambiguous part related conditional expressions applied overloaded methods make assumptions whats interesting ide intellij idea doesnt detect case ternary conditional expression compiler error cases detects compiler jdk means jdk compiler internal ide parser bug 