utf byte length single code point surrogates 
started pretty basic question integer code point href http docs oracle javase docs api lang character html unicode rel nofollow api return number bytes required utf encoding time spent innocent problem confusing approach created version based href https en wikipedia org wiki utf rel nofollow utf wikipedia article simplicity efficiency years struggling lovely subtleties character encoding ran test lo failed code points ud800 udfff stdlib version returns byte versus bytes hand rolled good ol surrogate characters causing havoc understanding pesky buggers version correct questions ol li javas utf implementation broken understanding oracle se runtime environment b04 li li incorrect preferable hand rolled version consistent actual byte encoding decoding produced javas utf li li correctness considerations standard libraries provide cleaner stlib li ol 

problem string consisting single surrogate codepoint valid string point view default behavior encoder href https docs oracle javase docs api lang string html getbytes 28java nio charset charset rel nofollow javadoc blockquote method replaces malformed input unmappable character sequences charsets default replacement byte array class control encoding process required blockquote default replacement byte array single byte symbol utf youve encoding codepoint suggested lower level supplying wikipedia href https en wikipedia org wiki universal character set characters surrogates rel nofollow blockquote isolated surrogate code points general interpretation blockquote basically decide deal code points returning bytes correct returning byte simply incorrect input correct output condition meaningless exceed replace 