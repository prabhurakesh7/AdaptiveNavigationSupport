arrays fill hashmap clear anymore 
implementation noticed strange thing looked href http grepcode file repository grepcode root jdk openjdk 7u40 b43 util hashmap openjdk 7u40 href http grepcode file repository grepcode root jdk openjdk 8u40 b25 util hashmap openjdk 8u40 understand null empty map additional check caching local variable required replaced loop change introduced href http hg openjdk net jdk8 jdk8 jdk diff d62c911aebbb src share classes util hashmap l1 commit found explanation plain loop faster safer 

summarize moreless reasonable versions proposed comments holger href http stackoverflow questions arrays fill hashmap clear anymore comment53230781 blockquote guess avoid class util arrays loading side effect method application code concern blockquote easy thing test lets compile program run print class loading events occur jdk classes loaded loaded long application code loaded classes load triggered initialization static fields load triggered load method load triggered extends present instance class jdk initialized static initializer short initializes assertion mechanism mechanism classes including loaded early static initialization steps performed holger version incorrect found interesting thing interesting appeared href http hg openjdk net jdk8 jdk8 jdk annotate 37a05a11f281 src share classes util weakhashmap l633 prehistoric times public openjdk repository marcotopolnik href http stackoverflow questions arrays fill hashmap clear anymore comment53230663 blockquote safer surely em em faster call inlined short hotspot loop explicit call result fast compiler intrinsic happy day scenario blockquote surprising directly intrinsified href https gist github apangin 7a9b7062a4bd0cd41fcc intrinsic list generated href http stackoverflow users apangin apangin loop recognized vectorized jvm explicit intrinsic handling true extra call inlined specific cases limit reached hand rare situation single call call inside loop static virtual interface call performance improvement marginal specific scenarios thing jvm developers care noted c1 client compiler tier capable inline called inlining log easily inlined smart powerful c2 server compiler problems marco version incorrect finally couple href http stackoverflow questions arrays fill hashmap clear anymore comment53251284 comments stuartmarks jdk developer official voice blockquote interesting hunch mistake review thread changeset href http mail openjdk net pipermail core libs dev august html references href http mail openjdk net pipermail core libs dev july html earlier thread href http mail openjdk net pipermail core libs dev august html continued initial message earlier thread points prototype hashmap doug leas cvs repository dont doesnt match openjdk history case snapshot loop clear method years arrays fill call introduced href http hg openjdk net jdk8 jdk8 jdk rev 2e3cc7f599ca changeset tree months power computation based integer highestonebit introduced href http hg openjdk net jdk8 jdk8 jdk rev 36f4cf8872f3 changeset disappeared time noted dismissed review hmmm blockquote contained loop years href http hg openjdk net jdk8 jdk8 jdk rev 2e3cc7f599ca l2 replaced apr 10th stayed half year sept 4th discussed href http hg openjdk net jdk8 jdk8 jdk diff d62c911aebbb src share classes util hashmap l1 commit introduced discussed commit major rewrite internals fix href https bugs openjdk net browse jdk jdk issue long story possibility poison keys duplicating hashcodes reducing search speed linear making vulnerable dos attacks attempts solve performed jdk including randomization string hashcode implementation forked earlier commit developed independently merged master branch overwriting introduced support hypothesis performing diff href http hg openjdk net jdk8 jdk8 jdk raw file d62c911aebbb src share classes util hashmap version removed compare href http hg openjdk net jdk8 jdk8 jdk raw file 36f4cf8872f3 src share classes util hashmap previous version output lines lets diff href http hg openjdk net jdk8 jdk8 jdk raw file de228734b742 src share classes util hashmap version prior added lines newer version similar older parent strong conclusion strong conclude agree stuart marks concrete reason remove change overwritten mistake perfectly fine jdk code user applications class loaded pretty early jdk initialization simple static initializer method easily inlined client compiler performance drawback noted 