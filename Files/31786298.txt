spring rest web request scope 
process writing spring rest type interface database retrieve user specific results resources hold user spring component annotated bean called currentuser temporary measure object initialised spring interceptor call method api interceptor place holder identify users proper authentication added spring reason post increase understanding thread safety aspects spring situations recently discovered spring automatically thread give consideration scopes understand ol li setup danger 1000s simultaneous requests potentially interfere overwrite request user potentially overwritten user separate http request causing requestor receive wrong data li li approach solving replaced objects instantiated similar ways options issue setting prototype scope attaching request session directly allowing autowired object li ol information give appreciated fan er start dealing bad assumptions 

answer dont requests trouble requests parallel answer main problem scoping default scope spring managed beans singleton means instance currentuser exists application severe security issue currentuser instance application simple answer spring security simpler answer option ul li filter handlerinterceptor direct control clean li li create thread local store user finally filter clean set filter li li create request scoped service scopedproxy wire singletons accesses threadlocal userservice interface make work easily li li autowire userservice li ul specification request servlet environment bound thread thread locals inherently thread completely thread scale overhead scoped proxy minimal option options make request scope explicitly aspects slightly elegant manner simple approach job complex recommend spring security 