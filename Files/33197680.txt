implement invfunc reducebykeyandwindow specific case 
spark streaming process stream files multiple files arrive batch spark process data files sum record files coming subsequent batches ul li key key batch1 li li key key batch1 li li key key batch2 li li key key batch3 li li key key batch4 li ul output ul li processing 1st batch output key key val li li processing 2nd batch output key key val li li processing 3rd batch output key key val li li processing 4th batch output key key val li li processing 5th batch output key key val li ul spark piece code strong reducebykeyandwindow strong output implentation ul li processing 1st batch output key key li li processing 2nd batch output key key li li processing 3rd batch output key key li li processing 4th batch output key key li li processing 5th batch output key key li ul based output reducebykeyandwindow calculating aggregation previous batch data current batch data requirement aggregation previous batchs aggregated data current batch data examaple output end 4th 5th batch read strong reducebykeyandwindow strong strong invfunc strong implemented expected output implement similar strong grp sum strong giving expected result correct implemention desired output appreciated spark version hadoop version implemention invfunc reducebykeyandwindow implemented invfunc giving expected output analyzed s1 s2 giving previous batches aggregated thought change invfunc implementation implementation giving expected output problem face reducebykeyandwindow invfunc removing older keys automatically posts found write filter function delete older keys values values write filter function delete older keys concrete understanding s1 s2 returning inv grp sum 

h3 updatestatebykey h3 checked streaming api maintain state key pairs batch intervals constantly updating key information values works case previous state data aggregated sum key newest state information function found usage href http spark apache org docs latest streaming programming guide html transformations dstreams rel nofollow href https databricks gitbooks io databricks spark reference applications content logs analyzer chapter1 total html rel nofollow function requires checkpointing enabled state saved iteration edit h3 reducebykeyandwindow h3 respect argument method normal em func em em invfunc em elements added elements subtracted essentially implementing windowed reduce adding elements slice time subtracting elements time slice notice attempt adding values back window values attempt ignoring values shifting window subtract values elements shifting window logic similar find similar correct implementation href https github holdenk learning spark examples blob master src main oreilly learningsparkexamples logs loganalyzerwindowed l48 rel nofollow question filter expired keys mentioned involve writing filter function href http bit ly 1mbsiyw rel nofollow api filter function takes key pair returns boolean set true pair false remove pair case remove pair hits pass function pass partition parameter settle partitions rdds 