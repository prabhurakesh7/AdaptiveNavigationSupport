efficient algorithm integer partitioning restricted number parts 
create method takes integers returns ways sum positive numbers method call return ways method count distinct variations solution problem updated greater 

h3 recursive algorithm h3 find partitions integer parts recursive algorithm choice case algorithm runs option part options recurses case number recursions point reached solutions number solutions equals number options part h3 rising sequence h3 find unique solutions discard duplicates counted solutions parts form decreasing sequence rising sequence part greater h3 recursion minimum h3 maintain rising sequence recursion previous part minimum parts avoid pass minimum recursion recursion replaced number solutions simplify code helps improve efficiency memoization sequences replaced canonical form smaller set intermediate calculations repeated h3 memoization h3 partitioning recursive algorithm calculations repeated numerous times increasing values number recursions quickly huge solve case illustrated case calculated times href http stack imgur fazno png rel nofollow img src http stack imgur fazno png alt recursion heatmap number unique calculations greater caching result calculation sized array calculation calculated case algorithm stored hugely improves algorithms efficiency memoization recursions needed solve case memoization recursions needed illustration shows cache reads writes case grey cells unused white cells written read total writes reads href http stack imgur mewa2 png rel nofollow img src http stack imgur mewa2 png alt cache heatmap h3 reducing cache size h3 youll notice triangles top left bottom closer bigger unused zones avoid waste space parallellogram inbetween triangles skewed storing cache size reduced worst case longer size href http stack imgur vvt02 png rel nofollow img src http stack imgur vvt02 png alt skewed cache heatmap h3 code memoization h3 div class snippet data lang js data hide false div class snippet code pre class snippet code js lang js prettyprint override h3 code fast version memoization h3 version caches intermediate results faster basic algorithm javascript implementation solves worst case scenario millisecond div class snippet data lang js data hide false div class snippet code pre class snippet code js lang js prettyprint override worst case solves 01779428811641e result returned instantly floating point precision javascript exact result h3 code fast version memoization smaller cache h3 version skewed cache indexes reduces memory requirements div class snippet data lang js data hide false div class snippet code pre class snippet code js lang js prettyprint override 