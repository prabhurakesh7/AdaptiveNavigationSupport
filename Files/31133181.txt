access variable parent reference type 
created classes strong parent strong strong child strong child class shadowing parent class instance variable created main program strong test strong output program clear access output output understanding created reference variable type points object er program run time time program creates object heap memory child class child class shadowing variable output program understanding correct concept applies methods overriden child class explain case instance variable compared methods 

access fields determined static type type variable contrast methods determined resolved bound runtime type actual object words field access compiler determines compilation time accessed access compiler checks type variable sees type generates code accesses field class 