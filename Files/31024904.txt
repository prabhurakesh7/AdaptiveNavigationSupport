live resources akka stream flow description 
href http doc akka io docs akka stream http experimental rc3 stream design html users streaming libraries expect akka stream docs stating blockquote reusable flow description bound live resources connection allocation resources deferred materialization time examples live resources existing tcp connections multicast publisher blockquote questions ul li examples resource counts live ul li safely deep copied li li avoid sharing thread li ul li li existing li li defer allocation materialization time allocate constructor create function li ul 

problem common problem webservices rmi connections communication protocol recommended sharing primitive values references marshalling unmarshalling serializing unserializing headache types environments communicating sharing solid values solve communication akka good microservices communicating actors read documentation akka good word defines akka actors actors mailbox clients client mailbox pass variable email short result long story avoid sharing dependent objects invalidated read actor additionally system names actorrefs dynamically avoid calling reference materializing explained docs akka streams blockquote process materialization parameterized instantiating blueprint handling tcp connection data specific information connection address port information additionally materialization create specific objects interact processing engine running shutting extracting metrics means materialization function takes set parameters produces set results compositionality demands sets interact establish covert channel pieces communicate leading problems initialization order inscrutable runtime failures blockquote parameters passing connection deferring live resource big means connection system alive create transaction actor send actor shouldnt terminate transaction actor actor finished job transaction understand future offer hope understand question hope express 