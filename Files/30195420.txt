integral image extra row column zeros 
learning integral images opencv api created test displays grayscale image integral image grayscale image converted integral image found extra rows zeros extra column zeros shown output integral image extra row column zeros strong code strong strong output strong 

reasons purely mathematical row numbers pixels cumulative sums generates answer sum pixels pixel pixels pixels amount sums equivalently image width yield sums row size 10x10 yield 11x11 sums reason programming simplicity integral image calculate sum rectangle image actions sum corners minus corners distance corners equals size rectangle sum rectangle width pixels access integral image indices rectangle covers entire image width height produce index falls array integral image stored size 1x1 larger image strong strong store integral image array size image access array slower test indices bound accessing integral image index detected produce sum accessing index width automatically return sum entire width strong opencv strong implemented larger integral images due speed reasons calculation sum rectangle requires operation pointers deference test pointers fall inside image long requested rectangle legal coordinates inside image architectures accessing array bounds illegal indices gpu shaders architectures integral image implemented fashion size nxn 1xn pyramid sums strong manually remove extra column integral image opencv strong strongly recommend opencv built code access integral image specific remove column unpredictable calculations explained additional row column increase running time factor x10 faster addition subtraction performed cpu faster conditions integral image completely representation original image size depth original image grayscale store byte pixel integral image typically bytes pixel summation pixels require larger numbers integral image times memory original image fit integral image original image due bpp bits pixels bothered width height 