mmap memory mapped file faster read 
working sth mappedbytebuffer nio recently read posts mention mmap faster read conclusion ol li treat mappedbytebuffer memory mapped file mmap li li read read data disk file kernel application context switch buffer copying li li mmap copying syscall read read disk file time access file data time read virtual address memory page fault disk file kernel memory access randomly steps disk file kernel memory read mmap copying syscall read li li whats relationship mmap swap file os put file data memory swap lru time access data os retrieves swap disk file copy kernel buffer mmap copying syscall li li mappedbytebuffer allocated heap direct buffer read mappedbytebuffer extra memory copy heap heap li ol answer questions 

essentially mappedbytebuffer disk file kernel doesnt necessarily involve copying memory mapped file kernel read file cache simply map part cache process copy data cache location process specifies kernel decides swap page memory mapped file write page page file write page em original em file mapped discarding page writing page file unnecessary waste page file space call data copied heap mapping array functions copy data em em type buffer specific memory mapped files 