casting bad practice language 
asked question design piece code found href https stackoverflow questions good bad practice good bad practice people told casting considered bad practice specific scenarios pieces code totally natural things android sdk function href http developer android reference android app activity html findviewbyid int rel nofollow returns view cast actual class avoided languages br support introspection natively require kind type field end thing isnt 

couple reasons important ol li strong conceptual strong languages large extent similar languages strongly encourage reference types run time polymorphism single tool solve lot problems compile time polymorphism code reuse performance enhancement type erasure run time polymorphism specialized solutions individual problems templates types solve individual problems polymorphism common languages remaining cases common inappropriate equivalent downcasts li li strong pragmatic strong downcasting operator fundamentally em extraordinarily slow em compared performance operators main part due fact multiple virtual inheritance languages dont casts simpler compilers implementations em em historically slower implementations downcasting bit visual developers avoid costs due practical performance characteristics top conceptual reasons li ol reasons bad idea absolutely 