check lng lat bounding box intersects 
assume bounding boxes coordinates pair long lat representing corners square box check boxes intersects check rectangles intersects problem calculated width height coordinates give directions calculations h3 edit h3 accomplish represented href https github googlemaps js marker clusterer rel nofollow library basically calculates square bounding box point check imaginary squares intersects image href https developers google maps articles toomanymarkers markerclusterwithsquares png rel nofollow img src https developers google maps articles toomanymarkers markerclusterwithsquares png alt enter image description calculate corners marker check intersect intersection calculation h3 edit h3 calculating corners radius angle top bottom bottom left top left href http maps googleapis maps api staticmap center amp zoom amp size 900x900 amp maptype roadmap amp sensor true amp markers color blue 7c amp path color 7cweight 7cfillcolor 0xffff0033 7c 203241505850738 95790277517345 7c 203241505850738 89265722482655 7c 266762353450995 892648717468646 7c 266762353450995 957911282531356 7c 203241505850738 95790277517345 rel nofollow output 

assuming lat long bounding box side lines constant longitude latitude words top side line constant latitude left side line constant longitude rectangle real life treated purposes mathematically transforming bounding box lat long space shape fact rectangle doesnt make sense word case show curved shapes real space intersect rectangles intersect curved space short version strong standard test intersection rectangles strong rectangle class code latitude longitude rectangle bounds strong result strong strong strong areas defined ol li area degrees degrees li li area degrees degrees li ol correctly test intersection doesnt matter rectangles rectangular euclidean space work rectangles north south pole case split rectangle side pole normalize latitude longitude clever rectangles overlaps longitude line 