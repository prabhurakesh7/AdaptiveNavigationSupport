create java8 function reference programmatically 
theoretic question practical case assuming api accepts function reference argument feed directly code syntax collect matching functions reflection store map invoke conditionally programmatically convert hr strong update strong satisfied solutions provided answers hint compile code feeding test class href http www benf org cfr rel nofollow cfr decompiler back ul li liner manner li li exception handling required li li idea decompilers output match href https docs oracle javase docs api lang invoke lambdametafactory html metafactory lang invoke methodhandles lookup lang string lang invoke methodtype lang invoke methodtype lang invoke methodhandle lang invoke methodtype rel nofollow metafactory arguments additionally decompiler eats hides invocations methods function reference li li offtop obtaining function reference compiled code function call general unnoticeably cheap operation performance critical code li ul test testimpl classes provided cfr reconstructs absolutely code compiled 

reflection code compile code method reference instructions overhead reflection perform lot code href https docs oracle javase docs api lang invoke methodhandles lookup html rel nofollow object retrieved class reponsible creating href https docs oracle javase docs api lang invoke methodhandle html rel nofollow objects href https docs oracle javase docs api lang invoke methodtype html rel nofollow object represents arguments return type accepted returned method handle created case method returns void takes string finally handle obtained finding method class refer href http stackoverflow question href http stackoverflow information 