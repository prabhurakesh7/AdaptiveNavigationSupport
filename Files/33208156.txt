recursive divide array 
number ways divide array small arrays divide array verticaly horizontaly algorithm works good time complexity bad improve strong parameters strong row array row array dimension columns functions checking end condition numbers ways divide array divide function check return strong strong em input em em output em em input em em output em function works stop dividing subarray zeros code 

code step recursion divide dimensional array arrays single horizontal vertical cut verify parts fulfil condition defined check method put parts recursion recursion longer continued return assume algorithm produces result afraid effective optimization algorithm highly dependent check condition trivial case retuns true problem collapsed mathematical problem propably general recursive solution bit complex effectively solvable scenario condition check shape array meaning check return result check complex general solution check condition case optimize brute force solution thing mind adding memory algorithm awt rectangle class create class hold dimensions array util hashmap store results executions divide method furure reference method called parameters prevent duplicate work propaply occur define haspmap static variable class beginning divide method add code change ending method form give performance boost algorithm return earlier tought check condition simple optimization effectively check condition checks shape array width height key map decrease size map multiple number positive hits 