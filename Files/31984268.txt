counting tokens antlr4 
write program source file single method count number variables operators punctuation symbols reserved words strong count tokens based type strong 

research based zhan realized needed requires techniques ul li operators reserved words punctuation marks counted strong antlr4 lexer strong identified source code putting context li li variables constants methods classes counted strong antlr4 parser strong identifying requires parsing understanding context identifiers li ul sake people similar future heres antlr command line tool generate lexer parser baselistener language instructions found antlr official website created classes analyzing language create project add project add antlr library projects build path create class extending base class file methods override scanning source codes ast method invoked time event occurred invoked time parser reached method declaration listener raise counter time found method create strong lexer strong strong parser strong strong parsetree strong strong parsetreewalker strong ul li lexer runs code start finish splits tokens identifiers literals operators token type list types found beginning lexer file case li li parser lexers output build ast abstract syntax tree representing code addition tokenizing source code understand context token appears li li parsetree entire codes ast subtree li li parsetreewalker object walk tree basically means scan code hierarchically start finish li ul finally instantiate listener walk parsetree basis steps depend achieve brings back difference strong lexer strong strong parser strong basic lexical analysis code identifying operators reserved words lexer iterate tokens determine type checking token type field code count number reserved words inside method tasks require parsing ast identifying variables methods annotations parser code count number variable declarations inside method 