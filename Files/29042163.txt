streaming upload httpclient multipartentity 
tomcat instance takes uploads processing work data replace servlet conforms similar api servlet proxy requests theyre running separate jvms host httpclient proxy upload client waits stream finish proxies request large files servlet crash buffering memory heres code figure httpclient httppost stream data blocking upload completes similar easier solution 

issue lies request processed mime multiplart framework process httpservletrequest access file parts nature mime multipart request simple high level traditionnal key content requests complex syntax carry arbitrary unstructured data files upload basically wikipedia important part parts separated boundary names content disposition header content request number parts simple implement parsing request process till end detect boundary create temporary file memory cache hold part identified framework part part servlet call parses stream back control call blocked line framework wait parse mime part letting result rethorical super optimised parser parse lazily stream random access parts message youd choose options multipart parser wouldnt recommend youre familiar mime mime libraries apache james confident control requests structure bypass framework processing access raw stream request youd parse mime structure hand stop hit start requests body start building http post point carefull care mime level technicalities de base64 de gzip alternatively server crashes memory framework configured cache contents multpart memory configure cache disk workaround 