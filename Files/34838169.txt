iterating files scala open file descriptors 
appears nios returns stream consumed holds file descriptor file iterated called entire stream means data directories upwards files easily brush common values effect file descriptor accumulation exacerbates dealing nested traversals alternative iterate files large directories spawning calls os file list command cool iterating files large directory file descriptor maintained iterated file implied proper stream semantics edit returns stream api call closing item stream processed entire stream closed leaner iteration scala easily fiddled api wrapper files leading href https github pathikrit files blob 1c6f0f05d2aa3e16ddb06c0b275d0da9372fa7b0 core src main scala files file scala l236 

ran issue windows server r2 didnt close stream files iterated open read mode jvm shut occur mac os stream depends os dependent implementations assume issue os dependent contrary ian mclaird comment mentioned href https docs oracle javase docs api nio file files html list nio file path rel nofollow documentation blockquote timely disposal file system resources required resources construct ensure streams close method invoked stream operations completed blockquote returned stream javadoc blockquote directorystream opened creation closed invoking close method closing directory stream releases resources stream failure close stream result resource leak blockquote solution follow advice construct closed stream properly construct file handles immediately released dont care files stream loading file list memory convert stream io api experience file locking issues solutions rely native os dependent code advise testing environments 