including threadcontext writing log4j2 logs static method thread 
web service application static method set log4j threadcontext variables logging purposes web service requests call method initially rest values time vary request request question scenario thread web service requests share parameters holding references confusing static method similar question href http stackoverflow questions synchronised static methods thread dont modify static clas synchronised static methods thread don modify static class variables clarify 

h1 short h1 h1 explanation h1 map scoped thread casually spoken thread instance map values visible threads href https docs oracle javase docs api lang threadlocal html rel nofollow https docs oracle javase docs api lang threadlocal html details topic thread locals matter method set static caveat application servers web servers thread pooling reuse threads means thread finished web request reused process request data remains valid request retaining data request desirable clear youre request update cover static unsynchronized method part heres answer method store parameters storage stores arguments matter static static method overlap calls threads lifecycle argument ends end method call long store data references topic run race conditions stored static variable synchronize method calls guarantee operations turn system effectively system behaves single threaded multiple threads massive drawbacks static methods related static variables synchronization scenarios invoke synchronized static methods behave differently leads original question 