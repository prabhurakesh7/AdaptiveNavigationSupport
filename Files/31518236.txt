object oriented programming avoid switch case 
problem allowed switch case queries config file read splitting strings saved array problem things code time array ar month calculations full year allowed switch case confused object oriented 

h1 polymorphism inheritance friend h1 sort inheritance structure based time period ar special method coded case ability case instantiate correct subtype place number ways approach h1 conditional operator h1 direct approach imho conditional operator code nested conditional expressions give ability select class inheritance polymorphic behavior mentioned comment h1 map stateless objects h1 suppose wrote depended remembered state method side effects create store instance subclass pull relevant map needed invoke youd initialize map invoke argument h1 options h1 ways sticking concept store class literals instances instantiate reflectively lambda invoke h1 enums h1 oldcurmudgeon suggested enums put enums add lambda enum grab enum invoke lambda work appeal unnecessary youd invoking lambda directly 