xmx hard limit 
href http stackoverflow answer clarifies things jvm flag experiment compile run maximum heap size million bytes numbers close dont exact exception end reaching em em arrays bytes bytes numbers understood 

blockquote xmx hard limit blockquote depends hard changed program precise sizes spaces garbage collector multiple power bytes apparently jvm rounds upwards blockquote em program allocates byte arrays em numbers understood blockquote byte array occupy precisely bytes ul li object header including space bit field typically bits total li li heap nodes allocated multiples bytes typically li ul hr question causing heap completely full case message gc overhead limit exceeded means jvm detected jvm spending large percentage cpu time running garbage collector killed gc running memory rationale gc overhead limit heap closeto full gc runs frequently manages reclaim memory time gc death spiral pull plug quickly allowing application grind ultimate point failure means heuristic figuring memory allocated heap full incorrect 