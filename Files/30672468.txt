return array objects swig 
writing jni wrapper library swig methods library returns array structs allocated memory method signature expecting swig generate datastruct wrapper call library method create jarray datastruct jvm fill datastruct objects initialized datastruct structs returned library finally free allocated memory pointed ppdata wrap head swig typemaps time solution native directive create jni implementaion fully manually swig case 

main thing youre features typemaps firstly multi argument typemaps work arguments logically grouped argout typemaps chance converting arguments outputs ways write interfaces inside swig main trade offs covering quantity jni actual written put complete things ol li converts return type array internally array longs represent pointers instances visible part array datastruct objects constructed li li input typemap creates temporaries placeholders output arguments li li call loop array store addresses members array important array array objects array pointers swigs generated proxy objects function relation pointers individual objects compute inside exposing information needed correctly raw output pointer tricky good compromise means code work switched linked lists future small li ol place run test runs pre class lang prettyprint override 