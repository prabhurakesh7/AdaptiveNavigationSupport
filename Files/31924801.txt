adding redundant jsonproperty annotations fields increase deserialization performance 
jackson deserialize json requests simple pojos implemented setter methods pojos fine tune assignment field names json cryptic id class field aware simply annotate field question json fields needto rename minimal performance advantage annotating question stems understanding jackson works scenes assuming jackson reflection introspectively examine pojo identify current field attempting assign json approach assuming searching find match small amount overhead field directly jackson blindly attempt initialize field setter matches pattern field identified annotation perform internal class search validate methods existence 

improve performance introspection build initial time annotation introspection general field method introspection expensive operation serializers deserializers aggressively cached avoid case lookups repeated constructing reusing sharing small numbers ideally mappers overhead share cached deserializers created reuse mappers reused 