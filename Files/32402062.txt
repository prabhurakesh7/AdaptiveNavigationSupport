pojo anti object orientation oo 
definitions pojo plain object object properties getters setters people dto essentially call data classes kind objects getters setters commonly developing multi layered mvc web applications objects passed layers question bit opinionated pure oop determined find answer whats whats wrong brought learning oop modelling real life scenarios situations objects interaction objects encapsulate data behaviour acts data object getters setters doesnt fit definition opinion data classes bad code smell taught university 

thing pure oop people worked oo changed years inclined add behaviour types href https en wikipedia org wiki domain driven design rel nofollow https en wikipedia org wiki domain driven design treat type datacontainer pojo youll put behaviour called xxxservice extra level indirection core business pojo writing code end function youd extract helper share means youll services calling method acting pojo level indirection added worked projects lot developers feel comfortable setter getter thing team feels comfortable setters getters wont kill project youll day 