streams read file word word 
streams lot process files line line function read specific number words seperated leave bufferedreader exact position number words reached version reads file linewise leaves inputstream position line 20th word br stream reads line inputstream strong edit strong br parsing file word number words read word read specific number words file multiple sections section parsed function read helpful comments clear choice problem class stream features br streams give guarantee reader specific position terminal operation stream href http docs oracle javase docs api io bufferedreader html lines rel nofollow api docs making streams wrong choice parsing structure parse section track position 

original problem assume file output general stream api badly suitable problems writing plain loop solution stream api based solution suggest href https github amaembo streamex rel nofollow streamex library href http amaembo github io streamex javadoc util streamex streamex html headtail util function bifunction rel nofollow method allowing easily write custom stream transformation logic heres problem solved usage result desired output replace read input file stream records lazy record preserved stream time short circuit rest input read current file line read end solution recursive eat stack heap works huge files hr explanation method takes argument lambda executed outer stream terminal operation execution stream element requested lambda receives stream element head stream original elements tail lambda return stream original element input convert number create empty call tail heres helper method implementation stream element add current buffer target buffer size reached call process record prepend resulting stream single element current buffer call tail add elements buffer 