method reference final variables 
confusion classes lambda expression href http stackoverflow questions lambda expressions reference instance method object question doubt arose probable posting question commenting previous straight point href http stackoverflow questions final variables accessible anonymous class jon wont compile due manages closures em effectively final em allowed equivalent case facing risks working date variable case executed date copy references object isnt kind ambiguity avoid 

method reference lambda expression causing confusion simplification works works close lambda expression equivalent anonymous class implements rules apply anonymous class method local class means effectively final work hand method handle case object assigned assigned part method handle created doesnt effectively final work 