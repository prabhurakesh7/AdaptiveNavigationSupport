restricting gc thread increase performance 
simple code wrote artificially lot ram find times flags understand increases performance speedup restrict single threaded gc artifact poorly written code apply properly optimized code 

expert garbage collectors answer youd findings issue interesting changed code href http junit org rel nofollow junit test case added href http labs carrotsearch junit benchmarks tutorial html rel nofollow junitbenchmarks extension href http labs carrotsearch rel nofollow carrot search labs runs junit test cases multiple times measures runtime outputs performance statistics important fact junitbenchmarks warmup runs code times measurement final code run benchmark options warmup running test method times actual benchmark run times run program gc options general heap settings ul li default special options li li li li li li li li li li li li li li li ul order summary chart html page vm arguments passed addition gc settings mentioned string uniquely identifies benchmark run label axis chart chart summarizes results img src http stack imgur fmmnw png alt enter image description system info cpu intel core quad q9400 ghz ram gb os windows x64 jvm b13 em individual benchmark runs output detailled information standard derivation gc calls time information summary em strong interpretation strong huge performance gain enabled number threads influence performance depends general gc strategy threads advantageous default gc profit threads performance worse threads opposite em concurrentmarksweep gc em threads performant threads general gc threads make performance worse dont gc threads default gc em concurrentmarksweep gc em number threads 