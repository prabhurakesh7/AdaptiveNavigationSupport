expensive maintenance automated test data 
company growing set integration test junit web application test specific external xmls files populate database needed data test problem ol li change model long time correct xml files hundreds xml files lot redundancy li li complexity creating xml file manually discourages programmer explore scenarios li li dont link test data test test dont user inserted xml hard code information increase maintenance time xml hard coded data synchronized li ol facing problem started thinking system crud generate test data test beginning test run methods persist desired data test vision resolve problems ol li model require changing crud longer correct test data li li easier build test data worry thing matching id foreign key entity manually li li important data variables sync guaranteed ide li ol lacks experience knowledge start approach question solution effective approach problems find approach literature solution listed problems 

key improving maintainability dry test data setup redundant test technology offers effective means reuse wrong technology writing code test data setup familiar good tools improve code reuse tests offers refactoring support xml makes link test data test code explicit source file method require tests written maintained programmers business analysts managers testers test data authored maintained programmers id crud layer full fledged domain layer real application test data originates data export authored people programmers purely data driven approach fit combine approaches choose strategy entity personal experience team integration tests dbunit switched setting test data part test code real data access layer tests intention revealing easier maintain test effort reduced test coverage improved tests written prodding tests written maintained developers 