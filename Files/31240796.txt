int class argument required getconstructor reflection api 
instance created type constant pool class loaded compiles syntax point object points code access parameterise constructor code understand role argument hood designed accept type argument int argument 

type dedicated purpose lot classes instances simply replace work accept bit ambiguity possibly performance loss numbers representation names instance dedicated type ensures creating lookup parsing action required instance successfully performed object representing referring existing type parameter doesn necessarily refer existing type doesn valid lookup constructor arguments passing imply make entire work verifying correctness type restrictions programming language apply jvm ambiguous clear refers named primitive type call assumed referring named method primitive types reason compiled access primitive types looked reference types explained href http stackoverflow questions object pointed class existence comment50489815 ambiguous runtime multiple classes defined href http docs oracle javase specs jvms se8 html jvms html jvms rel nofollow jvms creation loading blockquote run time class interface determined pair binary href http docs oracle javase specs jvms se8 html jvms html jvms rel nofollow defining class loader blockquote href http docs oracle javase specs jls se8 html jls html jls rel nofollow jls loading classes interfaces blockquote behaved class loaders maintain properties ul li good class loader return class object li li class loader l1 delegates loading class loader l2 type occurs direct superclass direct superinterface type field type formal parameter method constructor return type method l1 l2 return class object li ul malicious class loader violate properties undermine security type system virtual machine guards blockquote 