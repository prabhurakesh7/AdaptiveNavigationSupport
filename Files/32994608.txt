odd timing memory issue 
run strange problem create running problem presents sort timing error happening jvm intermittent nature easily reproducible test environments problem array explicitly set destroyed replaced circumstances specifically code evaluating line immediately contents shows correct sample output running test case running bit windows reproduce problem eclipse compiling command line jdks unable produce problem running results demonstrated bit windows box problem appeared large trivial piece software managed condense lines code small test case demonstrates issue odd test case appears error required replace double demonstrate issue interestingly replaced replicate issue special eclipse debugging timing doesnt happen anymore statement issue longer issue intermittent reproduce issue run test case times run times output shown eclipse give running kill hasnt happened command line run doesnt happen quit appears happen pretty quickly issues past threading issues figure whats looked bytecode identical ideas happening 

strong update strong original answer incorrect onstackreplacement revealed problem case original bug escape analysis code escape analysis compiler subsystem determines object escapes method escaped objects scalarized heap allocation totally optimized test escape analysis matter created objects surely dont escape method downloaded installed href https jdk9 net download jdk early access build noticed bug disappears jdk early access build exists href http download net jdk9 jdk9 b83 html download jdk9 jdk9 b83 html changelog b82 b83 shows relevant bug fix correct wrong href https bugs openjdk net browse jdk jdk incorrect jit compilation complex code inlining escape analysis committed href http hg openjdk net jdk9 jdk9 hotspot file 979c4f71a3c8 test compiler escapeanalysis testeabadmergemem testcase similar big loop boxes similar element arrays test lead sudden change inside box result silently incorrect crash exception incorrect case reported problem prior 8u40 href http hg openjdk net jdk9 jdk9 hotspot diff 979c4f71a3c8 src share vm opto escape cpp introduced fix short line change escape analysis source openjdk bug tracker fix href https bugs openjdk net browse jdk backported jdk 8u72 branch href http openjdk net projects jdk8u releases 8u72 html scheduled released january late backport fix upcoming href http openjdk net projects jdk8u releases 8u66 html 8u66 suggested work disable escape analysis xx doescapeanalysis disable eliminate allocations optimization xx eliminateallocations apangin href http stackoverflow questions odd timing memory issue comment53823901 closer answer original answer hr reproduce problem jdk 8u25 jdk 8u40 8u60 runs correctly stuck infinite loop outputs exits jdk downgrade 8u25 acceptable fixes javac things involving lambdas fixed 8u40 compile newer javac run older jvm problem bug href http openjdk net groups hotspot docs hotspotglossary html onstackreplacement onstackreplacement mechanism osr occurs tier youre unfamiliar osr read href http stackoverflow answer osr surely occurs case bit weird heres failed run means osr jit means osr bytecode position means tier level osr tier4 occurs bytecode offsets offset loop entry point offset nested loop entry point race condition occurs context transfer osr compiled versions method results broken context execution handed osr method transfer current context including values local variables osred method bad short time osr version works replaced context updated delay osr context transfer interferes eliminate allocations optimization noted apangin switching optimization helps case expertise dig apangin comment contrast normal run copy tier osr method created installed case race osr versions occur works perfectly problem disappears move outer loop body separate method manual unrolling nested loop removes bug hit bug nested loops method osr occur bytecode positions work problem piece code extract loop body separate method alternative solution disable osr completely rarely helps production code loop counters work method iterations loop called run jit compiled method long loop jit compiled due disabled osr methods calls jit compiled 