design approach creating immutable class 
reading specific guidelines creating immutable class href http www oracle technetwork articles bloch effective qa html rel nofollow em effective em read immutable class method allowed overridden overridden method change behaviour method design approaches solve problem ol li mark class final understanding disadvantage makes class inextensible li li make individual methods final disadvantage individually mark method final order prevent overridding li li book approach make constructor private package private provide public static factory method creating object li ol question include private default constructor class extended anymore package package case package private constructor problem considered approach previous 

providing static factory method room implement flyweight pattern theyre stating hide possibility creating object constructor make call method checks object similar state exists object pool map filled objects waiting immutable objects waste memory literals encouraged shunned needed stores state type definition exists pool create add pool return statement marking class immutable types extensible place avoid possibly modifying behavior marking method crazy immutable classes 