separate scriptengine compiledscript instances thread 
program scripting api eval scripts concurrently dont shared script objects bindings context objects oracle nashorn implementation multithreaded returns documentation blockquote engine implementation thread execute scripts concurrently multiple threads blockquote create separate instance thread documentation concurrent usage blockquote compiledscript scriptengine blockquote assumed thread safety depends related separate instance thread nashorn solution common case pool 

share objects threads threadsafe share single engine instance holder class cache javascript objects hidden classes cut repeated compilation share objects bindings object basically corresponds javascript runtime environments object engine starts default bindings instance multithreaded environment obtain separate bindings object thread global evaluate compiled scripts youll set isolated global scopes code pool synchronize em make thread working bindings instance evaluated script bindings subsequently efficiently invoke functions defined share state threads make mutable objects immutable evaluate script single instance threads invoking side effect free functions mutable youll synchronize bindings nashorn specific js api obtain versions js functions synchronize specific object presupposes share single bindings threads multiple bindings share subset objects putting object multiple bindings youll deal ensuring access shared objects thread parameter returning null yeah initially planned making engine threadsafe language isnt threadsafe chose null evaluate meantime make engine instances threadsafe global scope bindings isnt javascript language semantics 