fork join pool executorservice countdownlatch 
multi threading techniques strong em fork join pool executor service amp countdownlatch em strong strong fork join pool strong href http www javacodegeeks forkjoin parallel programming html rel nofollow http www javacodegeeks forkjoin parallel programming html fork join framework designed make divide conquer algorithms easy parallelize type algorithms perfect problems divided problems type recursion break problem simple tasks simple solved directly solutions problems combined give solution original problem strong executorservice strong interface extends executor class represents asynchronous execution mechanisms manage end detect progress asynchronous tasks em invokeall em executes tasks returning list futures holding status results complete future isdone true element returned list strong countdownlatch strong href http examples javacodegeeks core util concurrent countdownlatch concurrent util concurrent countdownlatch rel nofollow http examples javacodegeeks core util concurrent countdownlatch concurrent util concurrent countdownlatch countdownlatch synchronisation threads wait set operations performed threads completes strong assumption strong alternatives final result completion tasks threads strong em alternatives complimentary supplementary em strong correct thought process 

research multi threading frameworks past months found answer question strong executorservice strong simple easy limited control ol li start parallel independent tasks waiting li li wait completion tasks li ol prefer number tasks small number piling tasks unbounded queue pile memory amp degrade performance system hides low level details playing parameters fine tune performance strong threadpoolexecutor strong control setting minimum maximum threads set queue size make bounded thread factory features ol li set descriptive thread li li set thread daemon status li li set thread priority li ol application constrained number pending runnable callable tasks bounded queue setting max capacity queue reaches maximum capacity define rejectionhandler types rejection handler href http docs oracle javase docs api util concurrent threadpoolexecutor html rel nofollow policies ol li default handler throws runtime rejectedexecutionexception rejection li li thread invokes execute runs task simple feedback control mechanism slow rate tasks submitted li li task executed simply dropped li li executor shut task head work queue dropped execution retried fail causing repeated li ol strong countdonwlatch strong framework thread wait set threads completes tasks cases ol li achieving start number threads time achieve maximum parallelism li li start executing code block li li li ol details listed href http howtodoinjava countdownlatch concurrency tutorial rel nofollow article strong forkjoinpool strong similar executorservice difference makes easy tasks split work smaller tasks submitted forkjoinpool task stealing forkjoinpool free worker threads steal tasks busy worker thread queue parameters strong parallelism strong parallelism level default strong factory strong factory creating threads default defaultforkjoinworkerthreadfactory strong handler strong handler internal worker threads terminate due unrecoverable errors strong asyncmode strong true establishes local scheduling mode forked tasks joined strong query strong strong executorservice invokeall countdownlatch framework forkjoinpool frameworks complimentary varying granularity control execution tasks high level low level strong strong em edit em strong related se questions href http stackoverflow questions advantages executorservice advantages executorservice href http stackoverflow questions javas fork join executorservice fork join executorservice href http stackoverflow questions threads finished threads finished 