zookeeper recipes apache curator 
understand em em types problems apache zookeeper zk solves href http zookeeper apache org doc trunk recipes html rel nofollow recipes page place start making em assumptions em ul li zookeeper api exposes href http zookeeper apache org doc r3 zookeeperover html simple api rel nofollow simple methods build usage patterns zk recipes li li zk recipes solve problems distributed programming li li building zk recipes ship href http curator apache org index html rel nofollow apache curator li li youre zk recipes homegrown provided curator solve distributed computing problems li ul href http kafka apache org rel nofollow apache kafka kafka zk create href http zookeeper apache org doc trunk recipes html sc recipes queues rel nofollow distributed queue listed zk recipes assumptions correct zk exposes api methods creators apache kafka zk directly curator implement queue zk recipe assumptions wrong begin correcting assuming track list zk recipes exhaustive ul li barriers li li locks li li leader election li ul order recipes solutions present problem solve understand lock basic concurrency case distributed lock leading election case em needing em place building application wanted ship built master slave primary secondary capability case zk implement leader election recipe curators href http curator apache org curator recipes leader latch html rel nofollow leader latch box barriers dont locks ul li master slave primary secondary problem accurate case zks leader election recipe li li distributed lock problem solve li li ditto barriers whats difference locks barriers li ul 

ol li zks leader election recipe correct general recipe exists rewrite li ol quoting zookeeper documentation blockquote zookeeper centralized service maintaining configuration information naming providing distributed synchronization providing group services blockquote ol li distributed locks lets distributed system configuration saved zookeeper entity responsible updating configuration case configuration updates synchronous li li barrier personally lock aquire lock node barrier wait free necessarily set barrier free li ol 