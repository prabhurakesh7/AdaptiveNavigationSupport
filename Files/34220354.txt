find combinations chess game 
making program calculating number solutions chess game bishops queens user put maximal number queens bishops size chess board call set positions bishops queens board em combination em combination counts em solution em squares attacked user calculate number solutions queens bishop 3x3 chess board solutions user chooses queens managed create algorithm check combination valid solution problem algorithm find combinations algorithm loops combinations check combination valid solution recursive solution 

smart solve faster sketch brute force recursion board squares total solution checking algorithm runs solution fast larger boards words normal chess board pieces completely useless run href https en wikipedia org wiki wheat chessboard problem rel nofollow wheat chessboard problem worse solution checker expensive grows power power fewer pieces problem mitigated fact stop branching pieces assume solution checking function named takes dimensional array board returns boolean board solution bit rusty dont expect run debugging logic allright strong edit strong requested comments explain works imagine board states tree branches alternative queen bishop empty square branches branches square branches branches square recursion traverse branches time function called calls times statements limits traversion maximum number type piece reached place piece put leave empty option options function calls array copied function exit leave board state recieved square function called square function returns 