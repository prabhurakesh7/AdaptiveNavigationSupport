updating date time period time 
wanted create basic console log small utility program developing working great basically real time small piece code bothering give rundown code strong strong code untested unoptimized wrong em em open criticism static variables logging purposes code populates appends log messages mind offset dont iterate arraylist logged automatically updates console 150ms part bothers hr simply current set wont create small overhead noticeable work kind guy 

h1 avoid premature optimization h1 noted answers generally worry overhead creating objects implementation provided oracle highly optimized creation destruction short lived objects problem coding long running tight loop briefly objects devote reducing instantiation youve proven performance problem fall trap href https en wikipedia org wiki program optimization optimize rel nofollow premature optimization h1 iso h1 href https en wikipedia org wiki iso rel nofollow iso standard defines formats textual representations fo date time values format makes sense logging h1 utc h1 work date time values href https en wikipedia org wiki coordinated universal time rel nofollow utc time zone adjust local time zone presentation user means business logic database storage logging utc h1 joda time amp time h1 util date calendar classes bundled notoriously troublesome confusing flawed avoid href http www joda org joda time rel nofollow joda time library href http docs oracle javase docs api time package summary html rel nofollow time package built inspired joda time joda time time iso defaults generating parsing strings time classes extend iso appending time zone addition usual offset number h2 code joda time h2 code joda time output pre class lang prettyprint override presentation user assign time zone h2 code time h2 code time output pre class lang prettyprint override adjusting time zone h2 joda time performance h2 creating href http www joda org joda time apidocs org joda time datetime html rel nofollow instances problem quote faq entry href http www joda org joda time faq html performance rel nofollow perform blockquote joda time designed performance compared util calendar text simpledateformat util timezone equivalent operations joda time faster significant exceptions operations set individual field calling util calendar fast doesnt work calendar calculates fields advance fields wont calendars set method fast defers calculations calling calendar calling calendar set forces field values calculated calling jodas datetime method calling datetime set performs minimum amount calculations pair faster calendar joda time allocates temporary objects operations performs thread synchronization systems heavily multi threaded lot memory calendar simpledateformat timezone bottlenecks joda time classes bottlenecks blockquote h1 executor h1 replace href http docs oracle javase docs api util timer html rel nofollow href http docs oracle javase docs api util concurrent executor html rel nofollow specifically href http docs oracle javase docs api util concurrent scheduledexecutorservice html rel nofollow timer largely outmoded executor servlet ee web apps timer search stackoverflow google information h1 logging framework h1 question logging suggest learning good logging frameworks h2 slf4j h2 step href http en wikipedia org wiki slf4j rel nofollow slf4j project interfaces api abstraction logging frameworks encounter projects switch frameworks projects catch logging means calls sprinkled codebase learning changing frameworks troublesome slf4j project aims solve problem providing set interfaces call code scenes adapter intervenes translate slf4j calls calls specific logging framework adapters exist href http en wikipedia org wiki log4j rel nofollow log4j href http docs oracle javase docs api util logging package summary html rel nofollow util logging slf4j bundled simple implementation interfaces implementation meant development started simple projects default implementation logs href http www thejoyofcode logging levels aspx rel nofollow log levels adjust start simple imlementation switch logback entire point slf4j enabling switch logging frameworks h2 logback h2 creator slf4j created href http logback qos ch rel nofollow logback logback full featured logging framework directly implements interfaces slf4j direct implementation interfaces means adapter needed creator slf4j logback ceki lc creator famous log4j vast experience logging create successor slf4j amp logback striking flaw logback lack support iso formatting date times mentioned adjust href http stackoverflow stackoverflow question projects recommend starting slf4j logback existing projects logging framework logging framework place making calls slf4j adapter someday future logging calls replaced slf4j calls option replacing logging framework logback warrant 