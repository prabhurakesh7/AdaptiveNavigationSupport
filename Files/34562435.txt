generic return function casted type erasure 
em question inducted href http stackoverflow questions casting method knowing cast stackoverflow question unsafe casts casting method knowing cast answering question encountered behaviour couldnt explain based purely specification em found statement tutorials oracle docs blockquote ul li insert type casts preserve type safety href https docs oracle javase tutorial generics erasure html rel nofollow em tutorials type erasure em li ul blockquote explained em em means found strong mention casts strong href https docs oracle javase specs jls se8 html index html rel nofollow language specification started experiment lets piece code compiled decompiled href http jd benow ca rel nofollow decompiler cast ensures type safety case case omitted fine store return typed variable cast strictly type safety leads interesting behaviour unsafe casts compiled decompiled type cast ensure correct return type runtime means generic function em em return object type guaranteed em em return type ultimately application code fail point cast return feel breaks href https en wikipedia org wiki fail fast rel nofollow fail fast principle strong exact rules compiler inserting cast compilation ensures type safety rules strong strong edit strong compiler dig code prove generic code returns insert assertation type cast specific cases ensure correct return type throw 

find specification means compiler implementation decide insert casts long erased code meets type safety rules generic code case compilers erased code case cast erased code removed erased code wouldnt compile guarantees held runtime reference variable reifiable type reifiable type runtime check case erased code compiles cast compile added cast compiler decide case compiler decided insert cast perfectly valid choice rely compiler decide 