build interactive parser antlr 
antrl4 nice combination build parsers test noting parsing doesnt start send eof cmd mac input fine parsing file easily imagine building tools command line shells processors quickly antlr isnt doable make parse characters typed things happen return tab wanted command completion 

simplest antlr4 interactively recognize parsing operation fast warm vm instancing parser fast fast parse entire input text keystroke basic strategy key event grab entire current input text process display thread processing complete key event discard processing thread start processing iteration complete set key event buffer needed apply results input text sustained stream keystrokes faster 100ms key event wpm system repeated simple parsing editors page code g4 grammar averages 5ms fairly significant processing background thread rarely requires 25ms complete ymwv strong update strong continuous stream processing interactive antlr adapted purpose require minimal custom lexer meets lexer amp tokenstream interfaces waits actual input data response parsers parsers primary function fetch token lexer actual lexer grammar custom lexer simply wraps input character separate token parser rules written effect turns standard antlr parser grammar defined push parser speed limited run time matching functions parser data rate input stream whichever slower achieve significantly greater parsing speed purpose built state machine 