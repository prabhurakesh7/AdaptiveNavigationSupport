call multiple dao functions transaction 
call multiple dao functions transaction spring framework database api type initialized datasource achieve business logic level code avoid passing connection object single function correct transactions stop passing connection object database layer create lines achieve ejbs daos injection creating hand migrate ejbs start container heard queries executed ejbs transactional rollback strong edit strong point objects method obtains connection object classes methods transaction copy receive object avoid methods database api define beginning commit transaction business logic layer mentioned pseudocode 

demecki idea implementation couldnt solve problem attached function supposed interceptor attached calling function intercepted goal wanted explicitly define beginning ending transaction sql executed statements part transaction access databases related objects connection transaction argument passing achieve elegant opinion created object objects follow pattern easily resource objects starts commits transaction pass works perfectly things bothering ol li found dynamic jndi bothers appserver defined datasources application dynamically chosen xml resource file packaged war means datasource jndi compile time solution obtaining datasource environment variable id love resource server create producer inject li li called correct desired behavior havent understood guessing takes precedence finished start guess li ol 