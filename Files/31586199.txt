university timetable scheduling project genetic algorithm 
hr strong personal info strong computer science student work np complete problem final year project experienced programming assignments things learned university apologies ignorant questions hr strong university timetable scheduling project genetic algorithm strong topic final year project university gathered information needed wrote proposal progress report fully aware fact topic np complete goal project create golden timetable fully optimal problem make acceptable break rules methodology create application decided main artificial intelligence techniques solve problem genetic algorithm constraint satisfaction rules divided main groups soft constraints hard constraints algorithm work assuming inputs classrooms capacities subject names lecturers amount students signed application starts generating random timetables decided implement hard constraints lecturer teaching classes time classroom occupied subject time stage basically generating random timetables creating apply hard constraints call guided randomly generated timetables stage find timetable previous technique talked generated timetables acceptable terms hard constraints genetic algorithm find optimal timetable result soft constraints break classes avoiding subject class everyday gas fitness function hr good approach solve problem started programming looked good paper programming skills holding back finish project questions coding part guys strong questions strong good tutorial guideline manual genetic algorithm libraries decided jgap peoples suggestions threads find good tutorial internet examples provided jgap library figure happening hr ol start li constraint programming part apply specific library switch statements details li ol hr strong important question strong create timetable good programmer assume stuck step project creating timetable treat object sort data structure guys create timetable array linklist queue attempt creating timetable hr working project managed create timetable update classes previously shared hr hr hr hr hr mind code shown prototype attempt create timetable provide full documentation project hr helps hirad 

genetic algorithms solve university timetable scheduling problem production application strong worry library great ga libraries strong focus attention encode candidate timetables typically numeric representation math chemistry physics number represents unique class index number represents time class offered fitness function multidimensional array values representing population candidate schedules population compared student listing constraints applied clashing fitness calculated href https scriptbucket wordpress normalizing constraints multi objective fitness function rel nofollow fitness normalization importantly objects store timetable information simple integer arrays dramatically increase speed generic algorithm 