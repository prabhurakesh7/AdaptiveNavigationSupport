thread producer consumer efficient wait data produced 
blockingqueue consume data produced efficient method waiting data strong scenario strong strong step strong data list data store timestamps added timestamps required ordered closest current time priority list empty thread inserting timestamps strong produce strong strong step strong consume data thread timestamps data check current time strong consumer strong strong produce strong strong step strong current time send thread consumed processed time stamp data processed remove step data store strong consume strong edit original list code data field refers data store step results list timestamps current time step results consumed step strong questions strong efficient wait data added data list potentially empty focus earlier href http stackoverflow questions return intermediate results thread question 

blockquote efficient wait data produced blockquote blocking functionality suspend threads waiting queue empty full case spinning queue consume cpu preferred blockquote suspending retrieves removes head queue waiting element blockquote href http docs oracle javase docs api util concurrent blockingqueue html rel nofollow blockingqueue efficient wait elements queue suspending threads consume cpu item put queue waiting threads woken waiting semantics queue full hr updating based comments blockquote case timestamps created sequential order added timestamp future head node mins future node min node processing blockquote follow blockquote priority queuing based timestamp localdate blockquote localdate jodatime lets assume blocking semantics priority aspect blockingqueue enqueue elements based order defined case elements ordered oldest youngest youngest oldest case process natural order order enqueued jodatimes localdate implement similar strong edit strong realized tagged jodatime jodatime localdate implement comparable create 