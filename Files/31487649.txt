integrating box2d body creation entity component system 
strong background strong developing game libgdx recently learned entity component systems decided ecs libgdx ashley applies box2d entity component system strong problem strong creating box2d body attaching shape complex basic bodydefs fixturedefs copied bodies fixtures created reusable game objects shape share fixturedef parts bodydef remain type objects position keeping parts bodydef changing position reuse static bodydef changing position variables time body create create bodydef create bodydef time impact memory usage performance creating 

action situation focus game logic design pattern conventions optimization techniques happy game profiling tools determine game libgdx set href https github libgdx libgdx wiki profiling rel nofollow tools objects construction extremely simple bunch primitives set defaults memorywise floats booleans boolean jvm maximum byte references 64bit roughly bytes give object source href https github jbox2d jbox2d blob master jbox2d library src main org jbox2d dynamics bodydef rel nofollow shouldnt problem limit scope definition objects body destruction shouldnt references tracing back definitions marked cleanup automatically ecs dont fits question heres info href https en wikipedia org wiki entity component system rel nofollow ecs href https github libgdx ashley wiki ashley rel nofollow libgdx ecs 