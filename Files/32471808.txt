bearer authentication wildfly keycloak 
implementation bearer authentication wildfly essence steps ol li receive request check authorization header li li obtain token check database case redis validity li li obtain role user database li li annotation rest services li ol modify wildfly configuration files interfaces implement pass role user security context wildfly check answering experienced programmer wildfly skip details programming logic wildfly configuration answer dont worry token redis place client obtained strong edit strong luck implemented implements including main filter function implemented helper functions roles database included end function set security context request context user profile role work annotations jax rs rest services pointers modified wildfly configuration files web xml file filter called request log messages request 

yeah work ee environment making resource class stateless bean annotation meant ejbs case principal retrieved servlet request implements authorization filter annotation checks principal security context href https github jersey jersey blob master core server src main org glassfish jersey server filter rolesalloweddynamicfeature l85 rel nofollow jersey implements jersey specific class reflection resourceinfo getresourcemethod pretty copy code youre register application annotate scanned make authentication filter annotated called authorization filter annotated hr h2 update h2 refactor code linked doesnt jersey specific classes changed explain bit works lets change context discussion current implementation filter processed request lets introduced custom annotation annotation annotate methods classes make methods classes annotated filtered filter introduce checks annotation register filter annotation found register class make methods classes annotated filtered alternatively em em filter reference check annotation move completely forget giving demonstration purposes block code understand registers filter methods classes annotated refactor annotation logic filter feature filter purposes registration works registering resource class provider class authentication filter register register scanning annotations scanned current annotating feature class register empty subclass scanning happen explicit registration subclass disable scanning couple things make clear isnt working ol li make current annotated ensure authentication filter called authorization filter happen authentication filter sets security context authorization filter checks li li make creating security context correctly authorization filter call passing roles annotation make implements correctly li ol 