stream skip behavior unordered terminal operation 
read href http stackoverflow href http stackoverflow questions doubt observed behavior intended jdk authors lets simple input numbers lets create parallel stream combine ways collect result filtering step essentially adds difficulty stream engine exact size output optimizations turned results results completely fine works expected case asked skip elements collect list order case asked skip element turn unordered skip element dont care case turned unordered mode skip arbitrary elements lets skip element collect custom collection unordered mode custom collection output satisfactory general expect long stream ordered skips elements skips arbitrary lets equivalent unordered terminal operation output result achieved unordered terminal operation removing step case step correctly makes stream unordered starting current operation unordered terminal operation makes stream unordered starting beginning affect result completely misleading expect unordered collector turning stream unordered mode em terminal operation em equivalent ordered collector questions ol li behavior intended bug li li documented read href https docs oracle javase docs api util stream stream html skip long rel nofollow stream skip documentation unordered terminal operations href https docs oracle javase docs api util stream collector characteristics html unordered rel nofollow characteristics unordered documentation comprehend ordering lost stream finally href https docs oracle javase docs api util stream package summary html ordering rel nofollow ordering section package summary cover case missing li li intended unordered terminal operation makes stream unordered step makes unordered point rely behavior lucky tests work nicely li ol 

recall goal stream flags ordered sorted sized distinct enable operations avoid unnecessary work examples optimizations involve stream flags ul li stream sorted op li li size stream pre allocate correct sized array avoiding copy li li input meaningful encounter order extra steps preserve encounter order li ul stage pipeline set stream flags intermediate operations inject preserve clear stream flags filtering preserves sorted ness distinct ness sized ness mapping preserves sized ness sorted ness distinct ness sorting injects sorted ness treatment flags intermediate operations fairly decisions local treatment flags terminal operations subtle ordered relevant flag terminal ops terminal op unordered back propagate unordered ness pipeline constrained operate order work sorting list completely wasted effort back propagate information hit short circuiting operation lose optimization opportunity similarly optimized implementation unordered streams blockquote behavior intended bug blockquote back propagation intended optimization produce incorrect results bug part propagating past previous shouldnt back propagation unordered flag overly aggressive bug post bug blockquote documented blockquote implementation detail correctly implemented wouldnt notice streams faster 