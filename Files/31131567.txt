externalization transient 
thinking purpose externalisation simply label property prevent serialisation research found approach labelling ideal decide whats required run time theoretically makes sense practically dont externalisation run time friendly decide whats required definition class run time friendly document highlighted blockquote automatically care implementing serializable interface implement externalizable interface bother define methods simply complete control process lets sample understand suppose object hundreds fields transient fields stored persistent storage solution declare fields serialize transient default serialization process automatically care fields fixed design tiime conditionally decided runtime situation implementing externalizable interface solution similarly scenarios simply dont maintain state superclasses automatically maintained serializable interface implementation blockquote 

field serialized runtime declared field transient made decision serialize compile time property unable changed runtime reflection flexibility externalizable determine serialization scheme encrypting objects sensitive usecase potentially option attach hash end class maximum reliability field determine save hash extra computation bottom line doesnt give runtime control serialization object field serialized compile time parameter hr disclaimer terrible scheme save passwords production application plaintext passwords saved passing pbpdfs bcrypt pbkdf scrypt 