minimum cost connect cabins 
big government organisation set office bangalore office build rectangular shape floors rectangular shape dimension office units units floor office large sitting capacity employees cabins employees square form area floor divided cabins dimension unit unit diagram href http stack imgur maxtu jpg rel nofollow img src http stack imgur maxtu jpg alt enter image description image means employees pass files np means employees pass files shown floor size unit unit cabins floor unit unit cabins cabins attached cabins attached passing files cabins easy cabins attached passing files cabins cabins shown figure np labels cabin pass files attached part cumulatively forms full passing region floor divided regions due passing cabins regions left organisation correct cabin positions np regions cost np cabin cost fact correcting np cabins work organisation concern connect regions np cabins converted cabins challenging task organisation organize cabins cost href http stack imgur e8lao jpg rel nofollow img src http stack imgur e8lao jpg alt enter image description left figure represents cabins situation np figure written cabin cost required organize cabins floor shown figure cabin cost means cost required organize cabins np cabin positive cost regions regions consist cabin challenge organisation connect regions cost ways ways href http stack imgur s4sfm jpg rel nofollow img src http stack imgur s4sfm jpg alt enter image description cost method cost method organize np cabins cost connect cabins cost return minimum cost cabins attached output specifications integer specifies minimum cost cabins attached return cabins attached cabins code array array minimumcost function returns answer test cases correct find mistake code checked atleast cabin traversed directions neighbours linked list queue keeping track minimum reach cell end found maximum 

suggest dijkstra approach create union find data structure entries cell list np cells merge entries neighboring cells sort np cells cost cost paid description state put initial state ordered list ordered cost paid check union find connected component youre proceed state cost list choose np cell cost remove list add state state list create copy state add entry chosen cell union find structure merge neighboring cell cells exist union find structure update cost state insert ordered list continue connected component left union find structure basically finding shortest path state graph graph exponentially large dont compute entire optimization check state insert list present hash set 