implimentation c3p0 web application correct pros cons implimentation 
implement connection pooling web application servlet jsp pages dont connection pooling application server implement connection pool servlets working implementation c3p0 dont correct expected result implementation datasource file c3p0 implementation return connection connection retrieved servelet init method closed destroy method ul li type implementation give expected result li li close connection destroy li li ways implementing connection pooling servlet app li li move db related actions separate classes case things care connection servlet pass db methods case li li give pros cons current implementation li ul find connection pooling implementation datasource file returns connection servelt connection strong datasource file strong strong servlet strong welcomes suggestions small large helps improve code advance 

improved servlet acquire reference datasource hold connection object outstanding life servlet objects acquired connection pooling datasource needed basis held open long periods time method acquire connection fast pool care call connection finally block important change ickiness poor resource holding connection open forever current architecture simultaneous requests servlet operate concurrently connection lead unexpected incorrect behavior servlets webapp make transactions nontrivial applications datasource class doesnt construct c3p0 datasource defining kind object method motivation static member true datasource store datasource static memberm wrap actual datasource place hold connection pool backed datasource javaee web application static member approach construct datasource store datasource application scope call c3p0 remove application scope 