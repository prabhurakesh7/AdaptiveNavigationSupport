fast save retrieve data 
order add data persistance oriented billing software save retrieve data situation work javafxs tableview populated custom objects string int booleans representing bill user add read edit data fly stored locally cloud serialization write objects fast store custom objects xml serialization local database javadb fast user write edit data problem small loading time app launched dont encrypted data wont lost corrupted eventually multiple solutions 

persistence mechanism flat file relational db nosql designed unsafe abused misunderstood question open ended question involved light depends typically choices ul li flat file binary serialisation csv json xml simple mechanism takes effort scale large files care making code base prevent older files readable bare mind data written relation coming user possibility machine crash transactions data corrupt simple topic format religious war fought typically textual format json xml csv advantage human readable helps debugging maintenance tasks xml json support nested structures advantage csv performance text manipulation typically slows parser 10x compared binary fast implementations slow 10k objects notice difference li li relational database apps benefit relational queries sql lot effort making transactional robust machine crashes generally persistence mechanism choice large businesses require knowledge setup maintain db h2 simple low cost entry provider oracle extreme end spectrum relational databases suffer domain mismatch specifically object design sql design map effort developer typically suffer scaling problems clusterable problem 10k rows li li sql databases redis cassandra mongo couch neo4j generally transactional faster relational dbs offer clusters making robust support data modelling paradigms graph list document making nosql landscape richer relational sql li ul assume working professional project lack mentor wrap suggesting focus flat files pick db product kind experiment h2 good learning relational products mongo redis ease learning nosql products 