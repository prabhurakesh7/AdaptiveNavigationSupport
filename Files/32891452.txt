understanding dagger app architecture 
head dagger dependency injection figured good official href https github google dagger tree master examples simple src main coffee rel nofollow coffee read official documentation github page found confusing newcommers image stripped classes colored understand whats doubts href http stack imgur 4rchj png rel nofollow img src http stack imgur 4rchj png alt coffee classes questions heard di passing dependencies constructor makes code verbose amount code classes enormously exceeds supply parameters constructor code human friendly advantage strong pumpmodule strong declares provider takes thing supposed provide parameter tad counter intuitive whats lost coffeapp wheres daggercoffeapp coffe android studio find 

strong answer strong blockquote amount code classes enormously exceeds supply parameters constructor blockquote code small app normal sized big app hunders thousands times provide parameters constructor advantages di extend forces create modular apps modules developed strong tested strong isolation sound big deal app grows bigger hard add breaking things develop module isolate rest app defining interfaces provide needed functionality define interfaces months version decide change extend rewrite module modules affected long dont change interface write replacing module switch method big advantage di easily feed mock objects unit tests lets gps location provider detect location test di run app emulator debug mode provide manually fake locations breakpoint inspect activity expected state di easily feed mock location provider simulates gps location updates predefined values run app manually emulator real device run automatically part unit tests continuous integration server process jenkins time change code run tests immediately broke automatic tests save strong strong time minutes manual test automatic test seconds important run attention input running info recommend great video jake wharton href https www parleys tutorial 5471cdd1e4b065ebcfa1d557 rel nofollow https www parleys tutorial 5471cdd1e4b065ebcfa1d557 slides video href https speakerdeck jakewharton dependency injection dagger devoxx rel nofollow https speakerdeck jakewharton dependency injection dagger devoxx strong answer strong blockquote pumpmodule declares provider takes thing supposed provide parameter blockquote provider strong interface strong concrete class point migrate app di create interface class injected explained answer easily replace concrete implementation mock object testing implementation versions app point decide rotary vane pump write class simply change method works simplified explanation ol li di graph built answer li li point dagger finds code li li dagger sees pump injected seeks di graph provide li li finds method dagger sees requires object li li dagger seeks di graph provide li li method module parameterless constructor dagger instantiate object li li object instantiated type li li dagger feeds object actual parameter li li returns object return li li injected field li ol automatically dont care strong answer strong generated dagger order android studio generated classes href https bitbucket org hvisser android apt rel nofollow https bitbucket org hvisser android apt blockquote blockquote magic builds dependency graph checks strong compile time strong dependencies satisfied compile time differentiates dagger di frameworks unable validate graph compile time miss define dependency ugly runtime error order work build graph call 