conditionally add operation stream 
wondering add operation stream based sort condition set stream add limit operation stream variable equal code examples streams stream object reassigned result intermediate operation applied stated href http stackoverflow questions stream lazy evaluation stackoverflow post filter isnt applied terminal operation called reassigning stream terminal operation called code proper streams 

semantic difference chained series invocations series invocations storing intermediate return values code fragments equivalent case method invoked result previous invocation case intermediate results stored lost invocation case stream api intermediate results em em called method chaining natural stream intrinsically ensures don invoke method returned reference wrong store reference stream long obey contract returned reference question overwriting variable result invocation ensure don invoke method returned reference correct usage works intermediate results type stream reference type overwrite local variable careful local variable long invocation wrong intermediate storage em em store code equivalent alternatives equivalent invoked result invoked result doesn matter result final operation invoked closing affects entire stream pipeline hr put sentence correct hr em prefer em chaining operation don apply limit cleanest expression intent worth noting suggested alternatives work lot cases em em semantically equivalent assumes maximum number elements encounter streams elements infinite stream source breaking lazy evaluation stream principle mutable stream source legally arbitrarily changed point terminal action commenced result reflect modifications made point add intermediate operation incorporating actual size list point subsequent modifications applied collection point terminal operation turn meaning intended limit semantic compare href http docs oracle javase docs api util stream package summary html noninterference rel nofollow interference section api documentation blockquote behaved stream sources source modified terminal operation commences modifications reflected covered elements code list created consisting strings stream created list list modified adding string finally elements stream collected joined list modified terminal collect operation commenced result string blockquote rare corner case programmer formulate entire stream pipeline modifying source collection semantic remains turn hard find bug enter corner case equivalent stream api recognize values limit implies stream implementation track number processed elements ensure limit obeyed adding operation significant performance advantage adding limit number programmer expects exceeded 