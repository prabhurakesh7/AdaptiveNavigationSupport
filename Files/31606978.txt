odd behaviour deleting files files delete 
class pom xml pre class lang prettyprint override write fileoutputstream delete file em closing stream em original problem wrong leads strange observations run main method windows produces output pre class lang prettyprint override ul li call files delete throw exception li li call files exist return false li li create file anew li ul question noticed file visible explorer stop breakpoint terminate jvm file deleted closing stream deleteandcheck works expected deletion propagated os closing stream files api reflect properly explain whats happening strong pom xml strong pre class lang xml prettyprint override strong update clarification strong file disappears windows explorer stream closed files delete called operation triggers files delete called closing stream jvm terminated 

strong delete open file strong perfectly valid delete directory entry file file opened unix default semantics windows behaves similarily long href https msdn microsoft en library windows desktop aa363858 28v aspx file share delete rel nofollow set file handles open file edit couling discussions corrections slight difference unix strong deletes file em em immediately strong windows strong deletes file handle closed strong prevents opening file handle deleted file closed figure systems deleting file necessarily make file occupies space disk long open handle space occupied file released open handle closed strong excursion windows strong flag windows makes people windows delete open files true em default em behaviour situation improved fact windows api documentation deliberately vague process href https msdn microsoft en library windows desktop aa363858 28v aspx file share delete rel nofollow blockquote enables subsequent open operations file device request delete access processes open file device request delete access flag file device opened delete access function fails delete access delete rename operations blockquote href https msdn microsoft en library windows desktop aa363915 28v aspx rel nofollow blockquote deletefile function marks file deletion close file deletion occur handle file closed subsequent calls createfile open file fail error access denied blockquote open handle file typical methods creating unnamed temporary files create file open delete file handle file open unix filename windows open file question strong href https docs oracle javase docs api nio file files html newoutputstream nio file path nio file openoption rel nofollow files newoutputstream set strong href https docs oracle javase docs api nio file files html newoutputstream nio file path nio file openoption rel nofollow source defaults reset standard href http hg openjdk net jdk8 jdk8 jdk file 687fd7c7986d src windows classes sun nio fs windowschannelfactory l80 rel nofollow delete opened files explicitly locked strong create deleted file strong answer hidden documentation file marked deletion file windows create file em em file marked deletion file em properly em deleted handles file closed confusion mixing deletion actual file deletion windows disallows deleting open files default place strong return strong deep end windows strong opens file point open deleted open file windows strong detail code calls href https docs oracle javase docs api nio file spi filesystemprovider html checkaccess nio file path nio file accessmode rel nofollow arguments calls href http hg openjdk net jdk8 jdk8 jdk file 687fd7c7986d src windows classes sun nio fs windowsfilesystemprovider l324 rel nofollow straight open file fails path call code path calls href https msdn microsoft en library windows desktop aa364944 28v aspx rel nofollow retrieve file attributes documented retrieve attributes em deleted removed em file retrieve file attributes file em marked deletion em guessing id calls href https msdn microsoft en library windows desktop aa364952 28v aspx rel nofollow point file handle place file practical purposes shows directory listings open file original file handles closed behaviour consistent check file exists em file accessibility em check interpreted em file exists em href https msdn microsoft en library windows desktop aa364418 28v aspx rel nofollow windows explorer determine file list finds file em names em tells em accessibility em names weird loops head 