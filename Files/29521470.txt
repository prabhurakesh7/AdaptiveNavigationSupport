delegate javafx task thread static method 
general class static methods static variables hibernate configuration settings methods return list hitting database working javafx recently learned task time consuming operations hitting db long list data case created task object wrote code anonymous class code hitting db login credential task return instance list intialized thread object inside static method passed tasks object constructor set daemon true started thread nullpointerexception running application img src http stack imgur e9lpa png alt exception combinations random permutations things worked commenting thread code substituting task run happened task run static list worked converting list static removing thread instance task run number side make code work dunno reasons greatly humbled explanations advance 

strong happening strong creating task calling thread executed em asynchronously em thread created calling executes method current thread code thread deterministic behavior words predict code result issue accessing shared instance threads control order access initially call ol li create task li li configure task set result query task completes happen fx application thread li li create thread execute task li li launch thread causing task executed asynchronously li li return li ol task executing asynchronously control task completes reaches statement reaches statement task completes handler task invoked return task updates return happen task accessing database slow expect null pointer exception task complete em em complete invocation handler reaches statement time reaches statement updated returns set task highly actual guarantee live due complexities language specification relationship threads memory invoke fx application thread strong guaranteed strong return handler possibly invoked completes method invocations running thread fx application thread strong fix strong avoid accessing shared variable threads proper synchronization synchronizing difficult typically high level api manage api designed general api generally avoid managing threading exception handling data access object class client code wrap calls dao threading code make method generally horrible javafx ui code dao method run asynchronously supply callbacks executed succeeds fails ui strong improvements strong ol li properly generically typed raw type type safety li li href http docs oracle javase docs api util concurrent executor html rel nofollow managing thread creation li ol strong caveat strong code typed testing typos give idea 