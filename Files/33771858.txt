implement bit stealing references 
algorithms lock free wait free data structures algorithms steal significant bits pointer arent status bits node logically deleted figured id atomicstampedreference bit stealing realized solve aba problem atomicstampedreference track node changed youre aba problem wikipedias wonderful explaining badly things screwed href https en wikipedia org wiki aba problem rel nofollow https en wikipedia org wiki aba problem reason solve aba problem atomicstampedreference based post href http tutorials jenkov util concurrent atomicstampedreference html atomicstampedreference problem rel nofollow http tutorials jenkov util concurrent atomicstampedreference html atomicstampedreference problem integer atomic stamped reference track things logical deletion anymore steal unused bits reference access unsafe package task calling error eclipse access restriction type unsafe accessible due restriction required library program filesjavajre1 40lib jar ideas youre curious implement thread lock free hashmap school project lsb bits differentiate node types data node marked data node array node edit mention status bits inside atomic reference reason compare swap operations compare swap fail data node marked turned arraynode originally integer atomicstampedreference anymore atomicstampedreference reserved prevent problems caused aba 

impossible steal bits references ended stealing bits atomic stamped reference stole msb bits integer stamp status bits remaining bits integer counter lets bit operations integers href https docs oracle javase tutorial nutsandbolts op3 html rel nofollow https docs oracle javase tutorial nutsandbolts op3 html implemented tested concurrent hashmap code solves aba problem track reference pointing node marked node arraynode type outcast making suggestion stealing bits integer atomicstampedreference strong edit strong ill post functions wrote lower bits integer counter upper bits flags functions integer atomicstampedreference input output depends function hope helps similar situation 