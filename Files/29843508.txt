conventions accessible data public accessors getters naming 
api numerous occurrences conflicting naming practices confusing strong strong href http grepcode file repository grepcode root jdk openjdk b14 lang string string class private variable integer track size string returned getter move type arrays getter method length pass variable public accessor obtained moving back string class method getter similar getter performs slightly logic return personally creating getter prefix redundant type versus feel deeper meaning naming inconsistency doesnt getter kind shed light 

getters setters bean specification reasons multiple ul li developers expect accessors named li li api respecting conventions easier discover ide ill press kbd ctrl kbd kbd space kbd discover information object li li apis frameworks rely conventions work jsp el mvc frameworks populating beans request parameters jpa dependency injection frameworks spring li ul em em getter private variable holds information matters encapsulation public api prevents computing getter private field 