testng unit test working annotating service test retention transactional inherited 
testing business service testng mockito unit tests spring boot application application multi module spring boot project writing unit tests business module added dependencies related testing pom wrapper annotation testapp business service mytestclass dont annotations mock dao calls test works fine annotations explicitly perform single task multiple business service strong wont happen transaction strong words business call multiple business services call exception occurs database wont rollback strong annotations works mock dao calls junit tests works strong wrong dependencies pom ol li working li li solution li ol href https github prashant shilimkar spring boot testng strong git repository source code strong sample code giving error compiling 

recommend tests simple profit di benefits details visit href http docs spring io spring boot docs current reference html boot features testing html rel nofollow spring documentation blockquote major advantages dependency injection make code easier unit test simply instantiate objects operator involving spring mock objects real dependencies blockquote test class check null address list implementation test fails provider class test user instance address list initialized 