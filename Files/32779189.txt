internal architecture compiler 
working years week small meeting company colleague asked work answer explaining compiler takes statements converts byte code targeted satisfied answer main question compiler works steps stages phases compiler case compiling file architecture multiple file classes compiled imports pointing compiled classes compiled classes compiled googled half day providing answer gave colleagues finally found tutorial href http www bearcave software comp arch html tutorial covering depth visualize tutorial satisfied eager learn blog visualize internal architecture explain 

basic steps ol li parse reads set source files maps resulting token sequence ast abstract syntax tree nodes li li enter enters symbols definitions symbol table li li process annotations requested processes annotations found specifed compilation units li li attribute attributes syntax trees step includes resolution type checking constant folding li li flow performs dataflow analysis trees previous step includes checks assignments reachability li li desugar rewrites ast translates syntactic sugar li li generate generates source files class files li ol details ol li lex break source file individual words tokens li li parse analyze phrase structure program li li semantic actions build piece abstract syntax tree phrase li li semantic analysis determine phrase means relate variables definitions check types expressions request translation phrase li li frame layout place variables function parameters activation records stack frames machine dependent li li translate produce intermediate representation trees ir trees notation tied source language targetmachine architecture li li canonicalize hoist side effects expressions clean conditional branches convenience phases li li instruction selection group ir tree nodes clumps correspond actions target machine instructions li li control flow analysis analyze sequence instructions control flow graph shows flows control program follow executes li li dataflow analysis gather information flow information variables program liveness analysis calculates places program variable holds needed live li li register allocation choose register hold variables temporary values program variables live time share register li li code emission replace temporary names machine instruction machine registers li ol nice book blockquote modern compiler implementation blockquote inside javac code href http openjdk net groups compiler rel nofollow javac documentation href http hg openjdk net jdk7 rel nofollow openjdk source code href http scg unibe ch archive projects erni08b pdf rel nofollow hackers guide javac href http openjdk net groups compiler doc hhgtjavac index html rel nofollow dont panic newcomers javac navigate code base href http docs oracle javase specs jvms se7 html index html rel nofollow jvm jls 