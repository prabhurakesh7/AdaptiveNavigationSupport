inject annotation concrete class instantiate interface 
developing android app dagger2 confused strong inject strong annotation concrete classes implementing interface class strong injecting concrete class client inject strong inject annotation decide concrete class instantiate strong strong interface strong product strong total concrete classes productone producttwo strong productone class strong packaging class client strong packaging strong till moment package class instance productone class strong confusion strong concrete class producttwo inject annotation strong packaging class instance producttwo class inject annotation work moment strong 

assuming made mention modules components arent overly familiar work wont work dagger doesnt order produce product productone producttwo classes dagger process marked inject automatically assume implement product reason wouldnt case create binding productone producttwo interface product module module set reusable bindings validated component component thing encapsulates information manages creation modules bindings factories created classess inject constructors create component dagger fail mentioned doesnt produce product error product provided annotated method packager product product parameter product product means create object find suitable binding parameter address module binding create call order call create youve marked constructor producttwo create module component problem qualifier case custom named qualifiers tightly couple injection point specific implementation required cases long instances time port wouldnt confused youd qualifiers differentiate case users packaging productone producttwo packager productone producttwo directly avoid interface approach parts code packager implementations production tests implementations annotated qualifier youd variety technique 