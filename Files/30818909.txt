delaunay triangles point connectivity 
watching video href https www youtube watch cai6edogbfy amp feature youtu amp list uu4i6i hbjqzbc pc7l8gb1a rel nofollow delaunay triangulation generate procedural content pretty hard time figuring work class supplied guess finally figured question point connected point easy setup points testing points eventually supplied rooms generated drawing points lines triangles visualization understanding assuming correctly points triangles drawn correctly drawing double lines someway filter interested connectivity drawing triangles side side generate meshes href https www youtube watch cai6edogbfy amp feature youtu amp list uu4i6i hbjqzbc pc7l8gb1a rel nofollow video mentioned top notice lines removed death ends seconds movie calculated colored leaves nice mix death ends loops interested achieved 

compute set em edges em resulting triangles simply create class special properties ul li method returns vertices edge compare swapped edge considered equal edge li li method implemented consistent implementation noted href https docs oracle javase docs api lang object html hashcode rel nofollow object hashcode documentation blockquote objects equal equals object method calling hashcode method objects produce integer result li ul objects simply put care rest duplicate edges added set eventually edge blockquote program print omitting edge considered equal edge convert set back plain array edge indices point question 