event driven board game gui connect 
making board game funny bunny childrens game made text based building gui swing trouble made gui tough gui fairly easy make find incredibly hard combine game gui ill explain basic idea game game ul li players game pieces li li deck special card run game types move steps card changing board li li turn consists player revealing card blockquote move card move piece change board card board holes open places board arent game pieces drop hole blockquote li ul idea game fairly simple strong trouble idea make work gui strong tought itd started enthuastically building gui made game view ill add picture main menu number players menu stuff realize dont make work event driven game href http stack imgur i3ykd png rel nofollow game view work progress mind colors id gui version work lines bunch menus setting players stuff game view player reveals card pushing show card based type card enter stage move game piece happen clicking game piece button side piece game board start move piece process requires updating board end change board updating gui board strong lost strong threads swing worker people sample code thatd ill post requires translating comments stuff didnt randomly post parts code comments feedback highly appreciated helpful mention lost stuck 

youll foster concept href http en wikipedia org wiki model e2 93view e2 93controller rel nofollow model view controller idea separate program layers responsibility h2 model h2 model responsible maintaining data stateful information program model event notifications state interested parties h2 view h2 responsible representing current state model screen direct connection user responsible collecting user input handed h2 controller h2 responsible binding controller takes input view makes modifications model based rules controller control information flowing model view implements mvc view model connection communicate controller good bad kind bad controller double communications coming model pass view acting proxy duplicate code good protects view model modifications controller based rules tend follow model swing hides controller view coupled concept relates idea href https www google au webhp sourceid chrome instant amp ion amp espv amp utf code 20to 20interface rel nofollow code interface implementation means model view controller contract details flexibility change implementation lets add network play ability change entire program structure components communicating defined interfaces intention separate responsibility layer deal set problems mixing code means change layers time adversely affecting rest program tightly coupled youre completely confused href http stackoverflow questions swing actionlisteners belong mvc pattern demonstrates login mvc 