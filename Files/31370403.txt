storing graphics objects good idea 
process writing paint program designed flexible comprehensive functionalities stemmed final project wrote overnight day tons tons bugs tackling save files empty rectangles dont draw circles time add undo redo functionality program undo idea save copies time event fired images 1920x1080 resolution figured wouldnt efficient storing gigabytes memory reason simply paint thing background colour undo brushes paint based layers single layer considered cloning objects paint havent couple questions ul li wasting pointless memory cloning li li necessarily li ul 

storing object bad idea heres instances short lived paint draw kind surface typically holds state drawing operations colors stroke scale rotation hold em result em drawing operations pixels wont achieve undo functionality pixels belongs component image rolling back previous object modify pixels back previous state heres approaches works ul li chain commands command pattern modify image command pattern works nice undo redo implemented swing awt render commands sequence starting original pro state command large allowing steps undo buffer memory con lot operations slow li li operation store entire originally pro easy implement con youll run memory fast tip serialize images making undo redo taking memory cost processing time li li combination command pattern chain idea optimizing rendering snapshots reasonable meaning wont render beginning operation faster flush serialize snapshots disk avoid running memory memory speed serialize commands disk virtually unlimited undo pro works great con time li ul ps background thread similar update displayed image store commands images disk background responsive ui good luck 