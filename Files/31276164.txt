rxjava schedulers cases 
rxjava href http reactivex io rxjava javadoc rx schedulers schedulers html schedulers choose blockquote ol li strong strong creates returns scheduler executes work immediately current thread li li strong trampoline strong creates returns scheduler queues work current thread executed current work completes li li strong newthread strong creates returns scheduler creates thread unit work li li strong computation strong creates returns scheduler intended computational work event loops processing callbacks computational work perform io bound work scheduler schedulers strong io strong li li strong io strong creates returns scheduler intended io bound work implementation backed executor thread pool grow needed asynchronously performing blocking io perform computational work scheduler schedulers strong computation strong li ol blockquote h2 questions h2 schedulers pretty explanatory confused strong computation strong strong io strong ol li io bound work dealing streams files database queries downloading files accessing rest apis li li strong computation strong strong newthread strong strong computation strong calls single background thread background thread time li li bad call strong computation strong io work li li bad call strong io strong computational work li ol 

great questions documentation detail ol li backed unbounded thread pool sort thing youd computationally intensive tasks stuff doesnt put load cpu yep interaction file system interaction databases services host good examples li li backed bounded thread pool size equal number processors schedule cpu intensive work parallel processors thread creation overhead context switching overhead threads vie processor potentially big performance hit li li leave cpu intensive work wont good cpu utilization li li bad call computational work reason discussed unbounded schedule thousand computational tasks parallel thousand tasks thread competing cpu incurring context switching costs li ol 