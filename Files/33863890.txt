unit testing code relies constant values 
totally contrived test throws exception called length greater number ways tested disadvantages replicates constant testing case smaller silently longer edge case paired separate case test side edge larger fail changed manually bad thing disadvantages avoided adding getter changing test test changed constant hand exposing constant private significant flaw testing methods test give false positive methods broken alternative approach constant inject dependency constant mocked part test mockito adding lot complexity lot assuming reason inject dependency stage preference approach exposing constants hardcoding values test ideal alternative lack testability cases demonstrating design flaw 

href http stackoverflow users tim biegeleisen tim alluded comments goal make software behaves specifications specification maximum length point itd unnecessary test world length heres question em youll class constant em quoted constant vary programmatically constant ul li em em change symbolic constant comparing directly testing based make code tests hard understand make hard change reason vary number recommended li li em em change private named constant static final field code easy change tests wont automatically adjust code ul li relax package private visibility tests package javadoc documentation annotations href http google github io guava releases api docs google common annotations visiblefortesting html rel nofollow make intentions clear nice option constant intended opaque unavailable class url template authentication token li li make public constant consumers class em constant length public static final field em assumption pieces system ui validation hints error messages li ul li li em change em accept instance form dependency injection counting constant integer dependency good idea wanted tests maximum length production testing practicalitys sake em make flexible length validator option good upgrade static final field em li li em change instances lifetime em bother di style em provider em point query interactively doesnt behave constant length thatd overkill maximum allowed memory maximum simultaneous connections pseudo constants li ul short youll decide control pick choice default make visible field constructor parameter tend good balance simplicity flexibility 