optimize code biginteger operations execution time 
program takes input number generates palindrome greater input number digits implemented program jdk class code code works inputs input output br input output br input output br input 123456789123456789 output generated br optimize code larger inputs 

arithmetic involved number palindrome converting number string comparing string reverse option write method start convert string invoke method till palindrome approach heavy creating object keeping adding trick convert number string setting characters end indices matching character start index lets number process ol li li li char greater char set end char start char case current startchar endchar smallest palindrome larger number character replace number em strong em strong char greater char set char char exit li li weve decreased number setting index lower lets increase index number em strong em strong change em strong strong em li li start end repeat step find character index index li li stage number li li weve algorithm stop result li ol suppose number step number em strong strong strong strong em continue step ul li end index strong strong start index strong strong character set end index character start index character number em strong strong strong strong em repeat step li ul condition reaches palindrome string heres code algorithm strong strong algorithm hasnt considered case number palindrome ill leave minor thing 