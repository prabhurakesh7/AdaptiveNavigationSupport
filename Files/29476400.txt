legitimate static initializer 
remember couple years ago static initializers call class level setup operations remember bizarre behaviors decided steer clear messing top bottom order newbie encountering revisit make concise fashionable data driven classes maintain static list instances imported database dozens table driven classes pattern concise tightly couples class source data instances discovered goodness google guava eventbus update static list event posted create static final boolean variable call static method initialized registration annoying quickly compiler throw warnings subscribed variable added clutter wondering kosher static initializer decouple classes thoughts 

blockquote wondering kosher static initializer blockquote funny thing compiled bytecode needless static variable strictly worse hr blockquote ready scale di driven framework blockquote discover href https github google guice rel nofollow guice dont call framework easy lets rid manually rewrite class dropping static modifiers pass verbose stating dependencies explicitly test classes isolation test hitting database matter trivial method test problem coupling instance list test behavior dependent contents loaded db fill db correspondingly big pain starters id create move static functionality order easy transition id create em temporary em class static helpers deprecate replace di guice manually hr href http programmers stackexchange find guice small projects overhead tiny configuration 