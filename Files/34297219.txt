spring websocket sockjs stomp client side design 
integrating spring web sockets web application calls taking long time ajax understanding design choices thinking option open socket connection user logs application sockjs connection send messages subscribe calls make question design user closes browser socket connection stay open open socket connection call close recieving message takes lots resources establish connection time pretty spring websocket sockjs stomp stuff understanding wrong advance 

ol li user closes browser strong web socket strong disconnected handle server side notify users li li open web socket connection browser loading time save connection browser open don disconnect connection call stop sending data packet li ol design links href http www sergialmar detect websocket connects disconnects spring rel nofollow detecting websocket connects disconnects spring href https github rstoyanchev spring websocket portfolio issues rel nofollow official issue disconnecting strong update march strong strong concurrency strong means strong connection strong handled strong threads strong work strong parallel strong threads count strong strong limited strong threadpool strong kind issues solved implemented strong spring web socket strong interested fundamental theories read href http stackoverflow answer 