method reference compile 
diving deeper features lambdas method references playing bit brought em question em line inside main method compile understood thing correctly referenced methods signature correspond functional interfaces sam signature case consumer requires signature method returns void 

language specification version href http docs oracle javase specs jls se8 html jls html jls rel nofollow blockquote method reference expression compatible assignment context invocation context casting context target type functional interface type href http docs oracle javase specs jls se8 html jls html jls rel nofollow expression congruent function type ground target type derived method reference expression congruent function type true ul li function type identifies single compile time declaration reference li li true ul li strong result function type void strong li li result function type result applying capture conversion href http docs oracle javase specs jls se8 html jls html jls rel nofollow return type invocation type href http docs oracle javase specs jls se8 html jls html jls rel nofollow chosen compile time declaration target type infer void compatible assignment context li ul li ul blockquote emphasis mine fact result function type void match href http docs oracle javase specs jls se8 html jls html jls rel nofollow jls specifically mentions void matching methods lambda expression notion em void compatible em block href http docs oracle javase specs jls se8 html jls html jls rel nofollow referenced href http docs oracle javase specs jls se8 html jls html jls rel nofollow equivalent definition method references havent find specific explanation jls tough nut crack missing relevant sections assume fact allowed invoke void methods statement assignment href http docs oracle javase specs jls se8 html jls html jls rel nofollow jls run time evaluation method references blockquote purpose determining compile time result method invocation expression expression statement invocation methods result void expression return statement invocation methods result void em effect determination compile time declaration method reference signature polymorphic em ul li em types parameters method invocation types arguments em li li em method invocation void return type object depending invocation method encloses method invocation void return type em li ul blockquote generated method invocation void match functional type 