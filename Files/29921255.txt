socket communicate processes originated machine 
transfer data process br familiar subject processes originated code files signals pipes code accomplish processes originated code code methods require linux native api jvm decided socket communicate processes couple questions ol li common socket communicate processes machine li li fact designated server client set obstacles implementation wise li ol reason read online process defined server client case situation socket purpose 

blockquote ol li common socket communicate processes machine li ol blockquote common class interaction patterns independently launched programs bidirectional communication channel easily pipes independently launched interferes fifos set quirks blockquote ol start li fact designated server client set obstacles implementation wise li ol blockquote distinction client server foremost roles establishing communication server sets communication interface waits clients open connection server necessarily imply supporting multiple clients concurrently serially necessarily imply communication passing socket connection established sockets em em client server designate process role choose arbitrarily trick sockets standard library supports supports em network em sockets unix domain sockets commonly unix linux applications communication inherently restricted processes running machine network sockets listening loopback interface serve purpose modern systems local tcp connections fast unix domain sockets problem 