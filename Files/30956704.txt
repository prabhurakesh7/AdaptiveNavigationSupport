scala future driven callback 
strong short version strong create completed trigger callback strong long version strong working application deals party soap services request user delegates multiple soap services simultaneously aggregates results sends back user system scalable multiple concurrent users user requests ends triggering web service calls call blocking system designed blocking apache cxf play framework system managed generate asynchronous ws client proxies enable async transport unable figure return future plays thread delegated multiple web service proxies results obtained callbacks strong option strong async method calls returning future href http stackoverflow questions scala concurrent future wrapper util concurrent future scala concurrent future wrapper util concurrent future thread convert future scala future result future blocks caller cxfs generated proxies return future option ruled strong option strong scala future cxf generates proxy interfaces intervene return scala future afaik akka scala futures future strong option strong callback approach async methods generated cxf return future takes callback object suppose provide callback result ready approach return future wait receive callback strong option strong promising ideas return promise completed receiving callback possibly thread waiting waiting result dont blocking thread nutshell build system making lot soap web service calls call blocks significant time system easily run threads case lot concurrent web service calls working finding solution blocking based ongoing web service calls time 

option good couple imports start illustrate point heres mocked cxf api takes callback create promise call api promise callback instance play app test block awaiting result point results href http corp api rel nofollow http corp api console 