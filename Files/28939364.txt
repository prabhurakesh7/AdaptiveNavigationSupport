jdbc connection validation performance auto commit meta data table 
researching connection validation options web server technologies ul li iplanet aka sun webserver li li apache tomcat li li glassfish li ul servers provide jdbc connection validation documentation find specifics type query connection validation performance impacts options ul li strong auto commit strong mode query statements executed committed individual transactions auto commit disabled query statements grouped transactions terminated commit roll back mechanisms li li strong meta data strong mode connections database provide meta information describing tables stored procedures instance meta data object query meta data object execute query cache results li li strong table strong method requires web server perform query user table li ul auto commit fairly explanatory mechanisms work table validation kind query simple select table simpler create basic table validation row column performing method validation strong bonus question strong servlet force web server reset jdbc connections pool servlet limited requesting jdbc connections directly effect jdbc resource security reasons 

basic idea connection validation ensure connection held pool valid connection actively connected database times happen pool situation pool believes connection active database server dropped connection devices web app router firewall drop connection pool application connection errored application returned connection bad state pool causing problems part application connection pool test validity connections pool times ul li application acquiring connection pool application connection good state li li application returns connection pool connections good condition returned pool li li application acquires connection pool returns connection pool li ul good practice test idle connections pool periodically pool continue hold bad connections good connection pool provide ways testing connections question test connection ensure connection connected database typically means running query query hit real table object database case oracle selecting dual case postgresql query hits database database good avoid hitting real table connection testing overhead minimum bonus question server administrators control pool reasons restrict number connections application consume pool configuration decide connections acquire drop pool application allowed fiddle pool application pool tamper pool 